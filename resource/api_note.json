{
	"Global": {
		"description": "全局函数，可以在没有任何类的情况下调用。",
		"DOTA_SpawnMapAtPosition": {
			"class": "Global",
			"function": "DOTA_SpawnMapAtPosition",
			"return": "int",
			"description": "在指定位置生成一个加载一个地形(.vmap)。bTriggerCompletion为true时，需要手动ManuallyTriggerSpawnGroupCompletion来完成地形加载。vPosition必须是64的倍数，否则创建失败。函数返回一个SpawnGroup。可以通过UnloadSpawnGroupByHandle(hSpawnGroup)卸载地图。",
			"server": true,
			"example": "-- Example 1\nfunction CMapRoom:LoadExitRooms()\n\tlocal hSpawnGroup = DOTA_SpawnMapAtPosition( \"base_map\", Vector(64, 64, 0), true, Dynamic_Wrap( CMapRoom, \"OnRoomReadyToSpawn\" ), Dynamic_Wrap( CMapRoom, \"OnSpawnRoomComplete\" ), CMapRoom )\nend\nfunction CMapRoom:OnRoomReadyToSpawn(self, hSpawnGroup)\n\tManuallyTriggerSpawnGroupCompletion(hSpawnGroup)\nend\nfunction CMapRoom:OnSpawnRoomComplete(self, hSpawnGroup)\n\tprint(\"OnSpawnRoomComplete\")\nend\n-- Example 2\nDOTA_SpawnMapAtPosition( \"base_map\", Vector(64, 64, 0), false, function ()\n\t\nend, function ()\n\t\nend, nil )",
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "sMapName",
					"description": "地形文件名"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "vPosition",
					"description": "位置"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bTriggerCompletion",
					"description": "是否手动完成加载"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "hReady",
					"description": "准备函数"
				},
				"handle_5": {
					"type": "handle",
					"params_name": "hComplete",
					"description": "完成函数"
				},
				"handle_6": {
					"type": "handle",
					"params_name": "handle_6",
					"description": "No Description Set"
				}
			}
		},
		"DebugDrawCircle": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawCircle",
			"return": "void",
			"description": "Draw a debug circle (center, vRgb, a, rad, ztest, duration)",
			"server": true,
			"client": true,
			"example": "DebugDrawCircle(GetGroundPosition(vPoint, nil), Vector(0, 0, 255), 32, 32, true, 0.5)",
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "vCenter",
					"description": "位置"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "vRGB",
					"description": "颜色"
				},
				"float_3": {
					"type": "float",
					"params_name": "iAlpha",
					"description": "透明度"
				},
				"float_4": {
					"type": "float",
					"params_name": "flRadius",
					"description": "半径"
				},
				"bool_5": {
					"type": "bool",
					"params_name": "bZtest",
					"description": "No Description Set"
				},
				"float_6": {
					"type": "float",
					"params_name": "flDuration",
					"description": "持续时间"
				}
			}
		},
		"RotatePosition": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RotatePosition",
			"return": "Vector",
			"description": "向量绕着中心点旋转",
			"server": true,
			"client": true,
			"example": "local hParent = self:GetParent()\nlocal vStart = hParent:GetAbsOrigin()\nlocal vForward = hParent:GetForwardVector()\nlocal tDirection = {\n\tvForward,\n\tRotatePosition(vStart, QAngle(0, -30, 0), vStart + vForward),\n\tRotatePosition(vStart, QAngle(0, -15, 0), vStart + vForward),\n\tRotatePosition(vStart, QAngle(0, 15, 0), vStart + vForward),\n\tRotatePosition(vStart, QAngle(0, 30, 0), vStart + vForward),\n}",
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "vCenter",
					"description": "中心点"
				},
				"QAngle_2": {
					"type": "QAngle",
					"params_name": "QAngle",
					"description": "QAngle"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "vPosition",
					"description": "向量"
				}
			}
		},
		"AddFOWViewer": {
			"class": "Global",
			"function": "AddFOWViewer",
			"return": "int",
			"description": "为某个队伍添加临时视野",
			"server": true,
			"example": "-- 每帧提供一帧空中视野模拟飞行视野\nfunction modifier_night_stalker_darkness:OnIntervalThink()\n\tlocal hCaster = self:GetCaster()\n\tlocal iTeamNumber = hCaster:GetTeamNumber()\n\tlocal vPosition = hCaster:GetAbsOrigin()\n\tlocal iRadius = self:GetAbility():GetSpecialValueFor(\"radius\")\n\tAddFOWViewer(iTeamNumber, vPosition, iRadius, FrameTime(), false)\nend",
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "nTeamID",
					"description": "队伍ID"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "位置"
				},
				"float_3": {
					"type": "float",
					"params_name": "flRadius",
					"description": "半径"
				},
				"float_4": {
					"type": "float",
					"params_name": "flDuration",
					"description": "持续时间"
				},
				"bool_5": {
					"type": "bool",
					"params_name": "bObstructedVision",
					"description": "是否有视野阻挡"
				}
			}
		},
		"ApplyDamage": {
			"class": "Global",
			"function": "ApplyDamage",
			"return": "float",
			"description": "对一个单位造成伤害，输入tDamageTable: victim, attacker, damage, damage_type, damage_flags, ability",
			"server": true,
			"example": "-- 对玩家1的英雄对自己造成500纯粹伤害\n\nlocal hPlayerHero = PlayerResource:GetPlayer(1):GetAssignedHero()\nlocal damageTable = {\n\tvictim = hPlayerHero,\n\tattacker = hPlayerHero,\n\tdamage = 500,\n\tdamage_type = DAMAGE_TYPE_PURE,\n\tdamage_flags = DOTA_DAMAGE_FLAG_NONE, --Optional.\n\tability = playerHero:GetAbilityByIndex(0), --Optional.\n}\nApplyDamage(damageTable)",
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "tDamageTable",
					"description": "包含受害者、攻击者、伤害、伤害类型、伤害标记和技能来源的表格"
				}
			}
		},
		"CreateIllusions": {
			"class": "Global",
			"function": "CreateIllusions",
			"return": "table",
			"description": "使用传入的数据创建属于传入单位的英雄幻象。 ( hOwner, hHeroToCopy, hModiiferKeys, nNumIllusions, nPadding, bScramblePosition, bFindClearSpace ) 可选参数：outgoing_damage, incoming_damage, bounty_base, bounty_growth, outgoing_damage_structure, outgoing_damage_roshan",
			"server": true,
			"example": "-- 创建2个玩家1的英雄幻象\n\nlocal hPlayerHero = PlayerResource:GetPlayer(1):GetAssignedHero()\nlocal illusions = CreateIllusions(hPlayerHero, hPlayerHero, {\n\toutgoing_damage = 50,\t-- 造成50%的伤害\n\tincoming_damage = 300,\t-- 受到300%的伤害\n\tbounty_base = 15,\t-- 击杀获得15金钱\n\toutgoing_damage_structure = 10,\t-- 对建筑造成10%伤害\n\toutgoing_damage_roshan = 60\t-- 对肉山造成60%伤害\n}, nNumIllusions, nPadding, bScramblePosition, bFindClearSpace)",
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "hOwner",
					"description": "拥有者"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "hHeroToCopy",
					"description": "复制的英雄"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "hModiiferKeys",
					"description": "修改器参数"
				},
				"int_4": {
					"type": "int",
					"params_name": "nNumIllusions",
					"description": "幻象数量"
				},
				"int_5": {
					"type": "int",
					"params_name": "nPadding",
					"description": "nPadding"
				},
				"bool_6": {
					"type": "bool",
					"params_name": "bScramblePosition",
					"description": "bScramblePosition"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bFindClearSpace",
					"description": "是否寻找空位"
				}
			}
		},
		"CalcDistanceBetweenEntityOBB": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CalcDistanceBetweenEntityOBB",
			"return": "float",
			"description": "计算两个实体间的OBB包围盒距离",
			"server": true,
			"client": true,
			"example": "local hPlayerHero_1 = PlayerResource:GetPlayer(1):GetAssignedHero()\nlocal hPlayerHero_2 = PlayerResource:GetPlayer(1):GetAssignedHero()\nlocal flDistance = CalcDistanceBetweenEntityOBB(hPlayerHero_1, hPlayerHero_2)",
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "实体1"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "实体2"
				}
			}
		},
		"CreateItem": {
			"class": "Global",
			"function": "CreateItem",
			"return": "handle",
			"description": "创建一个物品",
			"server": true,
			"example": "function windrunner_windrun:OnSpellStart()\n\tlocal hCaster = self:GetCaster()\n\tlocal hItem = CreateItem(\"item_rapier_shareable\", hCaster, hCaster)\n\thCaster:AddItem(hItem)\nend",
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "sItemName",
					"description": "物品名字"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "hOwner",
					"description": "拥有者"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "hOwner",
					"description": "拥有者"
				}
			}
		},
		"IsLocationVisible": {
			"class": "Global",
			"function": "IsLocationVisible",
			"return": "bool",
			"description": "判断某个位置对某个队伍是否在战争迷雾中",
			"server": true,
			"example": "local hParent = self:GetParent()\nIsLocationVisible(hParent:GetOpposingTeamNumber(), hParent:GetAbsOrigin())",
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "iTeamNumber",
					"description": "队伍编号"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "位置"
				}
			}
		},
		"PrecacheResource": {
			"class": "Global",
			"function": "PrecacheResource",
			"return": "void",
			"description": "手动预载某个资源，model_folder|sound|soundfile|particle|particle_folder",
			"server": true,
			"example": "function contract_hermit:Precache(context)\n\tPrecacheResource(\"particle\", \"particles/econ/items/riki/riki_immortal_ti6/riki_immortal_ti6_blinkstrike.vpcf\", context)\nend",
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "sType",
					"description": "类型"
				},
				"string_2": {
					"type": "string",
					"params_name": "sPath",
					"description": "路径"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "context",
					"description": "CScriptPrecacheContext"
				}
			}
		},
		"CreateUnitByName": {
			"class": "Global",
			"function": "CreateUnitByName",
			"return": "handle",
			"description": "创建一个单位",
			"server": true,
			"example": "local hUnit = CreateUnitByName(\"npc_dota_contract_treant\", vCenter, true, hCaster, hCaster, hCaster:GetTeamNumber())",
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "sUnitName",
					"description": "单位名称"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "位置"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bFindClearSpace",
					"description": "是否寻找空位"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "hNpcOwner",
					"description": "hNpcOwner"
				},
				"handle_5": {
					"type": "handle",
					"params_name": "hUnitOwner",
					"description": "hUnitOwner"
				},
				"int_6": {
					"type": "int",
					"params_name": "iTeamNumber",
					"description": "队伍"
				}
			}
		},
		"EmitSoundOnLocationWithCaster": {
			"class": "Global",
			"function": "EmitSoundOnLocationWithCaster",
			"return": "void",
			"description": "单位在指定位置播放音效。(vLocation, soundName, hCaster).",
			"server": true,
			"example": "EmitSoundOnLocationWithCaster(vCenter, \"Hero_Furion.Sprout\", hCaster)",
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "位置"
				},
				"string_2": {
					"type": "string",
					"params_name": "sSoundName",
					"description": "音效"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "hUnit",
					"description": "来源单位"
				}
			}
		},
		"FindClearSpaceForUnit": {
			"class": "Global",
			"function": "FindClearSpaceForUnit",
			"return": "bool",
			"description": "把一个单位放在没有占用的位置。",
			"server": true,
			"example": "FindClearSpaceForUnit(hCaster, hTarget:GetAbsOrigin(), true)",
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "hUnit",
					"description": "单位"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "位置"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bInterruptMotion",
					"description": "是否打断Motion"
				}
			}
		},
		"Dynamic_Wrap": {
			"class": "Global",
			"class_cl": "Global",
			"type": "custom_note",
			"function": "Dynamic_Wrap",
			"return": "void",
			"description": "A function to re-lookup a function by name every time.",
			"server": true,
			"client": true,
			"example": "Dynamic_Wrap(table, sFuncName)",
			"params": {
				"table": {
					"params_name": "table",
					"description": "table"
				},
				"sFuncName": {
					"params_name": "sFuncName",
					"description": "函数名"
				}
			}
		},
		"DeepPrintTable": {
			"class": "Global",
			"class_cl": "Global",
			"type": "custom_note",
			"function": "DeepPrintTable",
			"return": "void",
			"description": "打印表",
			"server": true,
			"client": true,
			"example": "DeepPrintTable(table, prefix, chaseMetaTables)",
			"params": {
				"table": {
					"params_name": "table",
					"description": "table"
				},
				"prefix": {
					"params_name": "prefix",
					"description": "可选，前缀"
				},
				"chaseMetaTables": {
					"params_name": "chaseMetaTables",
					"description": "可选，追加原表"
				}
			}
		},
		"DeepToString": {
			"class": "Global",
			"class_cl": "Global",
			"type": "custom_note",
			"function": "DeepToString",
			"return": "void",
			"description": "Convert a class/array/instance/table to a string",
			"server": true,
			"client": true,
			"example": "DeepToString(table, prefix)",
			"params": {
				"table": {
					"params_name": "table",
					"description": "table"
				},
				"prefix": {
					"params_name": "prefix",
					"description": "可选，前缀"
				}
			}
		},
		"DeepPrint": {
			"class": "Global",
			"class_cl": "Global",
			"type": "custom_note",
			"function": "DeepPrint",
			"return": "void",
			"description": "Print out a class/array/instance/table to the console",
			"server": true,
			"client": true,
			"example": "DeepPrint(table, prefix)",
			"params": {
				"table": {
					"params_name": "table",
					"description": "table"
				},
				"prefix": {
					"params_name": "prefix",
					"description": "可选，前缀"
				}
			}
		},
		"AngleDiff": {
			"class": "Global",
			"class_cl": "Global",
			"function": "AngleDiff",
			"return": "float",
			"description": "Returns the number of degrees difference between two yaw angles返回两个偏航角之间的度差数",
			"server": true,
			"client": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"AnglesToVector": {
			"class": "Global",
			"class_cl": "Global",
			"function": "AnglesToVector",
			"return": "Vector",
			"description": "Generate a vector given a QAngles",
			"server": true,
			"client": true,
			"params": {
				"QAngle_1": {
					"type": "QAngle",
					"params_name": "QAngle_1",
					"description": "No Description Set"
				}
			}
		},
		"AppendToLogFile": {
			"class": "Global",
			"class_cl": "Global",
			"function": "AppendToLogFile",
			"return": "void",
			"description": "AppendToLogFile is deprecated. Print to the console for logging instead.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"AxisAngleToQuaternion": {
			"class": "Global",
			"class_cl": "Global",
			"function": "AxisAngleToQuaternion",
			"return": "Quaternion",
			"description": "(vector,float) constructs a quaternion representing a rotation by angle around the specified vector axis",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"CalcClosestPointOnEntityOBB": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CalcClosestPointOnEntityOBB",
			"return": "Vector",
			"description": "Compute the closest point on the OBB of an entity.",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"CalcDistanceToLineSegment2D": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CalcDistanceToLineSegment2D",
			"return": "float",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				}
			}
		},
		"CancelEntityIOEvents": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CancelEntityIOEvents",
			"return": "void",
			"description": "Create all I/O events for a particular entity",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				}
			}
		},
		"CenterCameraOnUnit": {
			"class": "Global",
			"function": "CenterCameraOnUnit",
			"return": "void",
			"description": "CenterCameraOnUnit( nPlayerId, hUnit ): Centers each players` camera on a unit.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"ClearTeamCustomHealthbarColor": {
			"class": "Global",
			"function": "ClearTeamCustomHealthbarColor",
			"return": "void",
			"description": "( teamNumber )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"CreateDamageInfo": {
			"class": "Global",
			"function": "CreateDamageInfo",
			"return": "handle",
			"description": "(hInflictor, hAttacker, flDamage) - Allocate a damageinfo object, used as an argument to TakeDamage(). Call DestroyDamageInfo( hInfo ) to free the object.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"Vector_4": {
					"type": "Vector",
					"params_name": "Vector_4",
					"description": "No Description Set"
				},
				"float_5": {
					"type": "float",
					"params_name": "float_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				}
			}
		},
		"CreateEffect": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CreateEffect",
			"return": "bool",
			"description": "Pass table - Inputs: entity, effect",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"CreateHTTPRequest": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CreateHTTPRequest",
			"return": "handle",
			"description": "Create an HTTP request.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateHTTPRequestScriptVM": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CreateHTTPRequestScriptVM",
			"return": "handle",
			"description": "Create an HTTP request.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateHeroForPlayer": {
			"class": "Global",
			"function": "CreateHeroForPlayer",
			"return": "handle",
			"description": "Creates a DOTA hero by its dota_npc_units.txt name and sets it as the given player`s controlled hero",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateItemOnPositionForLaunch": {
			"class": "Global",
			"function": "CreateItemOnPositionForLaunch",
			"return": "handle",
			"description": "Create a physical item at a given location, can start in air (but doesn`t clear a space)",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateItemOnPositionSync": {
			"class": "Global",
			"function": "CreateItemOnPositionSync",
			"return": "handle",
			"description": "Create a physical item at a given location",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateModifierThinker": {
			"class": "Global",
			"function": "CreateModifierThinker",
			"return": "handle",
			"description": "Create a modifier not associated with an NPC. ( hCaster, hAbility, modifierName, paramTable, vOrigin, nTeamNumber, bPhantomBlocker )",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "来源单位"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "技能"
				},
				"string_3": {
					"type": "string",
					"params_name": "sModifierName",
					"description": "修改器名"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "tParamTable",
					"description": "参数表"
				},
				"Vector_5": {
					"type": "Vector",
					"params_name": "vPosition",
					"description": "位置"
				},
				"int_6": {
					"type": "int",
					"params_name": "iTeamNumber",
					"description": "队伍"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bPhantomBlocker",
					"description": "是否有阻挡"
				}
			}
		},
		"CreateRune": {
			"class": "Global",
			"function": "CreateRune",
			"return": "handle",
			"description": "Create a rune of the specified type (vLocation, iRuneType).",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateSceneEntity": {
			"class": "Global",
			"function": "CreateSceneEntity",
			"return": "handle",
			"description": "Create a scene entity to play the specified scene.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"CreateTempTree": {
			"class": "Global",
			"function": "CreateTempTree",
			"return": "handle",
			"description": "Create a temporary tree, uses a default tree model. (vLocation, flDuration).",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateTempTreeWithModel": {
			"class": "Global",
			"function": "CreateTempTreeWithModel",
			"return": "handle",
			"description": "Create a temporary tree, specifying the tree model name. (vLocation, flDuration, szModelName).",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				}
			}
		},
		"CreateTrigger": {
			"class": "Global",
			"function": "CreateTrigger",
			"return": "handle",
			"description": "CreateTrigger( vecMin, vecMax ) : Creates and returns an AABB trigger",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				}
			}
		},
		"CreateTriggerRadiusApproximate": {
			"class": "Global",
			"function": "CreateTriggerRadiusApproximate",
			"return": "handle",
			"description": "CreateTriggerRadiusApproximate( vecOrigin, flRadius ) : Creates and returns an AABB trigger thats bigger than the radius provided",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateUniformRandomStream": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CreateUniformRandomStream",
			"return": "handle",
			"description": "( iSeed ) - Creates a separate random number stream.",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"CreateUnitByNameAsync": {
			"class": "Global",
			"function": "CreateUnitByNameAsync",
			"return": "int",
			"description": "Creates a DOTA unit by its dota_npc_units.txt name",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "handle_4",
					"description": "No Description Set"
				},
				"handle_5": {
					"type": "handle",
					"params_name": "handle_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"handle_7": {
					"type": "handle",
					"params_name": "handle_7",
					"description": "No Description Set"
				}
			}
		},
		"CreateUnitFromTable": {
			"class": "Global",
			"function": "CreateUnitFromTable",
			"return": "handle",
			"description": "Creates a DOTA unit by its dota_npc_units.txt name from a table of entity key values and a position to spawn at.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"CrossVectors": {
			"class": "Global",
			"class_cl": "Global",
			"function": "CrossVectors",
			"return": "Vector",
			"description": "(vector,vector) cross product between two vectors",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"DebugBreak": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugBreak",
			"return": "void",
			"description": "Breaks in the debugger",
			"server": true,
			"client": true,
			"params": {}
		},
		"DebugCreateUnit": {
			"class": "Global",
			"function": "DebugCreateUnit",
			"return": "int",
			"description": "Creates a test unit controllable by the specified player.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"bool_4": {
					"type": "bool",
					"params_name": "bool_4",
					"description": "No Description Set"
				},
				"handle_5": {
					"type": "handle",
					"params_name": "handle_5",
					"description": "No Description Set"
				}
			}
		},
		"DebugDrawBox": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawBox",
			"return": "void",
			"description": "Draw a debug overlay box (origin, mins, maxs, forward, r, g, b, a, duration )",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"float_8": {
					"type": "float",
					"params_name": "float_8",
					"description": "No Description Set"
				}
			}
		},
		"DebugDrawBoxDirection": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawBoxDirection",
			"return": "void",
			"description": "Draw a debug forward box (cent, min, max, forward, vRgb, a, duration)",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"Vector_4": {
					"type": "Vector",
					"params_name": "Vector_4",
					"description": "No Description Set"
				},
				"Vector_5": {
					"type": "Vector",
					"params_name": "Vector_5",
					"description": "No Description Set"
				},
				"float_6": {
					"type": "float",
					"params_name": "float_6",
					"description": "No Description Set"
				},
				"float_7": {
					"type": "float",
					"params_name": "float_7",
					"description": "No Description Set"
				}
			}
		},
		"DebugDrawClear": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawClear",
			"return": "void",
			"description": "Try to clear all the debug overlay info",
			"server": true,
			"client": true,
			"params": {}
		},
		"DebugDrawLine": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawLine",
			"return": "void",
			"description": "Draw a debug overlay line (origin, target, r, g, b, ztest, duration)",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"bool_6": {
					"type": "bool",
					"params_name": "bool_6",
					"description": "No Description Set"
				},
				"float_7": {
					"type": "float",
					"params_name": "float_7",
					"description": "No Description Set"
				}
			}
		},
		"DebugDrawLine_vCol": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawLine_vCol",
			"return": "void",
			"description": "Draw a debug line using color vec (start, end, vRgb, a, ztest, duration)",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"bool_4": {
					"type": "bool",
					"params_name": "bool_4",
					"description": "No Description Set"
				},
				"float_5": {
					"type": "float",
					"params_name": "float_5",
					"description": "No Description Set"
				}
			}
		},
		"DebugDrawScreenTextLine": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawScreenTextLine",
			"return": "void",
			"description": "Draw text with a line offset (x, y, lineOffset, text, r, g, b, a, duration)",
			"server": true,
			"client": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"string_4": {
					"type": "string",
					"params_name": "string_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				}
			}
		},
		"DebugDrawSphere": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawSphere",
			"return": "void",
			"description": "Draw a debug sphere (center, vRgb, a, rad, ztest, duration)",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"bool_5": {
					"type": "bool",
					"params_name": "bool_5",
					"description": "No Description Set"
				},
				"float_6": {
					"type": "float",
					"params_name": "float_6",
					"description": "No Description Set"
				}
			}
		},
		"DebugDrawText": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugDrawText",
			"return": "void",
			"description": "Draw text in 3d (origin, text, bViewCheck, duration)",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				}
			}
		},
		"DebugScreenTextPretty": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DebugScreenTextPretty",
			"return": "void",
			"description": "Draw pretty debug text (x, y, lineOffset, text, r, g, b, a, duration, font, size, bBold)",
			"server": true,
			"client": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"string_4": {
					"type": "string",
					"params_name": "string_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				},
				"string_10": {
					"type": "string",
					"params_name": "string_10",
					"description": "No Description Set"
				},
				"int_11": {
					"type": "int",
					"params_name": "int_11",
					"description": "No Description Set"
				},
				"bool_12": {
					"type": "bool",
					"params_name": "bool_12",
					"description": "No Description Set"
				}
			}
		},
		"DestroyDamageInfo": {
			"class": "Global",
			"function": "DestroyDamageInfo",
			"return": "void",
			"description": "Free a damageinfo object that was created with CreateDamageInfo().",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"DoCleaveAttack": {
			"class": "Global",
			"function": "DoCleaveAttack",
			"return": "int",
			"description": "(hAttacker, hTarget, hAbility, fDamage, fRadius, effectName)",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"float_5": {
					"type": "float",
					"params_name": "float_5",
					"description": "No Description Set"
				},
				"float_6": {
					"type": "float",
					"params_name": "float_6",
					"description": "No Description Set"
				},
				"float_7": {
					"type": "float",
					"params_name": "float_7",
					"description": "No Description Set"
				},
				"string_8": {
					"type": "string",
					"params_name": "string_8",
					"description": "No Description Set"
				}
			}
		},
		"DoEntFire": {
			"class": "Global",
			"function": "DoEntFire",
			"return": "void",
			"description": "#EntFire:Generate and entity i/o event",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"handle_5": {
					"type": "handle",
					"params_name": "handle_5",
					"description": "No Description Set"
				},
				"handle_6": {
					"type": "handle",
					"params_name": "handle_6",
					"description": "No Description Set"
				}
			}
		},
		"DoEntFireByInstanceHandle": {
			"class": "Global",
			"function": "DoEntFireByInstanceHandle",
			"return": "void",
			"description": "#EntFireByHandle:Generate and entity i/o event",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"handle_5": {
					"type": "handle",
					"params_name": "handle_5",
					"description": "No Description Set"
				},
				"handle_6": {
					"type": "handle",
					"params_name": "handle_6",
					"description": "No Description Set"
				}
			}
		},
		"DoIncludeScript": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DoIncludeScript",
			"return": "bool",
			"description": "Execute a script (internal)",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"DoScriptAssert": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DoScriptAssert",
			"return": "void",
			"description": "#ScriptAssert:Asserts the passed in value. Prints out a message and brings up the assert dialog.",
			"server": true,
			"client": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"DoUniqueString": {
			"class": "Global",
			"class_cl": "Global",
			"function": "DoUniqueString",
			"return": "string",
			"description": "#UniqueString:Generate a string guaranteed to be unique across the life of the script VM, with an optional root string. Useful for adding data to tables when not sure what keys are already in use in that table.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"DotProduct": {
			"class": "Global",
			"function": "DotProduct",
			"return": "float",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"DropNeutralItemAtPositionForHero": {
			"class": "Global",
			"function": "DropNeutralItemAtPositionForHero",
			"return": "handle",
			"description": "Drop a neutral item for the team of the hero at the given tier.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"bool_5": {
					"type": "bool",
					"params_name": "bool_5",
					"description": "No Description Set"
				}
			}
		},
		"EmitAnnouncerSound": {
			"class": "Global",
			"function": "EmitAnnouncerSound",
			"return": "void",
			"description": "Emit an announcer sound for all players.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"EmitAnnouncerSoundForPlayer": {
			"class": "Global",
			"function": "EmitAnnouncerSoundForPlayer",
			"return": "void",
			"description": "Emit an announcer sound for a player.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"EmitAnnouncerSoundForTeam": {
			"class": "Global",
			"function": "EmitAnnouncerSoundForTeam",
			"return": "void",
			"description": "Emit an announcer sound for a team.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"EmitAnnouncerSoundForTeamOnLocation": {
			"class": "Global",
			"function": "EmitAnnouncerSoundForTeamOnLocation",
			"return": "void",
			"description": "Emit an announcer sound for a team at a specific location.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				}
			}
		},
		"EmitGlobalSound": {
			"class": "Global",
			"function": "EmitGlobalSound",
			"return": "void",
			"description": "Play named sound for all players",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"EmitSoundOn": {
			"class": "Global",
			"class_cl": "Global",
			"function": "EmitSoundOn",
			"return": "void",
			"description": "Play named sound on Entity",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"EmitSoundOnClient": {
			"class": "Global",
			"class_cl": "Global",
			"function": "EmitSoundOnClient",
			"return": "void",
			"description": "Play named sound only on the client for the passed in player",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"EmitSoundOnEntityForPlayer": {
			"class": "Global",
			"function": "EmitSoundOnEntityForPlayer",
			"return": "void",
			"description": "Emit a sound on an entity for only a specific player",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"EmitSoundOnLocationForAllies": {
			"class": "Global",
			"function": "EmitSoundOnLocationForAllies",
			"return": "void",
			"description": "Emit a sound on a location from a unit, only for players allied with that unit (vLocation, soundName, hCaster",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"EmitSoundOnLocationForPlayer": {
			"class": "Global",
			"function": "EmitSoundOnLocationForPlayer",
			"return": "void",
			"description": "Emit a sound on a location for only a specific player",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"EntIndexToHScript": {
			"class": "Global",
			"class_cl": "Global",
			"function": "EntIndexToHScript",
			"return": "handle",
			"description": "Turn an entity index integer to an HScript representing that entity`s script instance.",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"ExecuteOrderFromTable": {
			"class": "Global",
			"function": "ExecuteOrderFromTable",
			"return": "void",
			"description": "Issue an order from a script table",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"ExponentialDecay": {
			"class": "Global",
			"class_cl": "Global",
			"function": "ExponentialDecay",
			"return": "float",
			"description": "Smooth curve decreasing slower as it approaches zero",
			"server": true,
			"client": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"FindClearRandomPositionAroundUnit": {
			"class": "Global",
			"function": "FindClearRandomPositionAroundUnit",
			"return": "bool",
			"description": "Finds a clear random position around a given target unit, using the target unit`s padded collision radius.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"FindSpawnEntityForTeam": {
			"class": "Global",
			"function": "FindSpawnEntityForTeam",
			"return": "handle",
			"description": "为给定的团队找到一个刷出点。",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"FindUnitsInLine": {
			"class": "Global",
			"function": "FindUnitsInLine",
			"return": "table",
			"description": "找出与给定标记相交的单位。",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "所属团队"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "起始坐标"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "结束坐标"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "handle_4",
					"description": "No Description Set"
				},
				"float_5": {
					"type": "float",
					"params_name": "float_5",
					"description": "范围"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "目标团队"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "目标类型"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				}
			}
		},
		"FindUnitsInRadius": {
			"class": "Global",
			"function": "FindUnitsInRadius",
			"return": "table",
			"description": "查找给定半径内带有给定标志的单位。",
			"server": true,
			"example": "查找给定半径内带有给定标志的单位。",
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "所属团队"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "起点"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "范围"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "目标团队"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "目标类型"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "查找方式"
				},
				"bool_9": {
					"type": "bool",
					"params_name": "bool_9",
					"description": "No Description Set"
				}
			}
		},
		"FireEntityIOInputNameOnly": {
			"class": "Global",
			"class_cl": "Global",
			"function": "FireEntityIOInputNameOnly",
			"return": "void",
			"description": "Fire Entity`s Action Input w/no data",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"FireEntityIOInputString": {
			"class": "Global",
			"class_cl": "Global",
			"function": "FireEntityIOInputString",
			"return": "void",
			"description": "Fire Entity`s Action Input with passed String - you own the memory",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				}
			}
		},
		"FireEntityIOInputVec": {
			"class": "Global",
			"class_cl": "Global",
			"function": "FireEntityIOInputVec",
			"return": "void",
			"description": "Fire Entity`s Action Input with passed Vector - you own the memory",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				}
			}
		},
		"FireGameEvent": {
			"class": "Global",
			"class_cl": "Global",
			"function": "FireGameEvent",
			"return": "void",
			"description": "Fire a game event.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"FireGameEventLocal": {
			"class": "Global",
			"class_cl": "Global",
			"function": "FireGameEventLocal",
			"return": "void",
			"description": "Fire a game event without broadcasting to the client.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"FrameTime": {
			"class": "Global",
			"class_cl": "Global",
			"function": "FrameTime",
			"return": "float",
			"description": "Get the time spent on the server in the last frame",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAbilityKeyValuesByName": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetAbilityKeyValuesByName",
			"return": "table",
			"description": "Get ability data by ability name.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetAbilityTextureNameForAbility": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetAbilityTextureNameForAbility",
			"return": "string",
			"description": "Gets the ability texture name for an ability",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetActiveSpawnGroupHandle": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetActiveSpawnGroupHandle",
			"return": "int",
			"description": "Returns the currently active spawn group handle",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetDedicatedServerKey": {
			"class": "Global",
			"function": "GetDedicatedServerKey",
			"return": "string",
			"description": "( version )",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetDedicatedServerKeyV2": {
			"class": "Global",
			"function": "GetDedicatedServerKeyV2",
			"return": "string",
			"description": "( version )",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetEntityIndexForTreeId": {
			"class": "Global",
			"function": "GetEntityIndexForTreeId",
			"return": "unknown",
			"description": "Get the enity index for a tree id specified as the entindex_target of a DOTA_UNIT_ORDER_CAST_TARGET_TREE.",
			"server": true,
			"params": {
				"unsigned_1": {
					"type": "unsigned",
					"params_name": "unsigned_1",
					"description": "No Description Set"
				}
			}
		},
		"GetFrameCount": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetFrameCount",
			"return": "int",
			"description": "Returns the engines current frame count",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetGroundHeight": {
			"class": "Global",
			"function": "GetGroundHeight",
			"return": "float",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"GetGroundPosition": {
			"class": "Global",
			"function": "GetGroundPosition",
			"return": "Vector",
			"description": "Returns the supplied position moved to the ground. Second parameter is an NPC for measuring movement collision hull offset.",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"GetItemCost": {
			"class": "Global",
			"function": "GetItemCost",
			"return": "int",
			"description": "Get the cost of an item by name.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetItemDefOwnedCount": {
			"class": "Global",
			"function": "GetItemDefOwnedCount",
			"return": "int",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"GetItemDefQuantity": {
			"class": "Global",
			"function": "GetItemDefQuantity",
			"return": "int",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"GetListenServerHost": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetListenServerHost",
			"return": "handle",
			"description": "Get the local player on a listen server.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetLobbyEventGameDetails": {
			"class": "Global",
			"function": "GetLobbyEventGameDetails",
			"return": "table",
			"description": "( )",
			"server": true,
			"params": {}
		},
		"GetMapName": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetMapName",
			"return": "string",
			"description": "Get the name of the map.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetMaxOutputDelay": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetMaxOutputDelay",
			"return": "float",
			"description": "Get the longest delay for all events attached to an output",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"GetPhysAngularVelocity": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetPhysAngularVelocity",
			"return": "Vector",
			"description": "Get Angular Velocity for VPHYS or normal object. Returns a vector of the axis of rotation, multiplied by the degrees of rotation per second.",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"GetPhysVelocity": {
			"class": "Global",
			"class_cl": "Global",
			"function": "GetPhysVelocity",
			"return": "Vector",
			"description": "Get Velocity for VPHYS or normal object",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"GetPotentialNeutralItemDrop": {
			"class": "Global",
			"function": "GetPotentialNeutralItemDrop",
			"return": "string",
			"description": "Given the item tier and the team, roll for the name of a valid neutral item drop, considering previous drops and consumables.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"GetSystemDate": {
			"class": "Global",
			"function": "GetSystemDate",
			"return": "string",
			"description": "Get the current real world date",
			"server": true,
			"params": {}
		},
		"GetSystemTime": {
			"class": "Global",
			"function": "GetSystemTime",
			"return": "string",
			"description": "Get the current real world time",
			"server": true,
			"params": {}
		},
		"GetSystemTimeMS": {
			"class": "Global",
			"function": "GetSystemTimeMS",
			"return": "double",
			"description": "Get system time in milliseconds",
			"server": true,
			"params": {}
		},
		"GetTargetAOELocation": {
			"class": "Global",
			"function": "GetTargetAOELocation",
			"return": "Vector",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"Vector_4": {
					"type": "Vector",
					"params_name": "Vector_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				}
			}
		},
		"GetTargetLinearLocation": {
			"class": "Global",
			"function": "GetTargetLinearLocation",
			"return": "Vector",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"Vector_4": {
					"type": "Vector",
					"params_name": "Vector_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				}
			}
		},
		"GetTeamHeroKills": {
			"class": "Global",
			"function": "GetTeamHeroKills",
			"return": "int",
			"description": "( int teamID )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetTeamName": {
			"class": "Global",
			"function": "GetTeamName",
			"return": "string",
			"description": "( int teamID )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetTreeIdForEntityIndex": {
			"class": "Global",
			"function": "GetTreeIdForEntityIndex",
			"return": "int",
			"description": "Given and entity index of a tree, get the tree id for use for use with with unit orders.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetWorldMaxX": {
			"class": "Global",
			"function": "GetWorldMaxX",
			"return": "float",
			"description": "Gets the world`s maximum X position.",
			"server": true,
			"params": {}
		},
		"GetWorldMaxY": {
			"class": "Global",
			"function": "GetWorldMaxY",
			"return": "float",
			"description": "Gets the world`s maximum Y position.",
			"server": true,
			"params": {}
		},
		"GetWorldMinX": {
			"class": "Global",
			"function": "GetWorldMinX",
			"return": "float",
			"description": "Gets the world`s minimum X position.",
			"server": true,
			"params": {}
		},
		"GetWorldMinY": {
			"class": "Global",
			"function": "GetWorldMinY",
			"return": "float",
			"description": "Gets the world`s minimum Y position.",
			"server": true,
			"params": {}
		},
		"GetXPNeededToReachNextLevel": {
			"class": "Global",
			"function": "GetXPNeededToReachNextLevel",
			"return": "int",
			"description": "Get amount of XP required to reach the next level.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"InitLogFile": {
			"class": "Global",
			"class_cl": "Global",
			"function": "InitLogFile",
			"return": "void",
			"description": "InitLogFile is deprecated. Print to the console for logging instead.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"IsClient": {
			"class": "Global",
			"class_cl": "Global",
			"function": "IsClient",
			"return": "bool",
			"description": "Returns true if this is lua running from the client.dll.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsDedicatedServer": {
			"class": "Global",
			"class_cl": "Global",
			"function": "IsDedicatedServer",
			"return": "bool",
			"description": "Returns true if this server is a dedicated server.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsInToolsMode": {
			"class": "Global",
			"class_cl": "Global",
			"function": "IsInToolsMode",
			"return": "bool",
			"description": "Returns true if this is lua running within tools mode.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsMangoTree": {
			"class": "Global",
			"function": "IsMangoTree",
			"return": "bool",
			"description": "Is this entity a mango tree? (hEntity).",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"IsMarkedForDeletion": {
			"class": "Global",
			"class_cl": "Global",
			"function": "IsMarkedForDeletion",
			"return": "bool",
			"description": "Returns true if the entity is valid and marked for deletion.",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"IsServer": {
			"class": "Global",
			"class_cl": "Global",
			"function": "IsServer",
			"return": "bool",
			"description": "Returns true if this is lua running from the server.dll.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsUnitInValidPosition": {
			"class": "Global",
			"function": "IsUnitInValidPosition",
			"return": "bool",
			"description": "Returns true if the unit is in a valid position in the gridnav.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"IsValidEntity": {
			"class": "Global",
			"class_cl": "Global",
			"function": "IsValidEntity",
			"return": "bool",
			"description": "Checks to see if the given hScript is a valid entity",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"LerpVectors": {
			"class": "Global",
			"class_cl": "Global",
			"function": "LerpVectors",
			"return": "Vector",
			"description": "(vector,vector,float) lerp between two vectors by a float factor returning new vector",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"LimitPathingSearchDepth": {
			"class": "Global",
			"function": "LimitPathingSearchDepth",
			"return": "void",
			"description": "Set the limit on the pathfinding search space.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"LinkLuaModifier": {
			"class": "Global",
			"class_cl": "Global",
			"function": "LinkLuaModifier",
			"return": "void",
			"description": "Link a lua-defined modifier with the associated class ( className, fileName, LuaModifierType).",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"ListenToGameEvent": {
			"class": "Global",
			"class_cl": "Global",
			"function": "ListenToGameEvent",
			"return": "int",
			"description": "Register as a listener for a game event from script.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"LoadKeyValues": {
			"class": "Global",
			"class_cl": "Global",
			"function": "LoadKeyValues",
			"return": "table",
			"description": "Creates a table from the specified keyvalues text file",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"LoadKeyValuesFromString": {
			"class": "Global",
			"class_cl": "Global",
			"function": "LoadKeyValuesFromString",
			"return": "table",
			"description": "Creates a table from the specified keyvalues string",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"LocalTime": {
			"class": "Global",
			"class_cl": "Global",
			"function": "LocalTime",
			"return": "table",
			"description": "Get the current local time",
			"server": true,
			"client": true,
			"params": {}
		},
		"MakeStringToken": {
			"class": "Global",
			"class_cl": "Global",
			"function": "MakeStringToken",
			"return": "int",
			"description": "Checks to see if the given hScript is a valid entity",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"ManuallyTriggerSpawnGroupCompletion": {
			"class": "Global",
			"class_cl": "Global",
			"function": "ManuallyTriggerSpawnGroupCompletion",
			"return": "void",
			"description": "Triggers the creation of entities in a manually-completed spawn group",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"MinimapEvent": {
			"class": "Global",
			"function": "MinimapEvent",
			"return": "void",
			"description": "Start a minimap event. (nTeamID, hEntity, nXCoord, nYCoord, nEventType, nEventDuration).",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				}
			}
		},
		"Msg": {
			"class": "Global",
			"class_cl": "Global",
			"function": "Msg",
			"return": "void",
			"description": "Print a message",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"PauseGame": {
			"class": "Global",
			"function": "PauseGame",
			"return": "void",
			"description": "Pause or unpause the game.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"PlayerInstanceFromIndex": {
			"class": "Global",
			"class_cl": "Global",
			"function": "PlayerInstanceFromIndex",
			"return": "handle",
			"description": "Get a script instance of a player by index.",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheEntityFromTable": {
			"class": "Global",
			"class_cl": "Global",
			"function": "PrecacheEntityFromTable",
			"return": "void",
			"description": "Precache an entity from KeyValues in table",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheEntityListFromTable": {
			"class": "Global",
			"class_cl": "Global",
			"function": "PrecacheEntityListFromTable",
			"return": "void",
			"description": "Precache a list of entity KeyValues tables",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheItemByNameAsync": {
			"class": "Global",
			"function": "PrecacheItemByNameAsync",
			"return": "void",
			"description": "Asynchronously precaches a DOTA item by its dota_npc_items.txt name, provides a callback when it`s finished.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheItemByNameSync": {
			"class": "Global",
			"function": "PrecacheItemByNameSync",
			"return": "void",
			"description": "Precaches a DOTA item by its dota_npc_items.txt name",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheModel": {
			"class": "Global",
			"function": "PrecacheModel",
			"return": "void",
			"description": "( modelName, context ) - Manually precache a single model",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheUnitByNameAsync": {
			"class": "Global",
			"function": "PrecacheUnitByNameAsync",
			"return": "void",
			"description": "Asynchronously precaches a DOTA unit by its dota_npc_units.txt name, provides a callback when it`s finished.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheUnitByNameSync": {
			"class": "Global",
			"function": "PrecacheUnitByNameSync",
			"return": "void",
			"description": "Precaches a DOTA unit by its dota_npc_units.txt name",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheUnitFromTableAsync": {
			"class": "Global",
			"function": "PrecacheUnitFromTableAsync",
			"return": "void",
			"description": "Precaches a DOTA unit from a table of entity key values.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheUnitFromTableSync": {
			"class": "Global",
			"function": "PrecacheUnitFromTableSync",
			"return": "void",
			"description": "Precaches a DOTA unit from a table of entity key values.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"PrintLinkedConsoleMessage": {
			"class": "Global",
			"class_cl": "Global",
			"function": "PrintLinkedConsoleMessage",
			"return": "void",
			"description": "Print a console message with a linked console command",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"RandomFloat": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RandomFloat",
			"return": "float",
			"description": "Get a random float within a range",
			"server": true,
			"client": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"RandomInt": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RandomInt",
			"return": "int",
			"description": "Get a random int within a range",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"RandomVector": {
			"class": "Global",
			"function": "RandomVector",
			"return": "Vector",
			"description": "Get a random 2D vector of the given length.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"RegisterCustomAnimationScriptForModel": {
			"class": "Global",
			"function": "RegisterCustomAnimationScriptForModel",
			"return": "void",
			"description": "Register a custom animation script to run when a model loads",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"RegisterSpawnGroupFilterProxy": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RegisterSpawnGroupFilterProxy",
			"return": "void",
			"description": "Create a C proxy for a script-based spawn group filter",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"ReloadMOTD": {
			"class": "Global",
			"class_cl": "Global",
			"function": "ReloadMOTD",
			"return": "void",
			"description": "Reloads the MotD file",
			"server": true,
			"client": true,
			"params": {}
		},
		"RemapValClamped": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RemapValClamped",
			"return": "float",
			"description": "将传入值从范围[a, b]映射到范围[c, d]。并且将返回值限制在范围[c, d]。",
			"server": true,
			"client": true,
			"example": "local val = RemapValClamped(0.5, 0, 1, 10, 20) -- val = 15",
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "input",
					"description": "input"
				},
				"float_2": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"float_3": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				},
				"float_4": {
					"type": "float",
					"params_name": "c",
					"description": "c"
				},
				"float_5": {
					"type": "float",
					"params_name": "d",
					"description": "d"
				}
			}
		},
		"RemoveFOWViewer": {
			"class": "Global",
			"function": "RemoveFOWViewer",
			"return": "void",
			"description": "Remove temporary vision for a given team ( nTeamID, nViewerID )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"RemoveSpawnGroupFilterProxy": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RemoveSpawnGroupFilterProxy",
			"return": "void",
			"description": "Remove the C proxy for a script-based spawn group filter",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"ResolveNPCPositions": {
			"class": "Global",
			"function": "ResolveNPCPositions",
			"return": "void",
			"description": "Check and fix units that have been assigned a position inside collision radius of other NPCs.",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"RollPercentage": {
			"class": "Global",
			"function": "RollPercentage",
			"return": "bool",
			"description": "(int nPct)",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"RollPseudoRandomPercentage": {
			"class": "Global",
			"function": "RollPseudoRandomPercentage",
			"return": "bool",
			"description": "使用伪随机算法进行随机",
			"server": true,
			"example": "RollPseudoRandomPercentage(10, hUnit:entindex(), hUnit)",
			"params": {
				"unsigned_1": {
					"type": "unsigned",
					"params_name": "flChance",
					"description": "几率"
				},
				"int_2": {
					"type": "int",
					"params_name": "iPseudoRandomID",
					"description": "伪随机ID"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "hUnit",
					"description": "单位"
				}
			}
		},
		"RotateOrientation": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RotateOrientation",
			"return": "QAngle",
			"description": "Rotate a QAngle by another QAngle.",
			"server": true,
			"client": true,
			"params": {
				"QAngle_1": {
					"type": "QAngle",
					"params_name": "QAngle_1",
					"description": "No Description Set"
				},
				"QAngle_2": {
					"type": "QAngle",
					"params_name": "QAngle_2",
					"description": "No Description Set"
				}
			}
		},
		"RotateQuaternionByAxisAngle": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RotateQuaternionByAxisAngle",
			"return": "Quaternion",
			"description": "(quaternion,vector,float) rotates a quaternion by the specified angle around the specified vector axis",
			"server": true,
			"client": true,
			"params": {
				"Quaternion_1": {
					"type": "Quaternion",
					"params_name": "Quaternion_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"RotationDelta": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RotationDelta",
			"return": "QAngle",
			"description": "Find the delta between two QAngles.",
			"server": true,
			"client": true,
			"params": {
				"QAngle_1": {
					"type": "QAngle",
					"params_name": "QAngle_1",
					"description": "No Description Set"
				},
				"QAngle_2": {
					"type": "QAngle",
					"params_name": "QAngle_2",
					"description": "No Description Set"
				}
			}
		},
		"RotationDeltaAsAngularVelocity": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RotationDeltaAsAngularVelocity",
			"return": "Vector",
			"description": "converts delta QAngle to an angular velocity Vector",
			"server": true,
			"client": true,
			"params": {
				"QAngle_1": {
					"type": "QAngle",
					"params_name": "QAngle_1",
					"description": "No Description Set"
				},
				"QAngle_2": {
					"type": "QAngle",
					"params_name": "QAngle_2",
					"description": "No Description Set"
				}
			}
		},
		"Say": {
			"class": "Global",
			"function": "Say",
			"return": "void",
			"description": "Have Entity say string, and teamOnly or not",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				}
			}
		},
		"ScreenShake": {
			"class": "Global",
			"class_cl": "Global",
			"function": "ScreenShake",
			"return": "void",
			"description": "Start a screenshake with the following parameters. vecCenter, flAmplitude, flFrequency, flDuration, flRadius, eCommand( SHAKE_START = 0, SHAKE_STOP = 1 ), bAirShake",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"float_5": {
					"type": "float",
					"params_name": "float_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bool_7",
					"description": "No Description Set"
				}
			}
		},
		"SendOverheadEventMessage": {
			"class": "Global",
			"function": "SendOverheadEventMessage",
			"return": "void",
			"description": "( DOTAPlayer sendToPlayer, int iMessageType, Entity targetEntity, int iValue, DOTAPlayer sourcePlayer ) - sendToPlayer and sourcePlayer can be nil - iMessageType is one of OVERHEAD_ALERT_*",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"handle_5": {
					"type": "handle",
					"params_name": "handle_5",
					"description": "No Description Set"
				}
			}
		},
		"SendToConsole": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SendToConsole",
			"return": "void",
			"description": "Send a string to the console as a client command",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SendToServerConsole": {
			"class": "Global",
			"function": "SendToServerConsole",
			"return": "void",
			"description": "Send a string to the console as a server command",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SetOpvarFloatAll": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SetOpvarFloatAll",
			"return": "void",
			"description": "Sets an opvar value for all players",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				}
			}
		},
		"SetOpvarFloatPlayer": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SetOpvarFloatPlayer",
			"return": "void",
			"description": "Sets an opvar value for a single player",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"handle_5": {
					"type": "handle",
					"params_name": "handle_5",
					"description": "No Description Set"
				}
			}
		},
		"SetPhysAngularVelocity": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SetPhysAngularVelocity",
			"return": "void",
			"description": "Set Angular Velocity for VPHYS or normal object, from a vector of the axis of rotation, multiplied by the degrees of rotation per second.",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"SetQuestName": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SetQuestName",
			"return": "void",
			"description": "Set the current quest name.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SetQuestPhase": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SetQuestPhase",
			"return": "void",
			"description": "Set the current quest phase.",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetRenderingEnabled": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SetRenderingEnabled",
			"return": "void",
			"description": "Set rendering on/off for an ehandle",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"bool_2": {
					"type": "bool",
					"params_name": "bool_2",
					"description": "No Description Set"
				}
			}
		},
		"SetTeamCustomHealthbarColor": {
			"class": "Global",
			"function": "SetTeamCustomHealthbarColor",
			"return": "void",
			"description": "( teamNumber, r, g, b )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				}
			}
		},
		"ShowCustomHeaderMessage": {
			"class": "Global",
			"function": "ShowCustomHeaderMessage",
			"return": "void",
			"description": "( const char *pszMessage, int nPlayerID, int nValue, float flTime ) - Supports localized strings - %s1 = PlayerName, %s2 = Value, %s3 = TeamName",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				}
			}
		},
		"ShowGenericPopup": {
			"class": "Global",
			"function": "ShowGenericPopup",
			"return": "void",
			"description": "Show a generic popup dialog for all players.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"string_4": {
					"type": "string",
					"params_name": "string_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				}
			}
		},
		"ShowGenericPopupToPlayer": {
			"class": "Global",
			"function": "ShowGenericPopupToPlayer",
			"return": "void",
			"description": "Show a generic popup dialog to a specific player.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"string_4": {
					"type": "string",
					"params_name": "string_4",
					"description": "No Description Set"
				},
				"string_5": {
					"type": "string",
					"params_name": "string_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				}
			}
		},
		"ShowMessage": {
			"class": "Global",
			"function": "ShowMessage",
			"return": "void",
			"description": "Print a hud message on all clients",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SpawnDOTAShopTriggerRadiusApproximate": {
			"class": "Global",
			"function": "SpawnDOTAShopTriggerRadiusApproximate",
			"return": "handle",
			"description": "(Vector vOrigin, float flRadius )",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"SpawnEntityFromTableAsynchronous": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SpawnEntityFromTableAsynchronous",
			"return": "void",
			"description": "Asynchronously spawns a single entity from a table",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "handle_4",
					"description": "No Description Set"
				}
			}
		},
		"SpawnEntityFromTableSynchronous": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SpawnEntityFromTableSynchronous",
			"return": "handle",
			"description": "Synchronously spawns a single entity from a table",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"SpawnEntityGroupFromTable": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SpawnEntityGroupFromTable",
			"return": "bool",
			"description": "Hierarchically spawn an entity group from a set of spawn tables.",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"bool_2": {
					"type": "bool",
					"params_name": "bool_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"SpawnEntityListFromTableAsynchronous": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SpawnEntityListFromTableAsynchronous",
			"return": "int",
			"description": "Asynchronously spawn an entity group from a list of spawn tables. A callback will be triggered when the spawning is complete",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"SpawnEntityListFromTableSynchronous": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SpawnEntityListFromTableSynchronous",
			"return": "handle",
			"description": "Synchronously spawn an entity group from a list of spawn tables.",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"SplineQuaternions": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SplineQuaternions",
			"return": "Quaternion",
			"description": "(quaternion,quaternion,float) very basic interpolation of v0 to v1 over t on [0,1]",
			"server": true,
			"client": true,
			"params": {
				"Quaternion_1": {
					"type": "Quaternion",
					"params_name": "Quaternion_1",
					"description": "No Description Set"
				},
				"Quaternion_2": {
					"type": "Quaternion",
					"params_name": "Quaternion_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"SplineVectors": {
			"class": "Global",
			"class_cl": "Global",
			"function": "SplineVectors",
			"return": "Vector",
			"description": "(vector,vector,float) very basic interpolation of v0 to v1 over t on [0,1]",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"StartSoundEvent": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StartSoundEvent",
			"return": "void",
			"description": "Start a sound event",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"StartSoundEventFromPosition": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StartSoundEventFromPosition",
			"return": "void",
			"description": "Start a sound event from position",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"StartSoundEventFromPositionReliable": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StartSoundEventFromPositionReliable",
			"return": "void",
			"description": "Start a sound event from position with reliable delivery",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"StartSoundEventFromPositionUnreliable": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StartSoundEventFromPositionUnreliable",
			"return": "void",
			"description": "Start a sound event from position with optional delivery",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"StartSoundEventReliable": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StartSoundEventReliable",
			"return": "void",
			"description": "Start a sound event with reliable delivery",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"StartSoundEventUnreliable": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StartSoundEventUnreliable",
			"return": "void",
			"description": "Start a sound event with optional delivery",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"StopEffect": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StopEffect",
			"return": "void",
			"description": "Pass entity and effect name",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"StopGlobalSound": {
			"class": "Global",
			"function": "StopGlobalSound",
			"return": "void",
			"description": "Stop named sound for all players",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"StopListeningToAllGameEvents": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StopListeningToAllGameEvents",
			"return": "void",
			"description": "Stop listening to all game events within a specific context.",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"StopListeningToGameEvent": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StopListeningToGameEvent",
			"return": "bool",
			"description": "Stop listening to a particular game event.",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"StopSoundEvent": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StopSoundEvent",
			"return": "void",
			"description": "Stops a sound event with optional delivery",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"StopSoundOn": {
			"class": "Global",
			"class_cl": "Global",
			"function": "StopSoundOn",
			"return": "void",
			"description": "Stop named sound on Entity",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"Time": {
			"class": "Global",
			"class_cl": "Global",
			"function": "Time",
			"return": "float",
			"description": "Get the current server time",
			"server": true,
			"client": true,
			"params": {}
		},
		"TraceCollideable": {
			"class": "Global",
			"class_cl": "Global",
			"function": "TraceCollideable",
			"return": "bool",
			"description": "Pass table - Inputs: start, end, ent, (optional mins, maxs) -- outputs: pos, fraction, hit, startsolid, normal",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"TraceHull": {
			"class": "Global",
			"class_cl": "Global",
			"function": "TraceHull",
			"return": "bool",
			"description": "Pass table - Inputs: start, end, min, max, mask, ignore  -- outputs: pos, fraction, hit, enthit, startsolid",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"TraceLine": {
			"class": "Global",
			"class_cl": "Global",
			"function": "TraceLine",
			"return": "bool",
			"description": "Pass table - Inputs: startpos, endpos, mask, ignore  -- outputs: pos, fraction, hit, enthit, startsolid",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"UTIL_MessageText": {
			"class": "Global",
			"function": "UTIL_MessageText",
			"return": "void",
			"description": "Sends colored text to one client.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				}
			}
		},
		"UTIL_MessageTextAll": {
			"class": "Global",
			"function": "UTIL_MessageTextAll",
			"return": "void",
			"description": "Sends colored text to all clients.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				}
			}
		},
		"UTIL_MessageTextAll_WithContext": {
			"class": "Global",
			"function": "UTIL_MessageTextAll_WithContext",
			"return": "void",
			"description": "Sends colored text to all clients. (Valid context keys: player_id, value, team_id)",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"handle_6": {
					"type": "handle",
					"params_name": "handle_6",
					"description": "No Description Set"
				}
			}
		},
		"UTIL_MessageText_WithContext": {
			"class": "Global",
			"function": "UTIL_MessageText_WithContext",
			"return": "void",
			"description": "Sends colored text to one client. (Valid context keys: player_id, value, team_id)",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"handle_7": {
					"type": "handle",
					"params_name": "handle_7",
					"description": "No Description Set"
				}
			}
		},
		"UTIL_Remove": {
			"class": "Global",
			"class_cl": "Global",
			"function": "UTIL_Remove",
			"return": "void",
			"description": "Removes the specified entity",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"UTIL_RemoveImmediate": {
			"class": "Global",
			"class_cl": "Global",
			"function": "UTIL_RemoveImmediate",
			"return": "void",
			"description": "Immediately removes the specified entity",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"UTIL_ResetMessageText": {
			"class": "Global",
			"function": "UTIL_ResetMessageText",
			"return": "void",
			"description": "Clear all message text on one client.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"UTIL_ResetMessageTextAll": {
			"class": "Global",
			"function": "UTIL_ResetMessageTextAll",
			"return": "void",
			"description": "Clear all message text from all clients.",
			"server": true,
			"params": {}
		},
		"UnitFilter": {
			"class": "Global",
			"class_cl": "Global",
			"function": "UnitFilter",
			"return": "int",
			"description": "Check if a unit passes a set of filters. (hNPC, nTargetTeam, nTargetType, nTargetFlags, nTeam",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				}
			}
		},
		"UnloadSpawnGroup": {
			"class": "Global",
			"class_cl": "Global",
			"function": "UnloadSpawnGroup",
			"return": "void",
			"description": "Unload a spawn group by name",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"UnloadSpawnGroupByHandle": {
			"class": "Global",
			"class_cl": "Global",
			"function": "UnloadSpawnGroupByHandle",
			"return": "void",
			"description": "Unload a spawn group by handle",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"UpdateEventPoints": {
			"class": "Global",
			"function": "UpdateEventPoints",
			"return": "void",
			"description": "( hEventPointData )",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"VectorAngles": {
			"class": "Global",
			"function": "VectorAngles",
			"return": "QAngle",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				}
			}
		},
		"VectorToAngles": {
			"class": "Global",
			"class_cl": "Global",
			"function": "VectorToAngles",
			"return": "QAngle",
			"description": "Get Qangles (with no roll) for a Vector.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				}
			}
		},
		"Warning": {
			"class": "Global",
			"class_cl": "Global",
			"function": "Warning",
			"return": "void",
			"description": "Print a warning",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"cvar_getf": {
			"class": "Global",
			"class_cl": "Global",
			"function": "cvar_getf",
			"return": "float",
			"description": "Gets the value of the given cvar, as a float.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"cvar_setf": {
			"class": "Global",
			"class_cl": "Global",
			"function": "cvar_setf",
			"return": "bool",
			"description": "Sets the value of the given cvar, as a float.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"rr_AddDecisionRule": {
			"class": "Global",
			"class_cl": "Global",
			"function": "rr_AddDecisionRule",
			"return": "bool",
			"description": "Add a rule to the decision database.",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"rr_CommitAIResponse": {
			"class": "Global",
			"class_cl": "Global",
			"function": "rr_CommitAIResponse",
			"return": "bool",
			"description": "Commit the result of QueryBestResponse back to the given entity to play. Call with params (entity, airesponse)",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"rr_GetResponseTargets": {
			"class": "Global",
			"class_cl": "Global",
			"function": "rr_GetResponseTargets",
			"return": "handle",
			"description": "Retrieve a table of all available expresser targets, in the form { name : handle, name: handle }.",
			"server": true,
			"client": true,
			"params": {}
		},
		"rr_QueryBestResponse": {
			"class": "Global",
			"class_cl": "Global",
			"function": "rr_QueryBestResponse",
			"return": "bool",
			"description": "Params: (entity, query) : tests `query` against entity`s response system and returns the best response found (or null if none found).",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"Clamp": {
			"class": "Global",
			"class_cl": "Global",
			"function": "Clamp",
			"return": "float",
			"description": "将传入值限制在最大值与最小值之间。",
			"server": true,
			"client": true,
			"example": "local a = Clamp(2, 4, 5) -- a = 4",
			"params": {
				"val": {
					"type": "float",
					"params_name": "val",
					"description": "val"
				},
				"min": {
					"type": "float",
					"params_name": "min",
					"description": "min"
				},
				"max": {
					"type": "float",
					"params_name": "max",
					"description": "max"
				}
			}
		},
		"Deg2Rad": {
			"class": "Global",
			"class_cl": "Global",
			"function": "Deg2Rad",
			"return": "float",
			"description": "将角度转换为弧度。",
			"server": true,
			"client": true,
			"example": "local rad = Deg2Rad(60)",
			"params": {
				"deg": {
					"type": "float",
					"params_name": "deg",
					"description": "角度"
				}
			}
		},
		"Lerp": {
			"class": "Global",
			"class_cl": "Global",
			"function": "Lerp",
			"return": "float",
			"description": "线性插值。传入[0, 1]的值，返回[min, max]中的线性插值。",
			"server": true,
			"client": true,
			"example": "local val = Lerp(0.5, 0, 10) -- val = 5",
			"params": {
				"val": {
					"type": "float",
					"params_name": "val",
					"description": "val"
				},
				"min": {
					"type": "float",
					"params_name": "min",
					"description": "最小值"
				},
				"max": {
					"type": "float",
					"params_name": "max",
					"description": "最大值"
				}
			}
		},
		"Merge": {
			"class": "Global",
			"class_cl": "Global",
			"function": "Merge",
			"return": "table",
			"description": "将两个表合并为第三个表，覆盖所有匹配键（t1覆盖t2）。",
			"server": true,
			"client": true,
			"example": "local t3 = Merge(t1, t2)",
			"params": {
				"t1": {
					"type": "table",
					"params_name": "t1",
					"description": "t1"
				},
				"t2": {
					"type": "table",
					"params_name": "t2",
					"description": "t2"
				}
			}
		},
		"Rad2Deg": {
			"class": "Global",
			"class_cl": "Global",
			"function": "Rad2Deg",
			"return": "float",
			"description": "将弧度转换为角度。",
			"server": true,
			"client": true,
			"example": "local deg = Rad2Deg(3.14)",
			"params": {
				"rad": {
					"type": "float",
					"params_name": "rad",
					"description": "角度"
				}
			}
		},
		"RemapVal": {
			"class": "Global",
			"class_cl": "Global",
			"function": "RemapVal",
			"return": "float",
			"description": "将传入值从范围[a, b]映射到范围[c, d]。返回值有可能超过范围[c, d]。",
			"server": true,
			"client": true,
			"example": "local val = RemapVal(0.5, 0, 1, 10, 20) -- val = 15",
			"params": {
				"input": {
					"type": "float",
					"params_name": "input",
					"description": "input"
				},
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				},
				"c": {
					"type": "float",
					"params_name": "c",
					"description": "c"
				},
				"d": {
					"type": "float",
					"params_name": "d",
					"description": "d"
				}
			}
		},
		"VectorDistance": {
			"class": "Global",
			"class_cl": "Global",
			"function": "VectorDistance",
			"return": "float",
			"description": "两个矢量之间的距离<br>return math.sqrt(VectorDistanceSq(v1, v2))",
			"server": true,
			"client": true,
			"example": "local val = VectorDistance(v1, v2)",
			"params": {
				"v1": {
					"type": "Vector",
					"params_name": "v1",
					"description": "v1"
				},
				"v2": {
					"type": "Vector",
					"params_name": "v2",
					"description": "v2"
				}
			}
		},
		"VectorDistanceSq": {
			"class": "Global",
			"class_cl": "Global",
			"function": "VectorDistanceSq",
			"return": "float",
			"description": "两个矢量之间的距离平方(比计算平面距离快)<br>return (v1.x - v2.x) * (v1.x - v2.x) + (v1.y - v2.y) * (v1.y - v2.y) + (v1.z - v2.z) * (v1.z - v2.z)",
			"server": true,
			"client": true,
			"example": "local val = VectorDistanceSq(v1, v2)",
			"params": {
				"v1": {
					"type": "Vector",
					"params_name": "v1",
					"description": "v1"
				},
				"v2": {
					"type": "Vector",
					"params_name": "v2",
					"description": "v2"
				}
			}
		},
		"VectorIsZero": {
			"class": "Global",
			"class_cl": "Global",
			"function": "VectorIsZero",
			"return": "bool",
			"description": "检查向量是否为零向量。<br>return (v.x == 0.0) and (v.y == 0.0) and (v.z == 0.0)",
			"server": true,
			"client": true,
			"example": "local val = VectorIsZero(v)",
			"params": {
				"v": {
					"type": "Vector",
					"params_name": "v",
					"description": "v"
				}
			}
		},
		"VectorLerp": {
			"class": "Global",
			"class_cl": "Global",
			"function": "VectorLerp",
			"return": "Vector",
			"description": "向量值在[0，1]上的线性插值。跟另一个全局函数LerpVectors功能一样。<br>return Vector(Lerp(t, a.x, b.x), Lerp(t, a.y, b.y), Lerp(t, a.z, b.z))",
			"server": true,
			"client": true,
			"example": "local val = VectorLerp(t, v1, v2)",
			"params": {
				"t": {
					"type": "Vector",
					"params_name": "t",
					"description": "t"
				},
				"v1": {
					"type": "Vector",
					"params_name": "v1",
					"description": "v1"
				},
				"v2": {
					"type": "Vector",
					"params_name": "v2",
					"description": "v2"
				}
			}
		},
		"abs": {
			"class": "Global",
			"class_cl": "Global",
			"function": "abs",
			"return": "float",
			"description": "取绝对值。",
			"server": true,
			"client": true,
			"example": "local a = abs(-1)",
			"params": {
				"val": {
					"type": "float",
					"params_name": "val",
					"description": "val"
				}
			}
		},
		"max": {
			"class": "Global",
			"class_cl": "Global",
			"function": "max",
			"return": "float",
			"description": "返回其中的较大值。",
			"server": true,
			"client": true,
			"example": "local max = max(1, 2) -- max = 2",
			"params": {
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"min": {
			"class": "Global",
			"class_cl": "Global",
			"function": "min",
			"return": "float",
			"description": "返回其中的较小值。",
			"server": true,
			"client": true,
			"example": "local min = min(1, 2) -- min = 1",
			"params": {
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"vlua.clear": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.clear",
			"return": "table",
			"description": "Implements Squirrel clear table method.",
			"server": true,
			"client": true,
			"example": "table vlua.clear(table t)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				}
			}
		},
		"vlua.clone": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.clone",
			"return": "table",
			"description": "Implements Squirrel clone operator.",
			"server": true,
			"client": true,
			"example": "table vlua.clone(table t)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				}
			}
		},
		"vlua.compare": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.compare",
			"return": "int",
			"description": "Implements Squirrel three way compare operator ( <=> ).",
			"server": true,
			"client": true,
			"example": "int vlua.compare(float a, float b)",
			"params": {
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"vlua.contains": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.contains",
			"return": "bool",
			"description": "Implements Squirrel in operator.",
			"server": true,
			"client": true,
			"example": "bool vlua.contains(table t, variable key)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				},
				"key": {
					"type": "variable",
					"params_name": "key",
					"description": "key"
				}
			}
		},
		"vlua.delete": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.delete",
			"return": "table",
			"description": "Implements Squirrel slot delete operator.",
			"server": true,
			"client": true,
			"example": "table vlua.delete(table t, variable key)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				},
				"key": {
					"type": "variable",
					"params_name": "key",
					"description": "key"
				}
			}
		},
		"vlua.extend": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.extend",
			"return": "table",
			"description": "Implements Squirrel extend method for tables.",
			"server": true,
			"client": true,
			"example": "table vlua.extend(table o, array array)",
			"params": {
				"o": {
					"type": "table",
					"params_name": "o",
					"description": "o"
				},
				"array": {
					"type": "array",
					"params_name": "array",
					"description": "array"
				}
			}
		},
		"vlua.find": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.find",
			"return": "variable",
			"description": "Implements Squirrel find method for tables and strings. (o, substr, [startidx]) for strings, (o, value) for tables",
			"server": true,
			"client": true,
			"example": "variable vlua.find([table/string] o, variable value, [int startIndex])",
			"params": {
				"o": {
					"type": "[table/string]",
					"params_name": "o",
					"description": "o"
				},
				"value": {
					"type": "variable",
					"params_name": "value",
					"description": "value"
				},
				"startIndex": {
					"type": "int",
					"params_name": "startIndex",
					"description": "startIndex"
				}
			}
		},
		"vlua.map": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.map",
			"return": "table",
			"description": "Implements Squirrel map method for tables.",
			"server": true,
			"client": true,
			"example": "table vlua.map(table o, function mapFunc)",
			"params": {
				"o": {
					"type": "table",
					"params_name": "o",
					"description": "o"
				},
				"mapFunc": {
					"type": "function",
					"params_name": "mapFunc",
					"description": "mapFunc"
				}
			}
		},
		"vlua.rawdelete": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.rawdelete",
			"return": "table",
			"description": "Implements Squirrel rawdelete library function.",
			"server": true,
			"client": true,
			"example": "table vlua.rawdelete(table t, variable key)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				},
				"key": {
					"type": "variable",
					"params_name": "key",
					"description": "key"
				}
			}
		},
		"vlua.rawin": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.rawin",
			"return": "table",
			"description": "Implements Squirrel rawin library function.",
			"server": true,
			"client": true,
			"example": "table vlua.rawin(table t, variable key)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				},
				"key": {
					"type": "variable",
					"params_name": "key",
					"description": "key"
				}
			}
		},
		"vlua.reduce": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.reduce",
			"return": "table",
			"description": "Implements Squirrel reduce method for tables.",
			"server": true,
			"client": true,
			"example": "table vlua.reduce(table o, function reduceFunc)",
			"params": {
				"o": {
					"type": "table",
					"params_name": "o",
					"description": "o"
				},
				"reduceFunc": {
					"type": "function",
					"params_name": "reduceFunc",
					"description": "reduceFunc"
				}
			}
		},
		"vlua.resize": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.resize",
			"return": "table",
			"description": "Implements Squirrel resize method for tables.",
			"server": true,
			"client": true,
			"example": "table vlua.resize(string o, int size, [variable fill])",
			"params": {
				"o": {
					"type": "string",
					"params_name": "o",
					"description": "o"
				},
				"size": {
					"type": "int",
					"params_name": "size",
					"description": "size"
				},
				"fill": {
					"type": "variable",
					"params_name": "fill",
					"description": "fill"
				}
			}
		},
		"vlua.reverse": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.reverse",
			"return": "table",
			"description": "Implements Squirrel reverse method for tables.",
			"server": true,
			"client": true,
			"example": "table vlua.reverse(table o)",
			"params": {
				"o": {
					"type": "table",
					"params_name": "o",
					"description": "o"
				}
			}
		},
		"vlua.select": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.select",
			"return": "variable",
			"description": "Safe Ternary operator. The Lua version will return the wrong value if the value if true is nil.",
			"server": true,
			"client": true,
			"example": "variable vlua.select(bool conditional, variable valueIfTrue, variable valueIfFalse)",
			"params": {
				"conditional": {
					"type": "bool",
					"params_name": "conditional",
					"description": "conditional"
				},
				"valueIfTrue": {
					"type": "variable",
					"params_name": "valueIfTrue",
					"description": "valueIfTrue"
				},
				"valueIfFalse": {
					"type": "variable",
					"params_name": "valueIfFalse",
					"description": "valueIfFalse"
				}
			}
		},
		"vlua.slice": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.slice",
			"return": "variable",
			"description": "Implements Squirrel slice method for tables and strings.",
			"server": true,
			"client": true,
			"example": "variable vlua.slice([table/string] o, int startIndex, [int endIndex])",
			"params": {
				"o": {
					"type": "[table/string]",
					"params_name": "o",
					"description": "o"
				},
				"startIndex": {
					"type": "int",
					"params_name": "startIndex",
					"description": "startIndex"
				},
				"endIndex": {
					"type": "int",
					"params_name": "endIndex",
					"description": "endIndex"
				}
			}
		},
		"vlua.split": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.split",
			"return": "table",
			"description": "Implements Squirrel split function for strings.",
			"server": true,
			"client": true,
			"example": "table vlua.split(string input, string separator)",
			"params": {
				"input": {
					"type": "string",
					"params_name": "input",
					"description": "input"
				},
				"separator": {
					"type": "string",
					"params_name": "separator",
					"description": "separator"
				}
			}
		},
		"vlua.tableadd": {
			"class": "Global",
			"class_cl": "Global",
			"function": "vlua.tableadd",
			"return": "table",
			"description": "Implements tableadd function to support += paradigm used in Squirrel.",
			"server": true,
			"client": true,
			"example": "table vlua.tableadd (table t1, table t2)",
			"params": {
				"t1": {
					"type": "table",
					"params_name": "t1",
					"description": "t1"
				},
				"t2": {
					"type": "table",
					"params_name": "t2",
					"description": "t2"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CBaseAnimating": {
		"description": "extends CBaseModelEntity",
		"ActiveSequenceDuration": {
			"class": "CBaseAnimating",
			"function": "ActiveSequenceDuration",
			"return": "float",
			"description": "Returns the duration in seconds of the active sequence.",
			"server": true,
			"params": {}
		},
		"GetCycle": {
			"class": "CBaseAnimating",
			"function": "GetCycle",
			"return": "float",
			"description": "Get the cycle of the animation.",
			"server": true,
			"params": {}
		},
		"GetGraphParameter": {
			"class": "CBaseAnimating",
			"function": "GetGraphParameter",
			"return": "table",
			"description": "Get the value of the given animGraph parameter",
			"server": true,
			"params": {
				"pszParam": {
					"type": "string",
					"params_name": "pszParam",
					"description": "No Description Set"
				}
			}
		},
		"GetSequence": {
			"class": "CBaseAnimating",
			"function": "GetSequence",
			"return": "string",
			"description": "Returns the name of the active sequence.",
			"server": true,
			"params": {}
		},
		"IsSequenceFinished": {
			"class": "CBaseAnimating",
			"function": "IsSequenceFinished",
			"return": "bool",
			"description": "Ask whether the main sequence is done playing.",
			"server": true,
			"params": {}
		},
		"ResetSequence": {
			"class": "CBaseAnimating",
			"function": "ResetSequence",
			"return": "void",
			"description": "Sets the active sequence by name, resetting the current cycle.",
			"server": true,
			"params": {
				"pSequenceName": {
					"type": "string",
					"params_name": "pSequenceName",
					"description": "No Description Set"
				}
			}
		},
		"SequenceDuration": {
			"class": "CBaseAnimating",
			"function": "SequenceDuration",
			"return": "float",
			"description": "Returns the duration in seconds of the given sequence name.",
			"server": true,
			"params": {
				"pSequenceName": {
					"type": "string",
					"params_name": "pSequenceName",
					"description": "No Description Set"
				}
			}
		},
		"SetCycle": {
			"class": "CBaseAnimating",
			"function": "SetCycle",
			"return": "void",
			"description": "Set the cycle of the animation.",
			"server": true,
			"params": {
				"flCycle": {
					"type": "float",
					"params_name": "flCycle",
					"description": "No Description Set"
				}
			}
		},
		"SetGraphLookTarget": {
			"class": "CBaseAnimating",
			"function": "SetGraphLookTarget",
			"return": "void",
			"description": "Pass the desired look target in world space to the graph",
			"server": true,
			"params": {
				"vValue": {
					"type": "Vector",
					"params_name": "vValue",
					"description": "No Description Set"
				}
			}
		},
		"SetGraphParameter": {
			"class": "CBaseAnimating",
			"function": "SetGraphParameter",
			"return": "void",
			"description": "Set the specific param value, type is inferred from the type in script",
			"server": true,
			"params": {
				"pszParam": {
					"type": "string",
					"params_name": "pszParam",
					"description": "No Description Set"
				},
				"svArg": {
					"type": "table",
					"params_name": "svArg",
					"description": "No Description Set"
				}
			}
		},
		"SetGraphParameterBool": {
			"class": "CBaseAnimating",
			"function": "SetGraphParameterBool",
			"return": "void",
			"description": "Set the specific param on or off",
			"server": true,
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "No Description Set"
				},
				"bValue": {
					"type": "bool",
					"params_name": "bValue",
					"description": "No Description Set"
				}
			}
		},
		"SetGraphParameterEnum": {
			"class": "CBaseAnimating",
			"function": "SetGraphParameterEnum",
			"return": "void",
			"description": "Pass the enum (int) value to the specified param",
			"server": true,
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "No Description Set"
				},
				"nValue": {
					"type": "int",
					"params_name": "nValue",
					"description": "No Description Set"
				}
			}
		},
		"SetGraphParameterFloat": {
			"class": "CBaseAnimating",
			"function": "SetGraphParameterFloat",
			"return": "void",
			"description": "Pass the float value to the specified param",
			"server": true,
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "No Description Set"
				},
				"flValue": {
					"type": "float",
					"params_name": "flValue",
					"description": "No Description Set"
				}
			}
		},
		"SetGraphParameterInt": {
			"class": "CBaseAnimating",
			"function": "SetGraphParameterInt",
			"return": "void",
			"description": "Pass the int value to the specified param",
			"server": true,
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "No Description Set"
				},
				"nValue": {
					"type": "int",
					"params_name": "nValue",
					"description": "No Description Set"
				}
			}
		},
		"SetGraphParameterVector": {
			"class": "CBaseAnimating",
			"function": "SetGraphParameterVector",
			"return": "void",
			"description": "Pass the vector value to the specified param in the graph",
			"server": true,
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "No Description Set"
				},
				"vValue": {
					"type": "Vector",
					"params_name": "vValue",
					"description": "No Description Set"
				}
			}
		},
		"SetPoseParameter": {
			"class": "CBaseAnimating",
			"function": "SetPoseParameter",
			"return": "float",
			"description": "Set the specified pose parameter to the specified value.",
			"server": true,
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "No Description Set"
				},
				"fValue": {
					"type": "float",
					"params_name": "fValue",
					"description": "No Description Set"
				}
			}
		},
		"SetSequence": {
			"class": "CBaseAnimating",
			"function": "SetSequence",
			"return": "void",
			"description": "Sets the active sequence by name, keeping the current cycle.",
			"server": true,
			"params": {
				"pSequenceName": {
					"type": "string",
					"params_name": "pSequenceName",
					"description": "No Description Set"
				}
			}
		},
		"StopAnimation": {
			"class": "CBaseAnimating",
			"function": "StopAnimation",
			"return": "void",
			"description": "Stop the current animation by setting playback rate to 0.0.",
			"server": true,
			"params": {}
		},
		"extends": "CBaseModelEntity",
		"variable": ""
	},
	"CBaseCombatCharacter": {
		"description": "extends CBaseFlex"
	},
	"CBaseEntity": {
		"description": "extends CEntityInstance",
		"GetAbsOrigin": {
			"class": "CBaseEntity",
			"class_cl": "C_BaseEntity",
			"function": "GetAbsOrigin",
			"return": "Vector",
			"description": "获取单位绝对位置坐标",
			"server": true,
			"client": true,
			"example": "undefined",
			"params": {}
		},
		"Activate": {
			"class": "CBaseEntity",
			"function": "Activate",
			"return": "void",
			"server": true,
			"client": false,
			"description": "Called on Activate(), after the entity has spawned. If the entity is spawned on map load, Activate() is called after all entities have spawned. The activateType parameter contains an enumeration as documented here.",
			"example": "void Activate(int activateType)",
			"params": {
				"activateType": {
					"type": "int",
					"params_name": "activateType",
					"description": "activateType"
				}
			}
		},
		"OnBreak": {
			"class": "CBaseEntity",
			"function": "OnBreak",
			"return": "void",
			"server": true,
			"client": false,
			"description": "Called when a breakable entity is broken. To do: Find out what entity classes this works for?",
			"example": "void OnBreak(CBaseEntity inflictor)",
			"params": {
				"inflictor": {
					"type": "CBaseEntity",
					"params_name": "inflictor",
					"description": "inflictor"
				}
			}
		},
		"OnEntText": {
			"class": "CBaseEntity",
			"function": "OnEntText",
			"return": "string",
			"server": true,
			"client": false,
			"description": "Called every frame when ent_text is enabled on the entity. Return a string to be added to the ent_text printout.",
			"example": "string OnEntText()",
			"params": {}
		},
		"OnTakeDamage": {
			"class": "CBaseEntity",
			"function": "OnTakeDamage",
			"return": "unknown",
			"server": true,
			"client": false,
			"description": "Called when the entity takes damage. Table format: {inflictor = handle, damage_direction = Vector, damage_position = Vector, damage_force = Vector, damage = int, attacker = handle} To do: Check which entity classes can take damage. Prop_physics and prop_dynamic confirmed, but the function doesn't get called in every case.",
			"example": "unknown OnTakeDamage(table damageTable)",
			"params": {
				"damageTable": {
					"type": "table",
					"params_name": "damageTable",
					"description": "damageTable"
				}
			}
		},
		"Precache": {
			"class": "CBaseEntity",
			"function": "Precache",
			"return": "void",
			"server": true,
			"client": false,
			"description": "Called when the entity is precached. Used to precache any additional resources needed by the script using the global Precache family of script functions.",
			"example": "void Precache(CScriptPrecacheContext context)",
			"params": {
				"context": {
					"type": "CScriptPrecacheContext",
					"params_name": "context",
					"description": "context"
				}
			}
		},
		"Spawn": {
			"class": "CBaseEntity",
			"function": "Spawn",
			"return": "void",
			"server": true,
			"client": false,
			"description": "Called on Spawn(), just after the entity has been created, but before it has been initialized. Passes a CScriptKeyValues handle that can be used to query the entity spawn keyvalues.",
			"example": "void Spawn(CScriptKeyValues spawnkeys)",
			"params": {
				"spawnkeys": {
					"type": "CScriptKeyValues",
					"params_name": "spawnkeys",
					"description": "spawnkeys"
				}
			}
		},
		"UpdateOnRemove": {
			"class": "CBaseEntity",
			"function": "UpdateOnRemove",
			"return": "void",
			"server": true,
			"client": false,
			"description": "Called before the entity is killed.",
			"example": "void UpdateOnRemove()",
			"params": {}
		},
		"AddEffects": {
			"class": "CBaseEntity",
			"function": "AddEffects",
			"return": "void",
			"description": "AddEffects( int ): Adds the render effect flag.",
			"server": true,
			"params": {
				"nFlags": {
					"type": "int",
					"params_name": "nFlags",
					"description": "No Description Set"
				}
			}
		},
		"ApplyAbsVelocityImpulse": {
			"class": "CBaseEntity",
			"function": "ApplyAbsVelocityImpulse",
			"return": "void",
			"description": "Apply a Velocity Impulse",
			"server": true,
			"params": {
				"vecImpulse": {
					"type": "Vector",
					"params_name": "vecImpulse",
					"description": "No Description Set"
				}
			}
		},
		"ApplyLocalAngularVelocityImpulse": {
			"class": "CBaseEntity",
			"function": "ApplyLocalAngularVelocityImpulse",
			"return": "void",
			"description": "Apply an Ang Velocity Impulse",
			"server": true,
			"params": {
				"angImpulse": {
					"type": "Vector",
					"params_name": "angImpulse",
					"description": "No Description Set"
				}
			}
		},
		"Attribute_GetFloatValue": {
			"class": "CBaseEntity",
			"function": "Attribute_GetFloatValue",
			"return": "float",
			"description": "Get float value for an entity attribute.",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				},
				"flDefault": {
					"type": "float",
					"params_name": "flDefault",
					"description": "No Description Set"
				}
			}
		},
		"Attribute_GetIntValue": {
			"class": "CBaseEntity",
			"function": "Attribute_GetIntValue",
			"return": "int",
			"description": "Get int value for an entity attribute.",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				},
				"nDefault": {
					"type": "int",
					"params_name": "nDefault",
					"description": "No Description Set"
				}
			}
		},
		"Attribute_SetFloatValue": {
			"class": "CBaseEntity",
			"function": "Attribute_SetFloatValue",
			"return": "void",
			"description": "Set float value for an entity attribute.",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				},
				"flValue": {
					"type": "float",
					"params_name": "flValue",
					"description": "No Description Set"
				}
			}
		},
		"Attribute_SetIntValue": {
			"class": "CBaseEntity",
			"function": "Attribute_SetIntValue",
			"return": "void",
			"description": "Set int value for an entity attribute.",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				},
				"nValue": {
					"type": "int",
					"params_name": "nValue",
					"description": "No Description Set"
				}
			}
		},
		"DeleteAttribute": {
			"class": "CBaseEntity",
			"function": "DeleteAttribute",
			"return": "void",
			"description": "Delete an entity attribute.",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				}
			}
		},
		"EmitSound": {
			"class": "CBaseEntity",
			"function": "EmitSound",
			"return": "void",
			"description": "Plays a sound from this entity.",
			"server": true,
			"params": {
				"soundname": {
					"type": "string",
					"params_name": "soundname",
					"description": "No Description Set"
				}
			}
		},
		"EmitSoundParams": {
			"class": "CBaseEntity",
			"function": "EmitSoundParams",
			"return": "void",
			"description": "Plays/modifies a sound from this entity. changes sound if nPitch and/or flVol or flSoundTime is > 0.",
			"server": true,
			"params": {
				"soundname": {
					"type": "string",
					"params_name": "soundname",
					"description": "No Description Set"
				},
				"nPitch": {
					"type": "int",
					"params_name": "nPitch",
					"description": "No Description Set"
				},
				"flVolume": {
					"type": "float",
					"params_name": "flVolume",
					"description": "No Description Set"
				},
				"flDelay": {
					"type": "float",
					"params_name": "flDelay",
					"description": "No Description Set"
				}
			}
		},
		"EyeAngles": {
			"class": "CBaseEntity",
			"function": "EyeAngles",
			"return": "QAngle",
			"description": "Get the qangles that this entity is looking at.",
			"server": true,
			"params": {}
		},
		"EyePosition": {
			"class": "CBaseEntity",
			"function": "EyePosition",
			"return": "Vector",
			"description": "Get vector to eye position - absolute coords.",
			"server": true,
			"params": {}
		},
		"FirstMoveChild": {
			"class": "CBaseEntity",
			"function": "FirstMoveChild",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"FollowEntity": {
			"class": "CBaseEntity",
			"function": "FollowEntity",
			"return": "void",
			"description": "hEntity to follow, bool bBoneMerge",
			"server": true,
			"params": {
				"hEnt": {
					"type": "handle",
					"params_name": "hEnt",
					"description": "No Description Set"
				},
				"bBoneMerge": {
					"type": "bool",
					"params_name": "bBoneMerge",
					"description": "No Description Set"
				}
			}
		},
		"GatherCriteria": {
			"class": "CBaseEntity",
			"function": "GatherCriteria",
			"return": "void",
			"description": "Returns a table containing the criteria that would be used for response queries on this entity. This is the same as the table that is passed to response rule script function callbacks.",
			"server": true,
			"params": {
				"hResult": {
					"type": "handle",
					"params_name": "hResult",
					"description": "No Description Set"
				}
			}
		},
		"GetAbsScale": {
			"class": "CBaseEntity",
			"function": "GetAbsScale",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetAngles": {
			"class": "CBaseEntity",
			"function": "GetAngles",
			"return": "QAngle",
			"server": true,
			"params": {}
		},
		"GetAnglesAsVector": {
			"class": "CBaseEntity",
			"function": "GetAnglesAsVector",
			"return": "Vector",
			"description": "Get entity pitch, yaw, roll as a vector.",
			"server": true,
			"params": {}
		},
		"GetAngularVelocity": {
			"class": "CBaseEntity",
			"function": "GetAngularVelocity",
			"return": "Vector",
			"description": "Get the local angular velocity - returns a vector of pitch,yaw,roll",
			"server": true,
			"params": {}
		},
		"GetBaseVelocity": {
			"class": "CBaseEntity",
			"function": "GetBaseVelocity",
			"return": "Vector",
			"description": "Get Base? velocity.",
			"server": true,
			"params": {}
		},
		"GetBoundingMaxs": {
			"class": "CBaseEntity",
			"function": "GetBoundingMaxs",
			"return": "Vector",
			"description": "Get a vector containing max bounds, centered on object.",
			"server": true,
			"params": {}
		},
		"GetBoundingMins": {
			"class": "CBaseEntity",
			"function": "GetBoundingMins",
			"return": "Vector",
			"description": "Get a vector containing min bounds, centered on object.",
			"server": true,
			"params": {}
		},
		"GetBounds": {
			"class": "CBaseEntity",
			"function": "GetBounds",
			"return": "table",
			"description": "Get a table containing the `Mins` & `Maxs` vector bounds, centered on object.",
			"server": true,
			"params": {}
		},
		"GetCenter": {
			"class": "CBaseEntity",
			"function": "GetCenter",
			"return": "Vector",
			"description": "Get vector to center of object - absolute coords",
			"server": true,
			"params": {}
		},
		"GetChildren": {
			"class": "CBaseEntity",
			"function": "GetChildren",
			"return": "handle",
			"description": "Get the entities parented to this entity.",
			"server": true,
			"params": {}
		},
		"GetContext": {
			"class": "CBaseEntity",
			"function": "GetContext",
			"return": "table",
			"description": "GetContext( name ): looks up a context and returns it if available. May return string, float, or null (if the context isn`t found).",
			"server": true,
			"params": {
				"name": {
					"type": "string",
					"params_name": "name",
					"description": "No Description Set"
				}
			}
		},
		"GetForwardVector": {
			"class": "CBaseEntity",
			"function": "GetForwardVector",
			"return": "Vector",
			"description": "得到实体的前向向量。",
			"server": true,
			"example": "得到实体的前向向量。",
			"params": {}
		},
		"GetHealth": {
			"class": "CBaseEntity",
			"function": "GetHealth",
			"return": "int",
			"description": "Get the health of this entity.",
			"server": true,
			"params": {}
		},
		"GetLocalAngles": {
			"class": "CBaseEntity",
			"function": "GetLocalAngles",
			"return": "QAngle",
			"description": "Get entity local pitch, yaw, roll as a QAngle",
			"server": true,
			"params": {}
		},
		"GetLocalAngularVelocity": {
			"class": "CBaseEntity",
			"function": "GetLocalAngularVelocity",
			"return": "QAngle",
			"description": "Maybe local angvel",
			"server": true,
			"params": {}
		},
		"GetLocalOrigin": {
			"class": "CBaseEntity",
			"function": "GetLocalOrigin",
			"return": "Vector",
			"description": "Get entity local origin as a Vector",
			"server": true,
			"params": {}
		},
		"GetLocalScale": {
			"class": "CBaseEntity",
			"function": "GetLocalScale",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetLocalVelocity": {
			"class": "CBaseEntity",
			"function": "GetLocalVelocity",
			"return": "Vector",
			"description": "Get Entity relative velocity.",
			"server": true,
			"params": {}
		},
		"GetMass": {
			"class": "CBaseEntity",
			"function": "GetMass",
			"return": "float",
			"description": "Get the mass of an entity. (returns 0 if it doesn`t have a physics object)",
			"server": true,
			"params": {}
		},
		"GetMaxHealth": {
			"class": "CBaseEntity",
			"class_cl": "C_BaseEntity",
			"function": "GetMaxHealth",
			"return": "int",
			"description": "Get the maximum health of this entity.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetModelName": {
			"class": "CBaseEntity",
			"function": "GetModelName",
			"return": "string",
			"description": "Returns the name of the model.",
			"server": true,
			"params": {}
		},
		"GetMoveParent": {
			"class": "CBaseEntity",
			"function": "GetMoveParent",
			"return": "handle",
			"description": "If in hierarchy, retrieves the entity`s parent.",
			"server": true,
			"params": {}
		},
		"GetOrigin": {
			"class": "CBaseEntity",
			"function": "GetOrigin",
			"return": "Vector",
			"server": true,
			"params": {}
		},
		"GetOwner": {
			"class": "CBaseEntity",
			"function": "GetOwner",
			"return": "handle",
			"description": "Gets this entity`s owner",
			"server": true,
			"params": {}
		},
		"GetOwnerEntity": {
			"class": "CBaseEntity",
			"function": "GetOwnerEntity",
			"return": "handle",
			"description": "Get the owner entity, if there is one",
			"server": true,
			"params": {}
		},
		"GetRightVector": {
			"class": "CBaseEntity",
			"function": "GetRightVector",
			"return": "Vector",
			"description": "Get the right vector of the entity.",
			"server": true,
			"params": {}
		},
		"GetRootMoveParent": {
			"class": "CBaseEntity",
			"function": "GetRootMoveParent",
			"return": "handle",
			"description": "If in hierarchy, walks up the hierarchy to find the root parent.",
			"server": true,
			"params": {}
		},
		"GetSoundDuration": {
			"class": "CBaseEntity",
			"function": "GetSoundDuration",
			"return": "float",
			"description": "Returns float duration of the sound. Takes soundname and optional actormodelname.",
			"server": true,
			"params": {
				"soundname": {
					"type": "string",
					"params_name": "soundname",
					"description": "No Description Set"
				},
				"actormodel": {
					"type": "string",
					"params_name": "actormodel",
					"description": "No Description Set"
				}
			}
		},
		"GetSpawnGroupHandle": {
			"class": "CBaseEntity",
			"function": "GetSpawnGroupHandle",
			"return": "int",
			"description": "Returns the spawn group handle of this entity",
			"server": true,
			"params": {}
		},
		"GetTeam": {
			"class": "CBaseEntity",
			"function": "GetTeam",
			"return": "int",
			"description": "Get the team number of this entity.",
			"server": true,
			"params": {}
		},
		"GetTeamNumber": {
			"class": "CBaseEntity",
			"class_cl": "C_BaseEntity",
			"function": "GetTeamNumber",
			"return": "int",
			"description": "Get the team number of this entity.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetUpVector": {
			"class": "CBaseEntity",
			"function": "GetUpVector",
			"return": "Vector",
			"description": "Get the up vector of the entity.",
			"server": true,
			"params": {}
		},
		"GetVelocity": {
			"class": "CBaseEntity",
			"function": "GetVelocity",
			"return": "Vector",
			"server": true,
			"params": {}
		},
		"HasAttribute": {
			"class": "CBaseEntity",
			"function": "HasAttribute",
			"return": "bool",
			"description": "See if an entity has a particular attribute.",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				}
			}
		},
		"IsAlive": {
			"class": "CBaseEntity",
			"function": "IsAlive",
			"return": "bool",
			"description": "Is this entity alive?",
			"server": true,
			"params": {}
		},
		"IsNPC": {
			"class": "CBaseEntity",
			"function": "IsNPC",
			"return": "bool",
			"description": "Is this entity an CAI_BaseNPC?",
			"server": true,
			"params": {}
		},
		"IsPlayer": {
			"class": "CBaseEntity",
			"function": "IsPlayer",
			"return": "bool",
			"description": "Is this entity a player?",
			"server": true,
			"params": {}
		},
		"Kill": {
			"class": "CBaseEntity",
			"function": "Kill",
			"return": "void",
			"server": true,
			"params": {}
		},
		"NextMovePeer": {
			"class": "CBaseEntity",
			"function": "NextMovePeer",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"OverrideFriction": {
			"class": "CBaseEntity",
			"function": "OverrideFriction",
			"return": "void",
			"description": "Takes duration, value for a temporary override.",
			"server": true,
			"params": {
				"duration": {
					"type": "float",
					"params_name": "duration",
					"description": "No Description Set"
				},
				"friction": {
					"type": "float",
					"params_name": "friction",
					"description": "No Description Set"
				}
			}
		},
		"PrecacheScriptSound": {
			"class": "CBaseEntity",
			"function": "PrecacheScriptSound",
			"return": "void",
			"description": "Precache a sound for later playing.",
			"server": true,
			"params": {
				"soundname": {
					"type": "string",
					"params_name": "soundname",
					"description": "No Description Set"
				}
			}
		},
		"RemoveEffects": {
			"class": "CBaseEntity",
			"function": "RemoveEffects",
			"return": "void",
			"description": "RemoveEffects( int ): Removes the render effect flag.",
			"server": true,
			"params": {
				"nFlags": {
					"type": "int",
					"params_name": "nFlags",
					"description": "No Description Set"
				}
			}
		},
		"SetAbsAngles": {
			"class": "CBaseEntity",
			"function": "SetAbsAngles",
			"return": "void",
			"description": "Set entity pitch, yaw, roll by component.",
			"server": true,
			"params": {
				"fPitch": {
					"type": "float",
					"params_name": "fPitch",
					"description": "No Description Set"
				},
				"fYaw": {
					"type": "float",
					"params_name": "fYaw",
					"description": "No Description Set"
				},
				"fRoll": {
					"type": "float",
					"params_name": "fRoll",
					"description": "No Description Set"
				}
			}
		},
		"SetAbsOrigin": {
			"class": "CBaseEntity",
			"function": "SetAbsOrigin",
			"return": "void",
			"server": true,
			"params": {
				"origin": {
					"type": "Vector",
					"params_name": "origin",
					"description": "No Description Set"
				}
			}
		},
		"SetAbsScale": {
			"class": "CBaseEntity",
			"function": "SetAbsScale",
			"return": "void",
			"server": true,
			"params": {
				"flScale": {
					"type": "float",
					"params_name": "flScale",
					"description": "No Description Set"
				}
			}
		},
		"SetAngles": {
			"class": "CBaseEntity",
			"function": "SetAngles",
			"return": "void",
			"description": "Set entity pitch, yaw, roll by component.",
			"server": true,
			"params": {
				"fPitch": {
					"type": "float",
					"params_name": "fPitch",
					"description": "No Description Set"
				},
				"fYaw": {
					"type": "float",
					"params_name": "fYaw",
					"description": "No Description Set"
				},
				"fRoll": {
					"type": "float",
					"params_name": "fRoll",
					"description": "No Description Set"
				}
			}
		},
		"SetAngularVelocity": {
			"class": "CBaseEntity",
			"function": "SetAngularVelocity",
			"return": "void",
			"description": "Set the local angular velocity - takes float pitch,yaw,roll velocities",
			"server": true,
			"params": {
				"pitchVel": {
					"type": "float",
					"params_name": "pitchVel",
					"description": "No Description Set"
				},
				"yawVel": {
					"type": "float",
					"params_name": "yawVel",
					"description": "No Description Set"
				},
				"rollVel": {
					"type": "float",
					"params_name": "rollVel",
					"description": "No Description Set"
				}
			}
		},
		"SetConstraint": {
			"class": "CBaseEntity",
			"function": "SetConstraint",
			"return": "void",
			"description": "Set the position of the constraint.",
			"server": true,
			"params": {
				"vPos": {
					"type": "Vector",
					"params_name": "vPos",
					"description": "No Description Set"
				}
			}
		},
		"SetContext": {
			"class": "CBaseEntity",
			"function": "SetContext",
			"return": "void",
			"description": "SetContext( name , value, duration ): store any key/value pair in this entity`s dialog contexts. Value must be a string. Will last for duration (set 0 to mean `forever`).",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				},
				"pValue": {
					"type": "string",
					"params_name": "pValue",
					"description": "No Description Set"
				},
				"duration": {
					"type": "float",
					"params_name": "duration",
					"description": "No Description Set"
				}
			}
		},
		"SetContextNum": {
			"class": "CBaseEntity",
			"function": "SetContextNum",
			"return": "void",
			"description": "SetContextNum( name , value, duration ): store any key/value pair in this entity`s dialog contexts. Value must be a number (int or float). Will last for duration (set 0 to mean `forever`).",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				},
				"fValue": {
					"type": "float",
					"params_name": "fValue",
					"description": "No Description Set"
				},
				"duration": {
					"type": "float",
					"params_name": "duration",
					"description": "No Description Set"
				}
			}
		},
		"SetContextThink": {
			"class": "CBaseEntity",
			"class_cl": "C_BaseEntity",
			"function": "SetContextThink",
			"return": "void",
			"description": "Set a think function on this entity.",
			"server": true,
			"client": true,
			"params": {
				"pszContextName": {
					"type": "string",
					"params_name": "pszContextName",
					"description": "No Description Set"
				},
				"hThinkFunc": {
					"type": "handle",
					"params_name": "hThinkFunc",
					"description": "No Description Set"
				},
				"flInterval": {
					"type": "float",
					"params_name": "flInterval",
					"description": "No Description Set"
				}
			}
		},
		"SetEntityName": {
			"class": "CBaseEntity",
			"function": "SetEntityName",
			"return": "void",
			"description": "Set the name of an entity.",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				}
			}
		},
		"SetForwardVector": {
			"class": "CBaseEntity",
			"function": "SetForwardVector",
			"return": "void",
			"description": "Set the orientation of the entity to have this forward vector.",
			"server": true,
			"params": {
				"v": {
					"type": "Vector",
					"params_name": "v",
					"description": "No Description Set"
				}
			}
		},
		"SetFriction": {
			"class": "CBaseEntity",
			"function": "SetFriction",
			"return": "void",
			"description": "Set PLAYER friction, ignored for objects.",
			"server": true,
			"params": {
				"flFriction": {
					"type": "float",
					"params_name": "flFriction",
					"description": "No Description Set"
				}
			}
		},
		"SetGravity": {
			"class": "CBaseEntity",
			"function": "SetGravity",
			"return": "void",
			"description": "Set PLAYER gravity, ignored for objects.",
			"server": true,
			"params": {
				"flGravity": {
					"type": "float",
					"params_name": "flGravity",
					"description": "No Description Set"
				}
			}
		},
		"SetHealth": {
			"class": "CBaseEntity",
			"function": "SetHealth",
			"return": "void",
			"description": "Set the health of this entity.",
			"server": true,
			"params": {
				"nHealth": {
					"type": "int",
					"params_name": "nHealth",
					"description": "No Description Set"
				}
			}
		},
		"SetLocalAngles": {
			"class": "CBaseEntity",
			"function": "SetLocalAngles",
			"return": "void",
			"description": "Set entity local pitch, yaw, roll by component",
			"server": true,
			"params": {
				"fPitch": {
					"type": "float",
					"params_name": "fPitch",
					"description": "No Description Set"
				},
				"fYaw": {
					"type": "float",
					"params_name": "fYaw",
					"description": "No Description Set"
				},
				"fRoll": {
					"type": "float",
					"params_name": "fRoll",
					"description": "No Description Set"
				}
			}
		},
		"SetLocalOrigin": {
			"class": "CBaseEntity",
			"function": "SetLocalOrigin",
			"return": "void",
			"description": "Set entity local origin from a Vector",
			"server": true,
			"params": {
				"origin": {
					"type": "Vector",
					"params_name": "origin",
					"description": "No Description Set"
				}
			}
		},
		"SetLocalScale": {
			"class": "CBaseEntity",
			"function": "SetLocalScale",
			"return": "void",
			"server": true,
			"params": {
				"flScale": {
					"type": "float",
					"params_name": "flScale",
					"description": "No Description Set"
				}
			}
		},
		"SetMass": {
			"class": "CBaseEntity",
			"function": "SetMass",
			"return": "void",
			"description": "Set the mass of an entity. (does nothing if it doesn`t have a physics object)",
			"server": true,
			"params": {
				"flMass": {
					"type": "float",
					"params_name": "flMass",
					"description": "No Description Set"
				}
			}
		},
		"SetMaxHealth": {
			"class": "CBaseEntity",
			"function": "SetMaxHealth",
			"return": "void",
			"description": "Set the maximum health of this entity.",
			"server": true,
			"params": {
				"amt": {
					"type": "int",
					"params_name": "amt",
					"description": "No Description Set"
				}
			}
		},
		"SetOrigin": {
			"class": "CBaseEntity",
			"function": "SetOrigin",
			"return": "void",
			"server": true,
			"params": {
				"v": {
					"type": "Vector",
					"params_name": "v",
					"description": "No Description Set"
				}
			}
		},
		"SetOwner": {
			"class": "CBaseEntity",
			"function": "SetOwner",
			"return": "void",
			"description": "Sets this entity`s owner",
			"server": true,
			"params": {
				"pOwner": {
					"type": "handle",
					"params_name": "pOwner",
					"description": "No Description Set"
				}
			}
		},
		"SetParent": {
			"class": "CBaseEntity",
			"function": "SetParent",
			"return": "void",
			"description": "Set the parent for this entity.",
			"server": true,
			"params": {
				"hParent": {
					"type": "handle",
					"params_name": "hParent",
					"description": "No Description Set"
				},
				"pAttachmentname": {
					"type": "string",
					"params_name": "pAttachmentname",
					"description": "No Description Set"
				}
			}
		},
		"SetTeam": {
			"class": "CBaseEntity",
			"function": "SetTeam",
			"return": "void",
			"server": true,
			"params": {
				"iTeamNum": {
					"type": "int",
					"params_name": "iTeamNum",
					"description": "No Description Set"
				}
			}
		},
		"SetVelocity": {
			"class": "CBaseEntity",
			"function": "SetVelocity",
			"return": "void",
			"server": true,
			"params": {
				"vecVelocity": {
					"type": "Vector",
					"params_name": "vecVelocity",
					"description": "No Description Set"
				}
			}
		},
		"StopSound": {
			"class": "CBaseEntity",
			"function": "StopSound",
			"return": "void",
			"description": "Stops a named sound playing from this entity.",
			"server": true,
			"params": {
				"soundname": {
					"type": "string",
					"params_name": "soundname",
					"description": "No Description Set"
				}
			}
		},
		"TakeDamage": {
			"class": "CBaseEntity",
			"function": "TakeDamage",
			"return": "int",
			"description": "Apply damage to this entity. Use CreateDamageInfo() to create a damageinfo object.",
			"server": true,
			"params": {
				"hInfo": {
					"type": "handle",
					"params_name": "hInfo",
					"description": "No Description Set"
				}
			}
		},
		"TransformPointEntityToWorld": {
			"class": "CBaseEntity",
			"function": "TransformPointEntityToWorld",
			"return": "Vector",
			"description": "Returns the input Vector transformed from entity to world space",
			"server": true,
			"params": {
				"vPoint": {
					"type": "Vector",
					"params_name": "vPoint",
					"description": "No Description Set"
				}
			}
		},
		"TransformPointWorldToEntity": {
			"class": "CBaseEntity",
			"function": "TransformPointWorldToEntity",
			"return": "Vector",
			"description": "Returns the input Vector transformed from world to entity space",
			"server": true,
			"params": {
				"vPoint": {
					"type": "Vector",
					"params_name": "vPoint",
					"description": "No Description Set"
				}
			}
		},
		"Trigger": {
			"class": "CBaseEntity",
			"function": "Trigger",
			"return": "void",
			"description": "Fires off this entity`s OnTrigger responses.",
			"server": true,
			"params": {}
		},
		"ValidatePrivateScriptScope": {
			"class": "CBaseEntity",
			"function": "ValidatePrivateScriptScope",
			"return": "void",
			"description": "Validates the private script scope and creates it if one doesn`t exist.",
			"server": true,
			"params": {}
		},
		"extends": "CEntityInstance",
		"variable": ""
	},
	"CBaseFlex": {
		"description": "extends CBaseAnimating",
		"GetCurrentScene": {
			"class": "CBaseFlex",
			"function": "GetCurrentScene",
			"return": "handle",
			"description": "Returns the instance of the oldest active scene entity (if any).",
			"server": true,
			"params": {}
		},
		"GetSceneByIndex": {
			"class": "CBaseFlex",
			"function": "GetSceneByIndex",
			"return": "handle",
			"description": "Returns the instance of the scene entity at the specified index.",
			"server": true,
			"params": {
				"index": {
					"type": "int",
					"params_name": "index",
					"description": "No Description Set"
				}
			}
		},
		"ScriptPlayScene": {
			"class": "CBaseFlex",
			"function": "ScriptPlayScene",
			"return": "float",
			"description": "( vcd file, delay ) - play specified vcd file",
			"server": true,
			"params": {
				"pszScene": {
					"type": "string",
					"params_name": "pszScene",
					"description": "No Description Set"
				},
				"flDelay": {
					"type": "float",
					"params_name": "flDelay",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseAnimating",
		"variable": ""
	},
	"CBaseModelEntity": {
		"description": "extends CBaseEntity",
		"GetAttachmentAngles": {
			"class": "CBaseModelEntity",
			"function": "GetAttachmentAngles",
			"return": "Vector",
			"description": "Get the attachment id`s angles as a p,y,r vector.",
			"server": true,
			"params": {
				"iAttachment": {
					"type": "int",
					"params_name": "iAttachment",
					"description": "No Description Set"
				}
			}
		},
		"GetAttachmentForward": {
			"class": "CBaseModelEntity",
			"function": "GetAttachmentForward",
			"return": "Vector",
			"description": "Get the attachment id`s forward vector.",
			"server": true,
			"params": {
				"iAttachment": {
					"type": "int",
					"params_name": "iAttachment",
					"description": "No Description Set"
				}
			}
		},
		"GetAttachmentOrigin": {
			"class": "CBaseModelEntity",
			"function": "GetAttachmentOrigin",
			"return": "Vector",
			"description": "Get the attachment id`s origin vector.",
			"server": true,
			"params": {
				"iAttachment": {
					"type": "int",
					"params_name": "iAttachment",
					"description": "No Description Set"
				}
			}
		},
		"GetMaterialGroupHash": {
			"class": "CBaseModelEntity",
			"function": "GetMaterialGroupHash",
			"return": "unsigned",
			"description": "GetMaterialGroupHash(): Get the material group hash of this entity.",
			"server": true,
			"params": {}
		},
		"GetMaterialGroupMask": {
			"class": "CBaseModelEntity",
			"function": "GetMaterialGroupMask",
			"return": "uint64",
			"description": "GetMaterialGroupMask(): Get the mesh group mask of this entity.",
			"server": true,
			"params": {}
		},
		"GetModelScale": {
			"class": "CBaseModelEntity",
			"function": "GetModelScale",
			"return": "float",
			"description": "Get scale of entity`s model.",
			"server": true,
			"params": {}
		},
		"GetRenderAlpha": {
			"class": "CBaseModelEntity",
			"class_cl": "C_BaseModelEntity",
			"function": "GetRenderAlpha",
			"return": "int",
			"description": "GetRenderAlpha(): Get the alpha modulation of this entity.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetRenderColor": {
			"class": "CBaseModelEntity",
			"function": "GetRenderColor",
			"return": "Vector",
			"description": "GetRenderColor(): Get the render color of the entity.",
			"server": true,
			"params": {}
		},
		"ScriptLookupAttachment": {
			"class": "CBaseModelEntity",
			"function": "ScriptLookupAttachment",
			"return": "int",
			"description": "Get the named attachment id.",
			"server": true,
			"params": {
				"pAttachmentName": {
					"type": "string",
					"params_name": "pAttachmentName",
					"description": "No Description Set"
				}
			}
		},
		"SetBodygroup": {
			"class": "CBaseModelEntity",
			"function": "SetBodygroup",
			"return": "void",
			"description": "Sets a bodygroup.",
			"server": true,
			"params": {
				"iGroup": {
					"type": "int",
					"params_name": "iGroup",
					"description": "No Description Set"
				},
				"iValue": {
					"type": "int",
					"params_name": "iValue",
					"description": "No Description Set"
				}
			}
		},
		"SetBodygroupByName": {
			"class": "CBaseModelEntity",
			"function": "SetBodygroupByName",
			"return": "void",
			"description": "Sets a bodygroup by name.",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				},
				"iValue": {
					"type": "int",
					"params_name": "iValue",
					"description": "No Description Set"
				}
			}
		},
		"SetLightGroup": {
			"class": "CBaseModelEntity",
			"function": "SetLightGroup",
			"return": "void",
			"description": "SetLightGroup( string ): Sets the light group of the entity.",
			"server": true,
			"params": {
				"pLightGroup": {
					"type": "string",
					"params_name": "pLightGroup",
					"description": "No Description Set"
				}
			}
		},
		"SetMaterialGroup": {
			"class": "CBaseModelEntity",
			"function": "SetMaterialGroup",
			"return": "void",
			"description": "SetMaterialGroup( string ): Set the material group of this entity.",
			"server": true,
			"params": {
				"pMaterialGroup": {
					"type": "string",
					"params_name": "pMaterialGroup",
					"description": "No Description Set"
				}
			}
		},
		"SetMaterialGroupHash": {
			"class": "CBaseModelEntity",
			"function": "SetMaterialGroupHash",
			"return": "void",
			"description": "SetMaterialGroupHash( uint32 ): Set the material group hash of this entity.",
			"server": true,
			"params": {
				"nHash": {
					"type": "unsigned",
					"params_name": "nHash",
					"description": "No Description Set"
				}
			}
		},
		"SetMaterialGroupMask": {
			"class": "CBaseModelEntity",
			"function": "SetMaterialGroupMask",
			"return": "void",
			"description": "SetMaterialGroupMask( uint64 ): Set the mesh group mask of this entity.",
			"server": true,
			"params": {
				"nMeshGroupMask": {
					"type": "uint64",
					"params_name": "nMeshGroupMask",
					"description": "No Description Set"
				}
			}
		},
		"SetModel": {
			"class": "CBaseModelEntity",
			"function": "SetModel",
			"return": "void",
			"server": true,
			"params": {
				"pModelName": {
					"type": "string",
					"params_name": "pModelName",
					"description": "No Description Set"
				}
			}
		},
		"SetModelScale": {
			"class": "CBaseModelEntity",
			"function": "SetModelScale",
			"return": "void",
			"description": "Set scale of entity`s model.",
			"server": true,
			"params": {
				"flScale": {
					"type": "float",
					"params_name": "flScale",
					"description": "No Description Set"
				}
			}
		},
		"SetRenderAlpha": {
			"class": "CBaseModelEntity",
			"function": "SetRenderAlpha",
			"return": "void",
			"description": "SetRenderAlpha( int ): Set the alpha modulation of this entity.",
			"server": true,
			"params": {
				"nAlpha": {
					"type": "int",
					"params_name": "nAlpha",
					"description": "No Description Set"
				}
			}
		},
		"SetRenderColor": {
			"class": "CBaseModelEntity",
			"function": "SetRenderColor",
			"return": "void",
			"description": "SetRenderColor( r, g, b ): Sets the render color of the entity.",
			"server": true,
			"params": {
				"r": {
					"type": "int",
					"params_name": "r",
					"description": "No Description Set"
				},
				"g": {
					"type": "int",
					"params_name": "g",
					"description": "No Description Set"
				},
				"b": {
					"type": "int",
					"params_name": "b",
					"description": "No Description Set"
				}
			}
		},
		"SetRenderMode": {
			"class": "CBaseModelEntity",
			"function": "SetRenderMode",
			"return": "void",
			"description": "SetRenderMode( int ): Sets the render mode of the entity.",
			"server": true,
			"params": {
				"nMode": {
					"type": "int",
					"params_name": "nMode",
					"description": "No Description Set"
				}
			}
		},
		"SetSingleMeshGroup": {
			"class": "CBaseModelEntity",
			"function": "SetSingleMeshGroup",
			"return": "void",
			"description": "SetSingleMeshGroup( string ): Set a single mesh group for this entity.",
			"server": true,
			"params": {
				"pMeshGroupName": {
					"type": "string",
					"params_name": "pMeshGroupName",
					"description": "No Description Set"
				}
			}
		},
		"SetSize": {
			"class": "CBaseModelEntity",
			"function": "SetSize",
			"return": "void",
			"server": true,
			"params": {
				"mins": {
					"type": "Vector",
					"params_name": "mins",
					"description": "No Description Set"
				},
				"maxs": {
					"type": "Vector",
					"params_name": "maxs",
					"description": "No Description Set"
				}
			}
		},
		"SetSkin": {
			"class": "CBaseModelEntity",
			"function": "SetSkin",
			"return": "void",
			"description": "Set skin (int).",
			"server": true,
			"params": {
				"iSkin": {
					"type": "int",
					"params_name": "iSkin",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CBasePlayer": {
		"description": "extends CBaseCombatCharacter",
		"GetEquippedWeapons": {
			"class": "CBasePlayer",
			"function": "GetEquippedWeapons",
			"return": "table",
			"description": "GetEquippedWeapons() : Returns an array of all the equipped weapons",
			"server": true,
			"params": {}
		},
		"GetUserID": {
			"class": "CBasePlayer",
			"function": "GetUserID",
			"return": "int",
			"description": "Returns the player`s user id.",
			"server": true,
			"params": {}
		},
		"GetWeaponCount": {
			"class": "CBasePlayer",
			"function": "GetWeaponCount",
			"return": "int",
			"description": "GetWeaponCount() : Gets the number of weapons currently equipped",
			"server": true,
			"params": {}
		},
		"IsNoclipping": {
			"class": "CBasePlayer",
			"function": "IsNoclipping",
			"return": "bool",
			"description": "Returns true if the player is in noclip mode.",
			"server": true,
			"params": {}
		},
		"extends": "CBaseCombatCharacter",
		"variable": ""
	},
	"CBaseTrigger": {
		"description": "extends CBaseEntity",
		"Disable": {
			"class": "CBaseTrigger",
			"function": "Disable",
			"return": "void",
			"description": "Disable`s the trigger",
			"server": true,
			"params": {}
		},
		"Enable": {
			"class": "CBaseTrigger",
			"function": "Enable",
			"return": "void",
			"description": "Enable the trigger",
			"server": true,
			"params": {}
		},
		"IsTouching": {
			"class": "CBaseTrigger",
			"function": "IsTouching",
			"return": "bool",
			"description": "Checks whether the passed entity is touching the trigger.",
			"server": true,
			"params": {
				"hEnt": {
					"type": "handle",
					"params_name": "hEnt",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CBodyComponent": {
		"description": "No Description Set",
		"AddImpulseAtPosition": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "AddImpulseAtPosition",
			"return": "void",
			"description": "Apply an impulse at a worldspace position to the physics",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"AddVelocity": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "AddVelocity",
			"return": "void",
			"description": "Add linear and angular velocity to the physics object",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"DetachFromParent": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "DetachFromParent",
			"return": "void",
			"description": "Detach from its parent",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetSequence": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "GetSequence",
			"return": "unknown",
			"description": "Returns the active sequence",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsAttachedToParent": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "IsAttachedToParent",
			"return": "bool",
			"description": "Is attached to parent",
			"server": true,
			"client": true,
			"params": {}
		},
		"LookupSequence": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "LookupSequence",
			"return": "unknown",
			"description": "Returns a sequence id given a name",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SequenceDuration": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "SequenceDuration",
			"return": "float",
			"description": "Returns the duration in seconds of the specified sequence",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SetAngularVelocity": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "SetAngularVelocity",
			"return": "void",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				}
			}
		},
		"SetAnimation": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "SetAnimation",
			"return": "void",
			"description": "Pass string for the animation to play on this model",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SetMaterialGroup": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "SetMaterialGroup",
			"return": "void",
			"server": true,
			"client": true,
			"params": {
				"utlstringtoken_1": {
					"type": "utlstringtoken",
					"params_name": "utlstringtoken_1",
					"description": "No Description Set"
				}
			}
		},
		"SetVelocity": {
			"class": "CBodyComponent",
			"class_cl": "CBodyComponent",
			"function": "SetVelocity",
			"return": "void",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CCustomGameEventManager": {
		"description": "全局访问变量：CustomGameEventManager",
		"RegisterListener": {
			"class": "CCustomGameEventManager",
			"function": "RegisterListener",
			"return": "int",
			"description": "( string EventName, func CallbackFunction ) - Register a callback to be called when a particular custom event arrives. Returns a listener ID that can be used to unregister later.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"Send_ServerToAllClients": {
			"class": "CCustomGameEventManager",
			"function": "Send_ServerToAllClients",
			"return": "void",
			"description": "( string EventName, table EventData )",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"Send_ServerToPlayer": {
			"class": "CCustomGameEventManager",
			"function": "Send_ServerToPlayer",
			"return": "void",
			"description": "( Entity Player, string EventName, table EventData )",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"Send_ServerToTeam": {
			"class": "CCustomGameEventManager",
			"function": "Send_ServerToTeam",
			"return": "void",
			"description": "( int TeamNumber, string EventName, table EventData )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"UnregisterListener": {
			"class": "CCustomGameEventManager",
			"function": "UnregisterListener",
			"return": "void",
			"description": "( int ListnerID ) - Unregister a specific listener",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": "CustomGameEventManager"
	},
	"CCustomNetTableManager": {
		"description": "全局访问变量：CustomNetTables",
		"GetTableValue": {
			"class": "CCustomNetTableManager",
			"class_cl": "CCustomNetTableManager",
			"function": "GetTableValue",
			"return": "table",
			"description": "( string TableName, string KeyName )",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"SetTableValue": {
			"class": "CCustomNetTableManager",
			"function": "SetTableValue",
			"return": "bool",
			"description": "( string TableName, string KeyName, script_table Value )",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": "CustomNetTables"
	},
	"CDOTABaseAbility": {
		"description": "extends CBaseEntity",
		"UseResources": {
			"class": "CDOTABaseAbility",
			"function": "UseResources",
			"return": "void",
			"description": "调用该技能的各种效果，包括魔法，金钱，冷却时间。",
			"server": true,
			"example": "undefined",
			"params": {
				"bMana": {
					"type": "bool",
					"params_name": "bMana",
					"description": "是否消耗魔法"
				},
				"bGold": {
					"type": "bool",
					"params_name": "bGold",
					"description": "是否消耗金钱"
				},
				"bCooldown": {
					"type": "bool",
					"params_name": "bCooldown",
					"description": "是否使用冷却"
				}
			}
		},
		"GetSpecialValueFor": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetSpecialValueFor",
			"return": "table",
			"description": "从该技能的当前等级的特殊值获取值。",
			"server": true,
			"client": true,
			"example": "function phantom_assassin_blur_imba:OnSpellStart()\n\tlocal hCaster = self:GetCaster()\n\tlocal duration = self:GetSpecialValueFor(\"duration\")\nend",
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "特殊值名字"
				}
			}
		},
		"GetIntrinsicModifierName": {
			"class": "CDOTABaseAbility",
			"function": "GetIntrinsicModifierName",
			"return": "string",
			"description": "返回此技能被动给予的修饰器的名称",
			"server": true,
			"example": "function phantom_assassin_blur_imba:GetIntrinsicModifierName()\n\treturn \"modifier_phantom_assassin_blur_imba\"\nend",
			"params": {}
		},
		"CanAbilityBeUpgraded": {
			"class": "CDOTABaseAbility",
			"function": "CanAbilityBeUpgraded",
			"return": "unknown",
			"server": true,
			"params": {}
		},
		"CastAbility": {
			"class": "CDOTABaseAbility",
			"function": "CastAbility",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"ContinueCasting": {
			"class": "CDOTABaseAbility",
			"function": "ContinueCasting",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"CreateVisibilityNode": {
			"class": "CDOTABaseAbility",
			"function": "CreateVisibilityNode",
			"return": "void",
			"server": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				},
				"fRadius": {
					"type": "float",
					"params_name": "fRadius",
					"description": "No Description Set"
				},
				"fDuration": {
					"type": "float",
					"params_name": "fDuration",
					"description": "No Description Set"
				}
			}
		},
		"DecrementModifierRefCount": {
			"class": "CDOTABaseAbility",
			"function": "DecrementModifierRefCount",
			"return": "void",
			"server": true,
			"params": {}
		},
		"EndChannel": {
			"class": "CDOTABaseAbility",
			"function": "EndChannel",
			"return": "void",
			"server": true,
			"params": {
				"bInterrupted": {
					"type": "bool",
					"params_name": "bInterrupted",
					"description": "No Description Set"
				}
			}
		},
		"EndCooldown": {
			"class": "CDOTABaseAbility",
			"function": "EndCooldown",
			"return": "void",
			"description": "Clear the cooldown remaining on this ability.",
			"server": true,
			"params": {}
		},
		"GetAOERadius": {
			"class": "CDOTABaseAbility",
			"function": "GetAOERadius",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAbilityDamage": {
			"class": "CDOTABaseAbility",
			"function": "GetAbilityDamage",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAbilityDamageType": {
			"class": "CDOTABaseAbility",
			"function": "GetAbilityDamageType",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAbilityIndex": {
			"class": "CDOTABaseAbility",
			"function": "GetAbilityIndex",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAbilityKeyValues": {
			"class": "CDOTABaseAbility",
			"function": "GetAbilityKeyValues",
			"return": "table",
			"description": "Gets the key values definition for this ability.",
			"server": true,
			"params": {}
		},
		"GetAbilityName": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetAbilityName",
			"return": "string",
			"description": "Returns the name of this ability.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAbilityTargetFlags": {
			"class": "CDOTABaseAbility",
			"function": "GetAbilityTargetFlags",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAbilityTargetTeam": {
			"class": "CDOTABaseAbility",
			"function": "GetAbilityTargetTeam",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAbilityTargetType": {
			"class": "CDOTABaseAbility",
			"function": "GetAbilityTargetType",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAbilityType": {
			"class": "CDOTABaseAbility",
			"function": "GetAbilityType",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAnimationIgnoresModelScale": {
			"class": "CDOTABaseAbility",
			"function": "GetAnimationIgnoresModelScale",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"GetAssociatedPrimaryAbilities": {
			"class": "CDOTABaseAbility",
			"function": "GetAssociatedPrimaryAbilities",
			"return": "string",
			"server": true,
			"params": {}
		},
		"GetAssociatedSecondaryAbilities": {
			"class": "CDOTABaseAbility",
			"function": "GetAssociatedSecondaryAbilities",
			"return": "string",
			"server": true,
			"params": {}
		},
		"GetAutoCastState": {
			"class": "CDOTABaseAbility",
			"function": "GetAutoCastState",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"GetBackswingTime": {
			"class": "CDOTABaseAbility",
			"function": "GetBackswingTime",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetBehavior": {
			"class": "CDOTABaseAbility",
			"function": "GetBehavior",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetBehaviorInt": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetBehaviorInt",
			"return": "int",
			"description": "Get ability behavior flags as an int for compatability.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCastPoint": {
			"class": "CDOTABaseAbility",
			"function": "GetCastPoint",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetCastRange": {
			"class": "CDOTABaseAbility",
			"function": "GetCastRange",
			"return": "int",
			"description": "Gets the cast range of the ability.",
			"server": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				},
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"GetCaster": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetCaster",
			"return": "handle",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetChannelStartTime": {
			"class": "CDOTABaseAbility",
			"function": "GetChannelStartTime",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetChannelTime": {
			"class": "CDOTABaseAbility",
			"function": "GetChannelTime",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetChannelledManaCostPerSecond": {
			"class": "CDOTABaseAbility",
			"function": "GetChannelledManaCostPerSecond",
			"return": "int",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetCloneSource": {
			"class": "CDOTABaseAbility",
			"function": "GetCloneSource",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"GetConceptRecipientType": {
			"class": "CDOTABaseAbility",
			"function": "GetConceptRecipientType",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetCooldown": {
			"class": "CDOTABaseAbility",
			"function": "GetCooldown",
			"return": "float",
			"description": "Get the cooldown duration for this ability at a given level, not the amount of cooldown actually left.",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetCooldownTime": {
			"class": "CDOTABaseAbility",
			"function": "GetCooldownTime",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetCooldownTimeRemaining": {
			"class": "CDOTABaseAbility",
			"function": "GetCooldownTimeRemaining",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetCurrentAbilityCharges": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetCurrentAbilityCharges",
			"return": "int",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCursorPosition": {
			"class": "CDOTABaseAbility",
			"function": "GetCursorPosition",
			"return": "Vector",
			"server": true,
			"params": {}
		},
		"GetCursorTarget": {
			"class": "CDOTABaseAbility",
			"function": "GetCursorTarget",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"GetCursorTargetingNothing": {
			"class": "CDOTABaseAbility",
			"function": "GetCursorTargetingNothing",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"GetDuration": {
			"class": "CDOTABaseAbility",
			"function": "GetDuration",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetEffectiveCooldown": {
			"class": "CDOTABaseAbility",
			"function": "GetEffectiveCooldown",
			"return": "float",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldCost": {
			"class": "CDOTABaseAbility",
			"function": "GetGoldCost",
			"return": "int",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldCostForUpgrade": {
			"class": "CDOTABaseAbility",
			"function": "GetGoldCostForUpgrade",
			"return": "int",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetHeroLevelRequiredToUpgrade": {
			"class": "CDOTABaseAbility",
			"function": "GetHeroLevelRequiredToUpgrade",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetLevel": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetLevel",
			"return": "int",
			"description": "Get the current level of the ability.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetLevelSpecialValueFor": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetLevelSpecialValueFor",
			"return": "table",
			"server": true,
			"client": true,
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "No Description Set"
				},
				"nLevel": {
					"type": "int",
					"params_name": "nLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetLevelSpecialValueNoOverride": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetLevelSpecialValueNoOverride",
			"return": "table",
			"server": true,
			"client": true,
			"params": {
				"szName": {
					"type": "string",
					"params_name": "szName",
					"description": "No Description Set"
				},
				"nLevel": {
					"type": "int",
					"params_name": "nLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetManaCost": {
			"class": "CDOTABaseAbility",
			"function": "GetManaCost",
			"return": "int",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetMaxAbilityCharges": {
			"class": "CDOTABaseAbility",
			"function": "GetMaxAbilityCharges",
			"return": "int",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetMaxLevel": {
			"class": "CDOTABaseAbility",
			"function": "GetMaxLevel",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetModifierValue": {
			"class": "CDOTABaseAbility",
			"function": "GetModifierValue",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetModifierValueBonus": {
			"class": "CDOTABaseAbility",
			"function": "GetModifierValueBonus",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetPlaybackRateOverride": {
			"class": "CDOTABaseAbility",
			"function": "GetPlaybackRateOverride",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetSharedCooldownName": {
			"class": "CDOTABaseAbility",
			"function": "GetSharedCooldownName",
			"return": "string",
			"server": true,
			"params": {}
		},
		"GetStolenActivityModifier": {
			"class": "CDOTABaseAbility",
			"function": "GetStolenActivityModifier",
			"return": "string",
			"server": true,
			"params": {}
		},
		"GetToggleState": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "GetToggleState",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetUpgradeRecommended": {
			"class": "CDOTABaseAbility",
			"function": "GetUpgradeRecommended",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"HeroXPChange": {
			"class": "CDOTABaseAbility",
			"function": "HeroXPChange",
			"return": "bool",
			"server": true,
			"params": {
				"flXP": {
					"type": "float",
					"params_name": "flXP",
					"description": "No Description Set"
				}
			}
		},
		"IncrementModifierRefCount": {
			"class": "CDOTABaseAbility",
			"function": "IncrementModifierRefCount",
			"return": "void",
			"server": true,
			"params": {}
		},
		"IsActivated": {
			"class": "CDOTABaseAbility",
			"function": "IsActivated",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsAttributeBonus": {
			"class": "CDOTABaseAbility",
			"function": "IsAttributeBonus",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsChanneling": {
			"class": "CDOTABaseAbility",
			"function": "IsChanneling",
			"return": "bool",
			"description": "Returns whether the ability is currently channeling.",
			"server": true,
			"params": {}
		},
		"IsCooldownReady": {
			"class": "CDOTABaseAbility",
			"function": "IsCooldownReady",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsCosmetic": {
			"class": "CDOTABaseAbility",
			"function": "IsCosmetic",
			"return": "bool",
			"server": true,
			"params": {
				"hEntity": {
					"type": "handle",
					"params_name": "hEntity",
					"description": "No Description Set"
				}
			}
		},
		"IsFullyCastable": {
			"class": "CDOTABaseAbility",
			"function": "IsFullyCastable",
			"return": "bool",
			"description": "Returns whether the ability can be cast.",
			"server": true,
			"params": {}
		},
		"IsHidden": {
			"class": "CDOTABaseAbility",
			"function": "IsHidden",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsHiddenAsSecondaryAbility": {
			"class": "CDOTABaseAbility",
			"function": "IsHiddenAsSecondaryAbility",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsHiddenWhenStolen": {
			"class": "CDOTABaseAbility",
			"function": "IsHiddenWhenStolen",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsInAbilityPhase": {
			"class": "CDOTABaseAbility",
			"function": "IsInAbilityPhase",
			"return": "bool",
			"description": "Returns whether the ability is currently casting.",
			"server": true,
			"params": {}
		},
		"IsItem": {
			"class": "CDOTABaseAbility",
			"class_cl": "C_DOTABaseAbility",
			"function": "IsItem",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsOwnersGoldEnough": {
			"class": "CDOTABaseAbility",
			"function": "IsOwnersGoldEnough",
			"return": "bool",
			"server": true,
			"params": {
				"nIssuerPlayerID": {
					"type": "int",
					"params_name": "nIssuerPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IsOwnersGoldEnoughForUpgrade": {
			"class": "CDOTABaseAbility",
			"function": "IsOwnersGoldEnoughForUpgrade",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsOwnersManaEnough": {
			"class": "CDOTABaseAbility",
			"function": "IsOwnersManaEnough",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsPassive": {
			"class": "CDOTABaseAbility",
			"function": "IsPassive",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsRefreshable": {
			"class": "CDOTABaseAbility",
			"function": "IsRefreshable",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsSharedWithTeammates": {
			"class": "CDOTABaseAbility",
			"function": "IsSharedWithTeammates",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsStealable": {
			"class": "CDOTABaseAbility",
			"function": "IsStealable",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsStolen": {
			"class": "CDOTABaseAbility",
			"function": "IsStolen",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsToggle": {
			"class": "CDOTABaseAbility",
			"function": "IsToggle",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsTrained": {
			"class": "CDOTABaseAbility",
			"function": "IsTrained",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"MarkAbilityButtonDirty": {
			"class": "CDOTABaseAbility",
			"function": "MarkAbilityButtonDirty",
			"return": "void",
			"description": "Mark the ability button for this ability as needing a refresh.",
			"server": true,
			"params": {}
		},
		"NumModifiersUsingAbility": {
			"class": "CDOTABaseAbility",
			"function": "NumModifiersUsingAbility",
			"return": "int",
			"server": true,
			"params": {}
		},
		"OnAbilityPhaseInterrupted": {
			"class": "CDOTABaseAbility",
			"function": "OnAbilityPhaseInterrupted",
			"return": "void",
			"server": true,
			"params": {}
		},
		"OnAbilityPhaseStart": {
			"class": "CDOTABaseAbility",
			"function": "OnAbilityPhaseStart",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"OnAbilityPinged": {
			"class": "CDOTABaseAbility",
			"function": "OnAbilityPinged",
			"return": "void",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"bCtrlHeld": {
					"type": "bool",
					"params_name": "bCtrlHeld",
					"description": "No Description Set"
				}
			}
		},
		"OnChannelFinish": {
			"class": "CDOTABaseAbility",
			"function": "OnChannelFinish",
			"return": "void",
			"server": true,
			"params": {
				"bInterrupted": {
					"type": "bool",
					"params_name": "bInterrupted",
					"description": "No Description Set"
				}
			}
		},
		"OnChannelThink": {
			"class": "CDOTABaseAbility",
			"function": "OnChannelThink",
			"return": "void",
			"server": true,
			"params": {
				"flInterval": {
					"type": "float",
					"params_name": "flInterval",
					"description": "No Description Set"
				}
			}
		},
		"OnHeroCalculateStatBonus": {
			"class": "CDOTABaseAbility",
			"function": "OnHeroCalculateStatBonus",
			"return": "void",
			"server": true,
			"params": {}
		},
		"OnHeroLevelUp": {
			"class": "CDOTABaseAbility",
			"function": "OnHeroLevelUp",
			"return": "void",
			"server": true,
			"params": {}
		},
		"OnOwnerDied": {
			"class": "CDOTABaseAbility",
			"function": "OnOwnerDied",
			"return": "void",
			"server": true,
			"params": {}
		},
		"OnOwnerSpawned": {
			"class": "CDOTABaseAbility",
			"function": "OnOwnerSpawned",
			"return": "void",
			"server": true,
			"params": {}
		},
		"OnSpellStart": {
			"class": "CDOTABaseAbility",
			"function": "OnSpellStart",
			"return": "void",
			"server": true,
			"params": {}
		},
		"OnToggle": {
			"class": "CDOTABaseAbility",
			"function": "OnToggle",
			"return": "void",
			"server": true,
			"params": {}
		},
		"OnUpgrade": {
			"class": "CDOTABaseAbility",
			"function": "OnUpgrade",
			"return": "void",
			"server": true,
			"params": {}
		},
		"PayGoldCost": {
			"class": "CDOTABaseAbility",
			"function": "PayGoldCost",
			"return": "void",
			"server": true,
			"params": {}
		},
		"PayGoldCostForUpgrade": {
			"class": "CDOTABaseAbility",
			"function": "PayGoldCostForUpgrade",
			"return": "void",
			"server": true,
			"params": {}
		},
		"PayManaCost": {
			"class": "CDOTABaseAbility",
			"function": "PayManaCost",
			"return": "void",
			"server": true,
			"params": {}
		},
		"PlaysDefaultAnimWhenStolen": {
			"class": "CDOTABaseAbility",
			"function": "PlaysDefaultAnimWhenStolen",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"ProcsMagicStick": {
			"class": "CDOTABaseAbility",
			"function": "ProcsMagicStick",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"RefCountsModifiers": {
			"class": "CDOTABaseAbility",
			"function": "RefCountsModifiers",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"RefreshCharges": {
			"class": "CDOTABaseAbility",
			"function": "RefreshCharges",
			"return": "void",
			"server": true,
			"params": {}
		},
		"RefreshIntrinsicModifier": {
			"class": "CDOTABaseAbility",
			"function": "RefreshIntrinsicModifier",
			"return": "unknown",
			"server": true,
			"params": {}
		},
		"RefundManaCost": {
			"class": "CDOTABaseAbility",
			"function": "RefundManaCost",
			"return": "void",
			"server": true,
			"params": {}
		},
		"RequiresFacing": {
			"class": "CDOTABaseAbility",
			"function": "RequiresFacing",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"ResetToggleOnRespawn": {
			"class": "CDOTABaseAbility",
			"function": "ResetToggleOnRespawn",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"SetAbilityIndex": {
			"class": "CDOTABaseAbility",
			"function": "SetAbilityIndex",
			"return": "void",
			"server": true,
			"params": {
				"iIndex": {
					"type": "int",
					"params_name": "iIndex",
					"description": "No Description Set"
				}
			}
		},
		"SetActivated": {
			"class": "CDOTABaseAbility",
			"function": "SetActivated",
			"return": "void",
			"server": true,
			"params": {
				"bActivated": {
					"type": "bool",
					"params_name": "bActivated",
					"description": "No Description Set"
				}
			}
		},
		"SetChanneling": {
			"class": "CDOTABaseAbility",
			"function": "SetChanneling",
			"return": "void",
			"server": true,
			"params": {
				"bChanneling": {
					"type": "bool",
					"params_name": "bChanneling",
					"description": "No Description Set"
				}
			}
		},
		"SetCurrentAbilityCharges": {
			"class": "CDOTABaseAbility",
			"function": "SetCurrentAbilityCharges",
			"return": "void",
			"server": true,
			"params": {
				"nCharges": {
					"type": "int",
					"params_name": "nCharges",
					"description": "No Description Set"
				}
			}
		},
		"SetFrozenCooldown": {
			"class": "CDOTABaseAbility",
			"function": "SetFrozenCooldown",
			"return": "void",
			"server": true,
			"params": {
				"bFrozenCooldown": {
					"type": "bool",
					"params_name": "bFrozenCooldown",
					"description": "No Description Set"
				}
			}
		},
		"SetHidden": {
			"class": "CDOTABaseAbility",
			"function": "SetHidden",
			"return": "void",
			"server": true,
			"params": {
				"bHidden": {
					"type": "bool",
					"params_name": "bHidden",
					"description": "No Description Set"
				}
			}
		},
		"SetInAbilityPhase": {
			"class": "CDOTABaseAbility",
			"function": "SetInAbilityPhase",
			"return": "void",
			"server": true,
			"params": {
				"bInAbilityPhase": {
					"type": "bool",
					"params_name": "bInAbilityPhase",
					"description": "No Description Set"
				}
			}
		},
		"SetLevel": {
			"class": "CDOTABaseAbility",
			"function": "SetLevel",
			"return": "void",
			"description": "Sets the level of this ability.",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"SetOverrideCastPoint": {
			"class": "CDOTABaseAbility",
			"function": "SetOverrideCastPoint",
			"return": "void",
			"server": true,
			"params": {
				"flCastPoint": {
					"type": "float",
					"params_name": "flCastPoint",
					"description": "No Description Set"
				}
			}
		},
		"SetRefCountsModifiers": {
			"class": "CDOTABaseAbility",
			"function": "SetRefCountsModifiers",
			"return": "void",
			"server": true,
			"params": {
				"bRefCounts": {
					"type": "bool",
					"params_name": "bRefCounts",
					"description": "No Description Set"
				}
			}
		},
		"SetStealable": {
			"class": "CDOTABaseAbility",
			"function": "SetStealable",
			"return": "void",
			"server": true,
			"params": {
				"bStealable": {
					"type": "bool",
					"params_name": "bStealable",
					"description": "No Description Set"
				}
			}
		},
		"SetStolen": {
			"class": "CDOTABaseAbility",
			"function": "SetStolen",
			"return": "void",
			"server": true,
			"params": {
				"bStolen": {
					"type": "bool",
					"params_name": "bStolen",
					"description": "No Description Set"
				}
			}
		},
		"SetUpgradeRecommended": {
			"class": "CDOTABaseAbility",
			"function": "SetUpgradeRecommended",
			"return": "void",
			"server": true,
			"params": {
				"bUpgradeRecommended": {
					"type": "bool",
					"params_name": "bUpgradeRecommended",
					"description": "No Description Set"
				}
			}
		},
		"ShouldUseResources": {
			"class": "CDOTABaseAbility",
			"function": "ShouldUseResources",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"SpeakAbilityConcept": {
			"class": "CDOTABaseAbility",
			"function": "SpeakAbilityConcept",
			"return": "void",
			"server": true,
			"params": {
				"iConcept": {
					"type": "int",
					"params_name": "iConcept",
					"description": "No Description Set"
				}
			}
		},
		"SpeakTrigger": {
			"class": "CDOTABaseAbility",
			"function": "SpeakTrigger",
			"return": "unknown",
			"server": true,
			"params": {}
		},
		"StartCooldown": {
			"class": "CDOTABaseAbility",
			"function": "StartCooldown",
			"return": "void",
			"server": true,
			"params": {
				"flCooldown": {
					"type": "float",
					"params_name": "flCooldown",
					"description": "No Description Set"
				}
			}
		},
		"ToggleAbility": {
			"class": "CDOTABaseAbility",
			"function": "ToggleAbility",
			"return": "void",
			"server": true,
			"params": {}
		},
		"ToggleAutoCast": {
			"class": "CDOTABaseAbility",
			"function": "ToggleAutoCast",
			"return": "void",
			"server": true,
			"params": {}
		},
		"UpgradeAbility": {
			"class": "CDOTABaseAbility",
			"function": "UpgradeAbility",
			"return": "void",
			"description": "升级该技能，一般不用CDOTA_BaseNPC_Hero的那个UpgradeAbility，那个API会导致被动modifier不刷新。",
			"server": true,
			"params": {
				"bSupressSpeech": {
					"type": "bool",
					"params_name": "bSupressSpeech",
					"description": "是否播放语音"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CDOTABaseGameMode": {
		"description": "extends CBaseEntity",
		"AllocateFowBlockerRegion": {
			"class": "CDOTABaseGameMode",
			"function": "AllocateFowBlockerRegion",
			"return": "handle",
			"description": "一个锁定战争迷雾的实体。返回类为CFoWBlockerRegion",
			"server": true,
			"example": "-- 创建迷雾\nfowregion = GameRules:GetGameModeEntity():AllocateFowBlockerRegion( -16384, -16384, 16384, 16384, 128 )\n-- 添加新区域\nfowregion:AddRectangularBlocker( 16384, 16384+200, true )\n-- 去掉迷雾范围\nfowregion:AddRectangularOutlineBlocker( -200, 200, false )",
			"params": {
				"flMinX": {
					"type": "float",
					"params_name": "flMinX",
					"description": "迷雾x最小值"
				},
				"flMinY": {
					"type": "float",
					"params_name": "flMinY",
					"description": "迷雾y最小值"
				},
				"flMaxX": {
					"type": "float",
					"params_name": "flMaxX",
					"description": "迷雾x最大值"
				},
				"flMaxY": {
					"type": "float",
					"params_name": "flMaxY",
					"description": "迷雾y最大值"
				},
				"flGridSize": {
					"type": "float",
					"params_name": "flGridSize",
					"description": "z轴高度"
				}
			}
		},
		"AddAbilityUpgradeToWhitelist": {
			"class": "CDOTABaseGameMode",
			"function": "AddAbilityUpgradeToWhitelist",
			"return": "void",
			"server": true,
			"params": {
				"pszAbilityName": {
					"type": "string",
					"params_name": "pszAbilityName",
					"description": "No Description Set"
				}
			}
		},
		"AddItemToCustomShop": {
			"class": "CDOTABaseGameMode",
			"function": "AddItemToCustomShop",
			"return": "void",
			"description": "( pszItem, pszShop, pszCategory ) Add an item to purchase at a custom shop.",
			"server": true,
			"params": {
				"pszItemName": {
					"type": "string",
					"params_name": "pszItemName",
					"description": "No Description Set"
				},
				"pszShopName": {
					"type": "string",
					"params_name": "pszShopName",
					"description": "No Description Set"
				},
				"pszCategory": {
					"type": "string",
					"params_name": "pszCategory",
					"description": "No Description Set"
				}
			}
		},
		"AddRealTimeCombatAnalyzerQuery": {
			"class": "CDOTABaseGameMode",
			"function": "AddRealTimeCombatAnalyzerQuery",
			"return": "int",
			"description": "Begin tracking a sequence of events using the real time combat analyzer.",
			"server": true,
			"params": {
				"hQueryTable": {
					"type": "handle",
					"params_name": "hQueryTable",
					"description": "No Description Set"
				},
				"hPlayer": {
					"type": "handle",
					"params_name": "hPlayer",
					"description": "No Description Set"
				},
				"pszQueryName": {
					"type": "string",
					"params_name": "pszQueryName",
					"description": "No Description Set"
				}
			}
		},
		"AreWeatherEffectsDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "AreWeatherEffectsDisabled",
			"return": "bool",
			"description": "Get if weather effects are disabled on the client.",
			"server": true,
			"params": {}
		},
		"ClearBountyRunePickupFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearBountyRunePickupFilter",
			"return": "void",
			"description": "Clear the script filter that controls bounty rune pickup behavior.",
			"server": true,
			"params": {}
		},
		"ClearDamageFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearDamageFilter",
			"return": "void",
			"description": "Clear the script filter that controls how a unit takes damage.",
			"server": true,
			"params": {}
		},
		"ClearExecuteOrderFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearExecuteOrderFilter",
			"return": "void",
			"description": "Clear the script filter that controls when a unit picks up an item.",
			"server": true,
			"params": {}
		},
		"ClearHealingFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearHealingFilter",
			"return": "void",
			"description": "Clear the script filter that controls how a unit heals.",
			"server": true,
			"params": {}
		},
		"ClearItemAddedToInventoryFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearItemAddedToInventoryFilter",
			"return": "void",
			"description": "Clear the script filter that controls the item added to inventory filter.",
			"server": true,
			"params": {}
		},
		"ClearModifierGainedFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearModifierGainedFilter",
			"return": "void",
			"description": "Clear the script filter that controls the modifier filter.",
			"server": true,
			"params": {}
		},
		"ClearModifyExperienceFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearModifyExperienceFilter",
			"return": "void",
			"description": "Clear the script filter that controls how hero experience is modified.",
			"server": true,
			"params": {}
		},
		"ClearModifyGoldFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearModifyGoldFilter",
			"return": "void",
			"description": "Clear the script filter that controls how hero gold is modified.",
			"server": true,
			"params": {}
		},
		"ClearRuneSpawnFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearRuneSpawnFilter",
			"return": "void",
			"description": "Clear the script filter that controls what rune spawns.",
			"server": true,
			"params": {}
		},
		"ClearTrackingProjectileFilter": {
			"class": "CDOTABaseGameMode",
			"function": "ClearTrackingProjectileFilter",
			"return": "void",
			"description": "Clear the script filter that controls when tracking projectiles are launched.",
			"server": true,
			"params": {}
		},
		"DisableClumpingBehaviorByDefault": {
			"class": "CDOTABaseGameMode",
			"function": "DisableClumpingBehaviorByDefault",
			"return": "void",
			"description": "Disable npc_dota_creature clumping behavior by default.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"DisableHudFlip": {
			"class": "CDOTABaseGameMode",
			"function": "DisableHudFlip",
			"return": "void",
			"description": "Use to disable hud flip for this mod",
			"server": true,
			"params": {
				"bDisable": {
					"type": "bool",
					"params_name": "bDisable",
					"description": "No Description Set"
				}
			}
		},
		"EnableAbilityUpgradeWhitelist": {
			"class": "CDOTABaseGameMode",
			"function": "EnableAbilityUpgradeWhitelist",
			"return": "void",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"GetAlwaysShowPlayerInventory": {
			"class": "CDOTABaseGameMode",
			"function": "GetAlwaysShowPlayerInventory",
			"return": "bool",
			"description": "Show the player hero`s inventory in the HUD, regardless of what unit is selected.",
			"server": true,
			"params": {}
		},
		"GetAlwaysShowPlayerNames": {
			"class": "CDOTABaseGameMode",
			"function": "GetAlwaysShowPlayerNames",
			"return": "bool",
			"description": "Get whether player names are always shown, regardless of client setting.",
			"server": true,
			"params": {}
		},
		"GetAnnouncerDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetAnnouncerDisabled",
			"return": "bool",
			"description": "Are in-game announcers disabled?",
			"server": true,
			"params": {}
		},
		"GetCameraDistanceOverride": {
			"class": "CDOTABaseGameMode",
			"function": "GetCameraDistanceOverride",
			"return": "float",
			"description": "Set a different camera distance; dota default is 1134.",
			"server": true,
			"params": {}
		},
		"GetCustomAttributeDerivedStatValue": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomAttributeDerivedStatValue",
			"return": "float",
			"description": "Get current derived stat value constant.",
			"server": true,
			"params": {
				"nDerivedStatType": {
					"type": "int",
					"params_name": "nDerivedStatType",
					"description": "No Description Set"
				},
				"hHero": {
					"type": "handle",
					"params_name": "hHero",
					"description": "No Description Set"
				}
			}
		},
		"GetCustomBackpackCooldownPercent": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomBackpackCooldownPercent",
			"return": "float",
			"description": "Get the current rate cooldown ticks down for items in the backpack.",
			"server": true,
			"params": {}
		},
		"GetCustomBackpackSwapCooldown": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomBackpackSwapCooldown",
			"return": "float",
			"description": "Get the current custom backpack swap cooldown.",
			"server": true,
			"params": {}
		},
		"GetCustomBuybackCooldownEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomBuybackCooldownEnabled",
			"return": "bool",
			"description": "Turns on capability to define custom buyback cooldowns.",
			"server": true,
			"params": {}
		},
		"GetCustomBuybackCostEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomBuybackCostEnabled",
			"return": "bool",
			"description": "Turns on capability to define custom buyback costs.",
			"server": true,
			"params": {}
		},
		"GetCustomDireScore": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomDireScore",
			"return": "int",
			"description": "Get the topbar score display value for dire.",
			"server": true,
			"params": {}
		},
		"GetCustomGlyphCooldown": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomGlyphCooldown",
			"return": "float",
			"description": "Get the current custom glyph cooldown.",
			"server": true,
			"params": {}
		},
		"GetCustomHeroMaxLevel": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomHeroMaxLevel",
			"return": "int",
			"description": "Allows definition of the max level heroes can achieve (default is 25).",
			"server": true,
			"params": {}
		},
		"GetCustomRadiantScore": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomRadiantScore",
			"return": "int",
			"description": "Get the topbar score display value for radiant.",
			"server": true,
			"params": {}
		},
		"GetCustomScanCooldown": {
			"class": "CDOTABaseGameMode",
			"function": "GetCustomScanCooldown",
			"return": "float",
			"description": "Get the current custom scan cooldown.",
			"server": true,
			"params": {}
		},
		"GetEventGameSeed": {
			"class": "CDOTABaseGameMode",
			"function": "GetEventGameSeed",
			"return": "int",
			"description": "Get the Game Seed passed from the GC.",
			"server": true,
			"params": {}
		},
		"GetEventWindowStartTime": {
			"class": "CDOTABaseGameMode",
			"function": "GetEventWindowStartTime",
			"return": "unsigned",
			"description": "Get the Event Window Start Time passed from the GC.",
			"server": true,
			"params": {}
		},
		"GetFixedRespawnTime": {
			"class": "CDOTABaseGameMode",
			"function": "GetFixedRespawnTime",
			"return": "float",
			"description": "Gets the fixed respawn time.",
			"server": true,
			"params": {}
		},
		"GetFogOfWarDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetFogOfWarDisabled",
			"return": "bool",
			"description": "Turn the fog of war on or off.",
			"server": true,
			"params": {}
		},
		"GetGoldSoundDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetGoldSoundDisabled",
			"return": "bool",
			"description": "Turn the sound when gold is acquired off/on.",
			"server": true,
			"params": {}
		},
		"GetHUDVisible": {
			"class": "CDOTABaseGameMode",
			"function": "GetHUDVisible",
			"return": "bool",
			"description": "Returns the HUD element visibility.",
			"server": true,
			"params": {
				"iElement": {
					"type": "int",
					"params_name": "iElement",
					"description": "No Description Set"
				}
			}
		},
		"GetMaximumAttackSpeed": {
			"class": "CDOTABaseGameMode",
			"function": "GetMaximumAttackSpeed",
			"return": "int",
			"description": "Get the maximum attack speed for units.",
			"server": true,
			"params": {}
		},
		"GetMinimumAttackSpeed": {
			"class": "CDOTABaseGameMode",
			"function": "GetMinimumAttackSpeed",
			"return": "int",
			"description": "Get the minimum attack speed for units.",
			"server": true,
			"params": {}
		},
		"GetRecommendedItemsDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetRecommendedItemsDisabled",
			"return": "bool",
			"description": "Turn the panel for showing recommended items at the shop off/on.",
			"server": true,
			"params": {}
		},
		"GetRespawnTimeScale": {
			"class": "CDOTABaseGameMode",
			"function": "GetRespawnTimeScale",
			"return": "float",
			"description": "Returns the scale applied to non-fixed respawn times.",
			"server": true,
			"params": {}
		},
		"GetStashPurchasingDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetStashPurchasingDisabled",
			"return": "bool",
			"description": "Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.",
			"server": true,
			"params": {}
		},
		"GetStickyItemDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetStickyItemDisabled",
			"return": "bool",
			"description": "Hide the sticky item in the quickbuy.",
			"server": true,
			"params": {}
		},
		"GetTopBarTeamValuesOverride": {
			"class": "CDOTABaseGameMode",
			"function": "GetTopBarTeamValuesOverride",
			"return": "bool",
			"description": "Override the values of the team values on the top game bar.",
			"server": true,
			"params": {}
		},
		"GetTopBarTeamValuesVisible": {
			"class": "CDOTABaseGameMode",
			"function": "GetTopBarTeamValuesVisible",
			"return": "bool",
			"description": "Turning on/off the team values on the top game bar.",
			"server": true,
			"params": {}
		},
		"GetTowerBackdoorProtectionEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "GetTowerBackdoorProtectionEnabled",
			"return": "bool",
			"description": "Gets whether tower backdoor protection is enabled or not.",
			"server": true,
			"params": {}
		},
		"GetUseCustomHeroLevels": {
			"class": "CDOTABaseGameMode",
			"function": "GetUseCustomHeroLevels",
			"return": "bool",
			"description": "Are custom-defined XP values for hero level ups in use?",
			"server": true,
			"params": {}
		},
		"IsAbilityUpgradeWhitelisted": {
			"class": "CDOTABaseGameMode",
			"function": "IsAbilityUpgradeWhitelisted",
			"return": "bool",
			"server": true,
			"params": {
				"pszAbilityName": {
					"type": "string",
					"params_name": "pszAbilityName",
					"description": "No Description Set"
				}
			}
		},
		"IsBuybackEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "IsBuybackEnabled",
			"return": "bool",
			"description": "Enables or disables buyback completely.",
			"server": true,
			"params": {}
		},
		"IsDaynightCycleDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "IsDaynightCycleDisabled",
			"return": "bool",
			"description": "Is the day/night cycle disabled?",
			"server": true,
			"params": {}
		},
		"ListenForQueryFailed": {
			"class": "CDOTABaseGameMode",
			"function": "ListenForQueryFailed",
			"return": "void",
			"description": "Set function and context for real time combat analyzer query failed.",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"ListenForQueryProgressChanged": {
			"class": "CDOTABaseGameMode",
			"function": "ListenForQueryProgressChanged",
			"return": "void",
			"description": "Set function and context for real time combat analyzer query progress changed.",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"ListenForQuerySucceeded": {
			"class": "CDOTABaseGameMode",
			"function": "ListenForQuerySucceeded",
			"return": "void",
			"description": "Set function and context for real time combat analyzer query succeeded.",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"RemoveAbilityUpgradeFromWhitelist": {
			"class": "CDOTABaseGameMode",
			"function": "RemoveAbilityUpgradeFromWhitelist",
			"return": "void",
			"server": true,
			"params": {
				"pszAbilityName": {
					"type": "string",
					"params_name": "pszAbilityName",
					"description": "No Description Set"
				}
			}
		},
		"RemoveItemFromCustomShop": {
			"class": "CDOTABaseGameMode",
			"function": "RemoveItemFromCustomShop",
			"return": "void",
			"description": "( pszItem, pszShop ) Remove an item to purchase at a custom shop.",
			"server": true,
			"params": {
				"pszItemName": {
					"type": "string",
					"params_name": "pszItemName",
					"description": "No Description Set"
				},
				"pszShopName": {
					"type": "string",
					"params_name": "pszShopName",
					"description": "No Description Set"
				}
			}
		},
		"RemoveRealTimeCombatAnalyzerQuery": {
			"class": "CDOTABaseGameMode",
			"function": "RemoveRealTimeCombatAnalyzerQuery",
			"return": "void",
			"description": "Stop tracking a combat analyzer query.",
			"server": true,
			"params": {
				"nQueryID": {
					"type": "int",
					"params_name": "nQueryID",
					"description": "No Description Set"
				}
			}
		},
		"SetAbilityTuningValueFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetAbilityTuningValueFilter",
			"return": "void",
			"description": "Set a filter function to control the tuning values that abilities use. (Modify the table and Return true to use new values, return false to use the old values)",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetAllowNeutralItemDrops": {
			"class": "CDOTABaseGameMode",
			"function": "SetAllowNeutralItemDrops",
			"return": "void",
			"description": "If set to true, neutral items will be dropped on killing neutral monsters.  Otherwise nothing will be dropped.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetAlwaysShowPlayerInventory": {
			"class": "CDOTABaseGameMode",
			"function": "SetAlwaysShowPlayerInventory",
			"return": "void",
			"description": "Show the player hero`s inventory in the HUD, regardless of what unit is selected.",
			"server": true,
			"params": {
				"bAlwaysShow": {
					"type": "bool",
					"params_name": "bAlwaysShow",
					"description": "No Description Set"
				}
			}
		},
		"SetAlwaysShowPlayerNames": {
			"class": "CDOTABaseGameMode",
			"function": "SetAlwaysShowPlayerNames",
			"return": "void",
			"description": "Set whether player names are always shown, regardless of client setting.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetAnnouncerDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetAnnouncerDisabled",
			"return": "void",
			"description": "Mutes the in-game announcer.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetBotThinkingEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetBotThinkingEnabled",
			"return": "void",
			"description": "Enables/Disables bots in custom games. Note: this will only work with default heroes in the dota map.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetBotsAlwaysPushWithHuman": {
			"class": "CDOTABaseGameMode",
			"function": "SetBotsAlwaysPushWithHuman",
			"return": "void",
			"description": "Set if the bots should try their best to push with a human player.",
			"server": true,
			"params": {
				"bAlwaysPush": {
					"type": "bool",
					"params_name": "bAlwaysPush",
					"description": "No Description Set"
				}
			}
		},
		"SetBotsInLateGame": {
			"class": "CDOTABaseGameMode",
			"function": "SetBotsInLateGame",
			"return": "void",
			"description": "Set if bots should enable their late game behavior.",
			"server": true,
			"params": {
				"bLateGame": {
					"type": "bool",
					"params_name": "bLateGame",
					"description": "No Description Set"
				}
			}
		},
		"SetBotsMaxPushTier": {
			"class": "CDOTABaseGameMode",
			"function": "SetBotsMaxPushTier",
			"return": "void",
			"description": "Set the max tier of tower that bots want to push. (-1 to disable)",
			"server": true,
			"params": {
				"nMaxTier": {
					"type": "int",
					"params_name": "nMaxTier",
					"description": "No Description Set"
				}
			}
		},
		"SetBountyRunePickupFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetBountyRunePickupFilter",
			"return": "void",
			"description": "Set a filter function to control the behavior when a bounty rune is picked up. (Modify the table and Return true to use new values, return false to cancel the event)",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetBountyRuneSpawnInterval": {
			"class": "CDOTABaseGameMode",
			"function": "SetBountyRuneSpawnInterval",
			"return": "void",
			"description": "Set bounty rune spawn rate",
			"server": true,
			"params": {
				"flInterval": {
					"type": "float",
					"params_name": "flInterval",
					"description": "No Description Set"
				}
			}
		},
		"SetBuybackEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetBuybackEnabled",
			"return": "void",
			"description": "Enables or disables buyback completely.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetCameraDistanceOverride": {
			"class": "CDOTABaseGameMode",
			"function": "SetCameraDistanceOverride",
			"return": "void",
			"description": "Set a different camera distance; dota default is 1134.",
			"server": true,
			"params": {
				"flCameraDistanceOverride": {
					"type": "float",
					"params_name": "flCameraDistanceOverride",
					"description": "No Description Set"
				}
			}
		},
		"SetCameraSmoothCountOverride": {
			"class": "CDOTABaseGameMode",
			"function": "SetCameraSmoothCountOverride",
			"return": "void",
			"description": "Set a different camera smooth count; dota default is 8.",
			"server": true,
			"params": {
				"nSmoothCount": {
					"type": "int",
					"params_name": "nSmoothCount",
					"description": "No Description Set"
				}
			}
		},
		"SetCameraZRange": {
			"class": "CDOTABaseGameMode",
			"function": "SetCameraZRange",
			"return": "void",
			"description": "Sets the camera Z range",
			"server": true,
			"params": {
				"flMinZ": {
					"type": "float",
					"params_name": "flMinZ",
					"description": "No Description Set"
				},
				"flMaxZ": {
					"type": "float",
					"params_name": "flMaxZ",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomAttributeDerivedStatValue": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomAttributeDerivedStatValue",
			"return": "void",
			"description": "Modify derived stat value constants. ( AttributeDerivedStat eStatType, float flNewValue.",
			"server": true,
			"params": {
				"nStatType": {
					"type": "int",
					"params_name": "nStatType",
					"description": "No Description Set"
				},
				"flNewValue": {
					"type": "float",
					"params_name": "flNewValue",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomBackpackCooldownPercent": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomBackpackCooldownPercent",
			"return": "void",
			"description": "Set the rate cooldown ticks down for items in the backpack.",
			"server": true,
			"params": {
				"flPercent": {
					"type": "float",
					"params_name": "flPercent",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomBackpackSwapCooldown": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomBackpackSwapCooldown",
			"return": "void",
			"description": "Set a custom cooldown for swapping items into the backpack.",
			"server": true,
			"params": {
				"flCooldown": {
					"type": "float",
					"params_name": "flCooldown",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomBuybackCooldownEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomBuybackCooldownEnabled",
			"return": "void",
			"description": "Turns on capability to define custom buyback cooldowns.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomBuybackCostEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomBuybackCostEnabled",
			"return": "void",
			"description": "Turns on capability to define custom buyback costs.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomDireScore": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomDireScore",
			"return": "void",
			"description": "Sets the topbar score display value for dire.",
			"server": true,
			"params": {
				"nScore": {
					"type": "int",
					"params_name": "nScore",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameForceHero": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomGameForceHero",
			"return": "void",
			"description": "Force all players to use the specified hero and disable the normal hero selection process. Must be used before hero selection.",
			"server": true,
			"params": {
				"pHeroName": {
					"type": "string",
					"params_name": "pHeroName",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGlyphCooldown": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomGlyphCooldown",
			"return": "void",
			"description": "Set a custom cooldown for team Glyph ability.",
			"server": true,
			"params": {
				"flCooldown": {
					"type": "float",
					"params_name": "flCooldown",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomHeroMaxLevel": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomHeroMaxLevel",
			"return": "void",
			"description": "Allows definition of the max level heroes can achieve (default is 25).",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomRadiantScore": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomRadiantScore",
			"return": "void",
			"description": "Sets the topbar score display value for radiant.",
			"server": true,
			"params": {
				"nScore": {
					"type": "int",
					"params_name": "nScore",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomScanCooldown": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomScanCooldown",
			"return": "void",
			"description": "Set a custom cooldown for team Scan ability.",
			"server": true,
			"params": {
				"flCooldown": {
					"type": "float",
					"params_name": "flCooldown",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomTerrainWeatherEffect": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomTerrainWeatherEffect",
			"return": "void",
			"description": "Set the effect used as a custom weather effect, when units are on non-default terrain, in this mode.",
			"server": true,
			"params": {
				"pszEffectName": {
					"type": "string",
					"params_name": "pszEffectName",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomXPRequiredToReachNextLevel": {
			"class": "CDOTABaseGameMode",
			"function": "SetCustomXPRequiredToReachNextLevel",
			"return": "void",
			"description": "Allows definition of a table of hero XP values.",
			"server": true,
			"params": {
				"hTable": {
					"type": "handle",
					"params_name": "hTable",
					"description": "No Description Set"
				}
			}
		},
		"SetDamageFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetDamageFilter",
			"return": "void",
			"description": "Set a filter function to control the behavior when a unit takes damage. (Modify the table and Return true to use new values, return false to cancel the event)",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetDaynightCycleDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetDaynightCycleDisabled",
			"return": "void",
			"description": "Enable or disable the day/night cycle.",
			"server": true,
			"params": {
				"bDisable": {
					"type": "bool",
					"params_name": "bDisable",
					"description": "No Description Set"
				}
			}
		},
		"SetDeathOverlayDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetDeathOverlayDisabled",
			"return": "void",
			"description": "Specify whether the full screen death overlay effect plays when the selected hero dies.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetDefaultStickyItem": {
			"class": "CDOTABaseGameMode",
			"function": "SetDefaultStickyItem",
			"return": "void",
			"description": "Sets the default sticky item in the quickbuy",
			"server": true,
			"params": {
				"pItem": {
					"type": "string",
					"params_name": "pItem",
					"description": "No Description Set"
				}
			}
		},
		"SetDraftingBanningTimeOverride": {
			"class": "CDOTABaseGameMode",
			"function": "SetDraftingBanningTimeOverride",
			"return": "void",
			"description": "Set drafting hero banning time",
			"server": true,
			"params": {
				"flValue": {
					"type": "float",
					"params_name": "flValue",
					"description": "No Description Set"
				}
			}
		},
		"SetDraftingHeroPickSelectTimeOverride": {
			"class": "CDOTABaseGameMode",
			"function": "SetDraftingHeroPickSelectTimeOverride",
			"return": "void",
			"description": "Set drafting hero pick time",
			"server": true,
			"params": {
				"flValue": {
					"type": "float",
					"params_name": "flValue",
					"description": "No Description Set"
				}
			}
		},
		"SetExecuteOrderFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetExecuteOrderFilter",
			"return": "void",
			"description": "Set a filter function to control the behavior when a unit picks up an item. (Modify the table and Return true to use new values, return false to cancel the event)",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetFixedRespawnTime": {
			"class": "CDOTABaseGameMode",
			"function": "SetFixedRespawnTime",
			"return": "void",
			"description": "Set a fixed delay for all players to respawn after.",
			"server": true,
			"params": {
				"flFixedRespawnTime": {
					"type": "float",
					"params_name": "flFixedRespawnTime",
					"description": "No Description Set"
				}
			}
		},
		"SetFogOfWarDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetFogOfWarDisabled",
			"return": "void",
			"description": "Turn the fog of war on or off.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetForceRightClickAttackDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetForceRightClickAttackDisabled",
			"return": "void",
			"description": "Prevent users from using the right click deny setting.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetFountainConstantManaRegen": {
			"class": "CDOTABaseGameMode",
			"function": "SetFountainConstantManaRegen",
			"return": "void",
			"description": "Set the constant rate that the fountain will regen mana. (-1 for default)",
			"server": true,
			"params": {
				"flConstantManaRegen": {
					"type": "float",
					"params_name": "flConstantManaRegen",
					"description": "No Description Set"
				}
			}
		},
		"SetFountainPercentageHealthRegen": {
			"class": "CDOTABaseGameMode",
			"function": "SetFountainPercentageHealthRegen",
			"return": "void",
			"description": "Set the percentage rate that the fountain will regen health. (-1 for default)",
			"server": true,
			"params": {
				"flPercentageHealthRegen": {
					"type": "float",
					"params_name": "flPercentageHealthRegen",
					"description": "No Description Set"
				}
			}
		},
		"SetFountainPercentageManaRegen": {
			"class": "CDOTABaseGameMode",
			"function": "SetFountainPercentageManaRegen",
			"return": "void",
			"description": "Set the percentage rate that the fountain will regen mana. (-1 for default)",
			"server": true,
			"params": {
				"flPercentageManaRegen": {
					"type": "float",
					"params_name": "flPercentageManaRegen",
					"description": "No Description Set"
				}
			}
		},
		"SetFreeCourierModeEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetFreeCourierModeEnabled",
			"return": "void",
			"description": "If set to true, enable 7.23 free courier mode.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetFriendlyBuildingMoveToEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetFriendlyBuildingMoveToEnabled",
			"return": "void",
			"description": "Allows clicks on friendly buildings to be handled normally.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetGoldSoundDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetGoldSoundDisabled",
			"return": "void",
			"description": "Turn the sound when gold is acquired off/on.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetHUDVisible": {
			"class": "CDOTABaseGameMode",
			"function": "SetHUDVisible",
			"return": "void",
			"description": "Set the HUD element visibility.",
			"server": true,
			"params": {
				"iHUDElement": {
					"type": "int",
					"params_name": "iHUDElement",
					"description": "No Description Set"
				},
				"bVisible": {
					"type": "bool",
					"params_name": "bVisible",
					"description": "No Description Set"
				}
			}
		},
		"SetHealingFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetHealingFilter",
			"return": "void",
			"description": "Set a filter function to control the behavior when a unit heals. (Modify the table and Return true to use new values, return false to cancel the event)",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetHudCombatEventsDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetHudCombatEventsDisabled",
			"return": "void",
			"description": "Specify whether the default combat events will show in the HUD.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetItemAddedToInventoryFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetItemAddedToInventoryFilter",
			"return": "void",
			"description": "Set a filter function to control what happens to items that are added to an inventory, return false to cancel the event",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetKillableTombstones": {
			"class": "CDOTABaseGameMode",
			"function": "SetKillableTombstones",
			"return": "void",
			"description": "Set whether tombstones can be channeled to be removed by enemy heroes.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetKillingSpreeAnnouncerDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetKillingSpreeAnnouncerDisabled",
			"return": "void",
			"description": "Mutes the in-game killing spree announcer.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetLoseGoldOnDeath": {
			"class": "CDOTABaseGameMode",
			"function": "SetLoseGoldOnDeath",
			"return": "void",
			"description": "Use to disable gold loss on death.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetMaximumAttackSpeed": {
			"class": "CDOTABaseGameMode",
			"function": "SetMaximumAttackSpeed",
			"return": "void",
			"description": "Set the maximum attack speed for units.",
			"server": true,
			"params": {
				"nMaxSpeed": {
					"type": "int",
					"params_name": "nMaxSpeed",
					"description": "No Description Set"
				}
			}
		},
		"SetMinimumAttackSpeed": {
			"class": "CDOTABaseGameMode",
			"function": "SetMinimumAttackSpeed",
			"return": "void",
			"description": "Set the minimum attack speed for units.",
			"server": true,
			"params": {
				"nMinSpeed": {
					"type": "int",
					"params_name": "nMinSpeed",
					"description": "No Description Set"
				}
			}
		},
		"SetModifierGainedFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetModifierGainedFilter",
			"return": "void",
			"description": "Set a filter function to control modifiers that are gained, return false to destroy modifier.",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetModifyExperienceFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetModifyExperienceFilter",
			"return": "void",
			"description": "Set a filter function to control the behavior when a hero`s experience is modified. (Modify the table and Return true to use new values, return false to cancel the event)",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetModifyGoldFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetModifyGoldFilter",
			"return": "void",
			"description": "Set a filter function to control the behavior when a hero`s gold is modified. (Modify the table and Return true to use new values, return false to cancel the event)",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetNeutralItemHideUndiscoveredEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetNeutralItemHideUndiscoveredEnabled",
			"return": "void",
			"description": "When enabled, undiscovered items in the neutral item stash are hidden.",
			"server": true,
			"params": {
				"bEnable": {
					"type": "bool",
					"params_name": "bEnable",
					"description": "No Description Set"
				}
			}
		},
		"SetNeutralStashEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetNeutralStashEnabled",
			"return": "void",
			"description": "Allow items to be sent to the neutral stash.",
			"server": true,
			"params": {
				"bEnable": {
					"type": "bool",
					"params_name": "bEnable",
					"description": "No Description Set"
				}
			}
		},
		"SetNeutralStashTeamViewOnlyEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetNeutralStashTeamViewOnlyEnabled",
			"return": "void",
			"description": "When enabled, the all neutral items tab cannot be viewed.",
			"server": true,
			"params": {
				"bEnable": {
					"type": "bool",
					"params_name": "bEnable",
					"description": "No Description Set"
				}
			}
		},
		"SetOverrideSelectionEntity": {
			"class": "CDOTABaseGameMode",
			"function": "SetOverrideSelectionEntity",
			"return": "void",
			"description": "Set an override for the default selection entity, instead of each player`s hero.",
			"server": true,
			"params": {
				"hOverrideEntity": {
					"type": "handle",
					"params_name": "hOverrideEntity",
					"description": "No Description Set"
				}
			}
		},
		"SetPauseEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetPauseEnabled",
			"return": "void",
			"description": "Set pausing enabled/disabled",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetPowerRuneSpawnInterval": {
			"class": "CDOTABaseGameMode",
			"function": "SetPowerRuneSpawnInterval",
			"return": "void",
			"description": "Set power rune spawn rate",
			"server": true,
			"params": {
				"flInterval": {
					"type": "float",
					"params_name": "flInterval",
					"description": "No Description Set"
				}
			}
		},
		"SetRandomHeroBonusItemGrantDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetRandomHeroBonusItemGrantDisabled",
			"return": "void",
			"description": "Disables bonus items for randoming a hero.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetRecommendedItemsDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetRecommendedItemsDisabled",
			"return": "void",
			"description": "Turn the panel for showing recommended items at the shop off/on.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetRemoveIllusionsOnDeath": {
			"class": "CDOTABaseGameMode",
			"function": "SetRemoveIllusionsOnDeath",
			"return": "void",
			"description": "Make it so illusions are immediately removed upon death, rather than sticking around for a few seconds.",
			"server": true,
			"params": {
				"bRemove": {
					"type": "bool",
					"params_name": "bRemove",
					"description": "No Description Set"
				}
			}
		},
		"SetRespawnTimeScale": {
			"class": "CDOTABaseGameMode",
			"function": "SetRespawnTimeScale",
			"return": "void",
			"description": "Sets the scale applied to non-fixed respawn times. 1 = default DOTA respawn calculations.",
			"server": true,
			"params": {
				"flValue": {
					"type": "float",
					"params_name": "flValue",
					"description": "No Description Set"
				}
			}
		},
		"SetRuneEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetRuneEnabled",
			"return": "void",
			"description": "Set if a given type of rune is enabled.",
			"server": true,
			"params": {
				"nRune": {
					"type": "int",
					"params_name": "nRune",
					"description": "No Description Set"
				},
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetRuneSpawnFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetRuneSpawnFilter",
			"return": "void",
			"description": "Set a filter function to control what rune spawns. (Modify the table and Return true to use new values, return false to cancel the event)",
			"server": true,
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetSelectionGoldPenaltyEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetSelectionGoldPenaltyEnabled",
			"return": "void",
			"description": "Enable/disable gold penalty for late picking.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetSendToStashEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetSendToStashEnabled",
			"return": "void",
			"description": "Allow items to be sent to the stash.",
			"server": true,
			"params": {
				"bEnable": {
					"type": "bool",
					"params_name": "bEnable",
					"description": "No Description Set"
				}
			}
		},
		"SetStashPurchasingDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetStashPurchasingDisabled",
			"return": "void",
			"description": "Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetStickyItemDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetStickyItemDisabled",
			"return": "void",
			"description": "Hide the sticky item in the quickbuy.",
			"server": true,
			"params": {
				"bDisabled": {
					"type": "bool",
					"params_name": "bDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetTPScrollSlotItemOverride": {
			"class": "CDOTABaseGameMode",
			"function": "SetTPScrollSlotItemOverride",
			"return": "void",
			"description": "Sets the item which goes in the TP scroll slot",
			"server": true,
			"params": {
				"pItemName": {
					"type": "string",
					"params_name": "pItemName",
					"description": "No Description Set"
				}
			}
		},
		"SetTopBarTeamValue": {
			"class": "CDOTABaseGameMode",
			"function": "SetTopBarTeamValue",
			"return": "void",
			"description": "Set the team values on the top game bar.",
			"server": true,
			"params": {
				"iTeam": {
					"type": "int",
					"params_name": "iTeam",
					"description": "No Description Set"
				},
				"nValue": {
					"type": "int",
					"params_name": "nValue",
					"description": "No Description Set"
				}
			}
		},
		"SetTopBarTeamValuesOverride": {
			"class": "CDOTABaseGameMode",
			"function": "SetTopBarTeamValuesOverride",
			"return": "void",
			"description": "Override the values of the team values on the top game bar.",
			"server": true,
			"params": {
				"bOverride": {
					"type": "bool",
					"params_name": "bOverride",
					"description": "No Description Set"
				}
			}
		},
		"SetTopBarTeamValuesVisible": {
			"class": "CDOTABaseGameMode",
			"function": "SetTopBarTeamValuesVisible",
			"return": "void",
			"description": "Turning on/off the team values on the top game bar.",
			"server": true,
			"params": {
				"bVisible": {
					"type": "bool",
					"params_name": "bVisible",
					"description": "No Description Set"
				}
			}
		},
		"SetTowerBackdoorProtectionEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetTowerBackdoorProtectionEnabled",
			"return": "void",
			"description": "Enables/Disables tower backdoor protection.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetTrackingProjectileFilter": {
			"class": "CDOTABaseGameMode",
			"function": "SetTrackingProjectileFilter",
			"return": "void",
			"description": "Set a filter function to control when tracking projectiles are launched. (Modify the table and Return true to use new values, return false to cancel the event)",
			"server": true,
			"example": "GameRules:GetGameModeEntity():SetTrackingProjectileFilter(Dynamic_Wrap(public, \"TrackingProjectileFilter\"), public)\nfunction public:TrackingProjectileFilter(params)\n\t--[[\n\t\tparams = {\n\t\t\tis_attack\t1\n\t\t\tentindex_ability_const\t-1\n\t\t\tmax_impact_time\t0\n\t\t\tentindex_target_const\t145\n\t\t\tmove_speed\t1000\n\t\t\tentindex_source_const\t281\n\t\t\tdodgeable\t1\n\t\t\texpire_time\t0\n\t\t}\n\t]]\n\treturn true\nend",
			"params": {
				"hFunction": {
					"type": "handle",
					"params_name": "hFunction",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				}
			}
		},
		"SetUnseenFogOfWarEnabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetUnseenFogOfWarEnabled",
			"return": "void",
			"description": "Enable or disable unseen fog of war. When enabled parts of the map the player has never seen will be completely hidden by fog of war.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetUseCustomHeroLevels": {
			"class": "CDOTABaseGameMode",
			"function": "SetUseCustomHeroLevels",
			"return": "void",
			"description": "Turn on custom-defined XP values for hero level ups.  The table should be defined before switching this on.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetUseDefaultDOTARuneSpawnLogic": {
			"class": "CDOTABaseGameMode",
			"function": "SetUseDefaultDOTARuneSpawnLogic",
			"return": "void",
			"description": "If set to true, use current rune spawn rules.  Either setting respects custom spawn intervals.",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetWeatherEffectsDisabled": {
			"class": "CDOTABaseGameMode",
			"function": "SetWeatherEffectsDisabled",
			"return": "void",
			"description": "Set if weather effects are disabled.",
			"server": true,
			"params": {
				"bDisable": {
					"type": "bool",
					"params_name": "bDisable",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CDOTAGameManager": {
		"description": "No Description Set",
		"GetHeroDataByName_Script": {
			"class": "CDOTAGameManager",
			"class_cl": "CDOTAGameManager",
			"function": "GetHeroDataByName_Script",
			"return": "table",
			"description": "Get the hero unit ",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetHeroIDByName": {
			"class": "CDOTAGameManager",
			"class_cl": "CDOTAGameManager",
			"function": "GetHeroIDByName",
			"return": "int",
			"description": "Get the hero ID given the hero name.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetHeroNameByID": {
			"class": "CDOTAGameManager",
			"class_cl": "CDOTAGameManager",
			"function": "GetHeroNameByID",
			"return": "string",
			"description": "Get the hero name given a hero ID.",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetHeroNameForUnitName": {
			"class": "CDOTAGameManager",
			"class_cl": "CDOTAGameManager",
			"function": "GetHeroNameForUnitName",
			"return": "string",
			"description": "Get the hero name given a unit name.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetHeroUnitNameByID": {
			"class": "CDOTAGameManager",
			"class_cl": "CDOTAGameManager",
			"function": "GetHeroUnitNameByID",
			"return": "string",
			"description": "Get the hero unit name given the hero ID.",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDOTAGamerules": {
		"description": "Gamerules",
		"AddBotPlayerWithEntityScript": {
			"class": "CDOTAGamerules",
			"function": "AddBotPlayerWithEntityScript",
			"return": "handle",
			"description": "Spawn a bot player of the passed hero name, player name, and team.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "sHeroName",
					"description": "英雄名字"
				},
				"string_2": {
					"type": "string",
					"params_name": "sBotName",
					"description": "电脑AI名字"
				},
				"int_3": {
					"type": "int",
					"params_name": "iTeamNumber",
					"description": "队伍ID"
				},
				"string_4": {
					"type": "string",
					"params_name": "sScriptPath",
					"description": "代码文件路径"
				},
				"bool_5": {
					"type": "bool",
					"params_name": "bool_5",
					"description": "No Description Set"
				}
			}
		},
		"SetTimeOfDay": {
			"class": "CDOTAGamerules",
			"function": "SetTimeOfDay",
			"return": "void",
			"description": "设置一天的时间(0到1)，当值小于0.25和大于0.75时为晚上，反之为白天。",
			"server": true,
			"example": "undefined",
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"GetDOTATime": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetDOTATime",
			"return": "float",
			"description": "(b IncludePregameTime b IncludeNegativeTime) Returns the actual DOTA in-game clock time.返回Dota游戏内的时间。（是否包含赛前时间或负时间）",
			"server": true,
			"client": true,
			"example": "undefined",
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "IncludePregameTime ",
					"description": "是否包含赛前时间"
				},
				"bool_2": {
					"type": "bool",
					"params_name": "IncludeNegativeTime",
					"description": "负时间"
				}
			}
		},
		"AddEventMetadataLeaderboardEntry": {
			"class": "CDOTAGamerules",
			"function": "AddEventMetadataLeaderboardEntry",
			"return": "bool",
			"description": "Event-only ( string szNameSuffix, int nStars, int nMaxStars, int nExtraData1, int nExtraData2 )",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"unsigned_2": {
					"type": "unsigned",
					"params_name": "unsigned_2",
					"description": "No Description Set"
				},
				"unsigned_3": {
					"type": "unsigned",
					"params_name": "unsigned_3",
					"description": "No Description Set"
				},
				"unsigned_4": {
					"type": "unsigned",
					"params_name": "unsigned_4",
					"description": "No Description Set"
				},
				"unsigned_5": {
					"type": "unsigned",
					"params_name": "unsigned_5",
					"description": "No Description Set"
				},
				"unsigned_6": {
					"type": "unsigned",
					"params_name": "unsigned_6",
					"description": "No Description Set"
				},
				"unsigned_7": {
					"type": "unsigned",
					"params_name": "unsigned_7",
					"description": "No Description Set"
				},
				"unsigned_8": {
					"type": "unsigned",
					"params_name": "unsigned_8",
					"description": "No Description Set"
				},
				"unsigned_9": {
					"type": "unsigned",
					"params_name": "unsigned_9",
					"description": "No Description Set"
				}
			}
		},
		"AddEventMetadataLeaderboardEntryRawScore": {
			"class": "CDOTAGamerules",
			"function": "AddEventMetadataLeaderboardEntryRawScore",
			"return": "bool",
			"description": "Event-only ( string szNameSuffix, int nScore, int nExtraData1, int nExtraData2 )",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"unsigned_2": {
					"type": "unsigned",
					"params_name": "unsigned_2",
					"description": "No Description Set"
				},
				"unsigned_3": {
					"type": "unsigned",
					"params_name": "unsigned_3",
					"description": "No Description Set"
				},
				"unsigned_4": {
					"type": "unsigned",
					"params_name": "unsigned_4",
					"description": "No Description Set"
				},
				"unsigned_5": {
					"type": "unsigned",
					"params_name": "unsigned_5",
					"description": "No Description Set"
				},
				"unsigned_6": {
					"type": "unsigned",
					"params_name": "unsigned_6",
					"description": "No Description Set"
				},
				"unsigned_7": {
					"type": "unsigned",
					"params_name": "unsigned_7",
					"description": "No Description Set"
				},
				"unsigned_8": {
					"type": "unsigned",
					"params_name": "unsigned_8",
					"description": "No Description Set"
				}
			}
		},
		"AddItemToWhiteList": {
			"class": "CDOTAGamerules",
			"function": "AddItemToWhiteList",
			"return": "void",
			"description": "Add an item to the whitelist",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"AddMinimapDebugPoint": {
			"class": "CDOTAGamerules",
			"function": "AddMinimapDebugPoint",
			"return": "void",
			"description": "Add a point on the minimap.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"float_7": {
					"type": "float",
					"params_name": "float_7",
					"description": "No Description Set"
				}
			}
		},
		"AddMinimapDebugPointForTeam": {
			"class": "CDOTAGamerules",
			"function": "AddMinimapDebugPointForTeam",
			"return": "void",
			"description": "Add a point on the minimap for a specific team.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"float_7": {
					"type": "float",
					"params_name": "float_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				}
			}
		},
		"BeginNightstalkerNight": {
			"class": "CDOTAGamerules",
			"function": "BeginNightstalkerNight",
			"return": "void",
			"description": "Begin night stalker night.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"BeginTemporaryNight": {
			"class": "CDOTAGamerules",
			"function": "BeginTemporaryNight",
			"return": "void",
			"description": "Begin temporary night.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"BotPopulate": {
			"class": "CDOTAGamerules",
			"function": "BotPopulate",
			"return": "void",
			"description": "Fills all the teams with bots if cheat mode is enabled.",
			"server": true,
			"params": {}
		},
		"Defeated": {
			"class": "CDOTAGamerules",
			"function": "Defeated",
			"return": "void",
			"description": "Kills the ancient, etc.",
			"server": true,
			"params": {}
		},
		"DidMatchSignoutTimeOut": {
			"class": "CDOTAGamerules",
			"function": "DidMatchSignoutTimeOut",
			"return": "bool",
			"description": "true when we have waited some time after end of the game and not received signout",
			"server": true,
			"params": {}
		},
		"EnableCustomGameSetupAutoLaunch": {
			"class": "CDOTAGamerules",
			"function": "EnableCustomGameSetupAutoLaunch",
			"return": "void",
			"description": "Enabled (true) or disable (false) auto launch for custom game setup.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"ExecuteTeamPing": {
			"class": "CDOTAGamerules",
			"function": "ExecuteTeamPing",
			"return": "void",
			"description": "Sends a minimap ping to all players on the team",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "handle_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				}
			}
		},
		"FinishCustomGameSetup": {
			"class": "CDOTAGamerules",
			"function": "FinishCustomGameSetup",
			"return": "void",
			"description": "Indicate that the custom game setup phase is complete, and advance to the game.",
			"server": true,
			"params": {}
		},
		"ForceCreepSpawn": {
			"class": "CDOTAGamerules",
			"function": "ForceCreepSpawn",
			"return": "void",
			"description": "Spawn the next wave of creeps.",
			"server": true,
			"params": {}
		},
		"ForceGameStart": {
			"class": "CDOTAGamerules",
			"function": "ForceGameStart",
			"return": "void",
			"description": "Transition game state to DOTA_GAMERULES_STATE_GAME_IN_PROGRESS",
			"server": true,
			"params": {}
		},
		"GetAnnouncer": {
			"class": "CDOTAGamerules",
			"function": "GetAnnouncer",
			"return": "handle",
			"description": "Get the announcer for a team",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetBannedHeroes": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetBannedHeroes",
			"return": "table",
			"description": "Returns the hero unit names banned in this game, if any",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCustomGameDifficulty": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetCustomGameDifficulty",
			"return": "int",
			"description": "Returns the difficulty level of the custom game mode",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCustomGameTeamMaxPlayers": {
			"class": "CDOTAGamerules",
			"function": "GetCustomGameTeamMaxPlayers",
			"return": "int",
			"description": "Get whether a team is selectable during game setup",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetDifficulty": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetDifficulty",
			"return": "int",
			"description": "Returns difficulty level of the custom game mode",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetDroppedItem": {
			"class": "CDOTAGamerules",
			"function": "GetDroppedItem",
			"return": "handle",
			"description": "Gets the Xth dropped item",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetGameFrameTime": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetGameFrameTime",
			"return": "float",
			"description": "Returns the number of seconds elapsed since the last frame was renderered. This time doesn`t count up when the game is paused",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetGameModeEntity": {
			"class": "CDOTAGamerules",
			"function": "GetGameModeEntity",
			"return": "handle",
			"description": "Get the game mode entity",
			"server": true,
			"params": {}
		},
		"GetGameSessionConfigValue": {
			"class": "CDOTAGamerules",
			"function": "GetGameSessionConfigValue",
			"return": "string",
			"description": "Get a string value from the game session config (map options)",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"GetGameTime": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetGameTime",
			"return": "float",
			"description": "Returns the number of seconds elapsed since map start. This time doesn`t count up when the game is paused",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetItemStockCount": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetItemStockCount",
			"return": "int",
			"description": "Get the stock count of the item",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"GetItemStockDuration": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetItemStockDuration",
			"return": "float",
			"description": "Get the time it takes to add a new item to stock",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"GetItemStockTime": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetItemStockTime",
			"return": "float",
			"description": "Get the time an item will be added to stock",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"GetMatchSignoutComplete": {
			"class": "CDOTAGamerules",
			"function": "GetMatchSignoutComplete",
			"return": "bool",
			"description": "Have we received the post match signout message that includes reward information",
			"server": true,
			"params": {}
		},
		"GetNextBountyRuneSpawnTime": {
			"class": "CDOTAGamerules",
			"function": "GetNextBountyRuneSpawnTime",
			"return": "float",
			"description": "Gets next bounty rune spawn time",
			"server": true,
			"params": {}
		},
		"GetNextRuneSpawnTime": {
			"class": "CDOTAGamerules",
			"function": "GetNextRuneSpawnTime",
			"return": "float",
			"description": "Gets next rune spawn time",
			"server": true,
			"params": {}
		},
		"GetNianTotalDamageTaken": {
			"class": "CDOTAGamerules",
			"function": "GetNianTotalDamageTaken",
			"return": "int",
			"description": "For New Bloom, get total damage taken by the Nian / Year Beast",
			"server": true,
			"params": {}
		},
		"GetPlayerCustomGameAccountRecord": {
			"class": "CDOTAGamerules",
			"function": "GetPlayerCustomGameAccountRecord",
			"return": "table",
			"description": "(Preview/Unreleased) Gets the player`s custom game account record, as it looked at the start of this session",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetStateTransitionTime": {
			"class": "CDOTAGamerules",
			"function": "GetStateTransitionTime",
			"return": "float",
			"description": "Get time remaining between state changes.",
			"server": true,
			"params": {}
		},
		"GetTimeOfDay": {
			"class": "CDOTAGamerules",
			"function": "GetTimeOfDay",
			"return": "float",
			"description": "Get the time of day",
			"server": true,
			"params": {}
		},
		"GetWeatherWindDirection": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "GetWeatherWindDirection",
			"return": "Vector",
			"description": "Get Weather Wind Direction Vector",
			"server": true,
			"client": true,
			"params": {}
		},
		"IncreaseItemStock": {
			"class": "CDOTAGamerules",
			"function": "IncreaseItemStock",
			"return": "void",
			"description": "Increase an item`s stock count, clamped to item max (nTeamNumber, szItemName, nCount, nPlayerID .",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				}
			}
		},
		"IsCheatMode": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "IsCheatMode",
			"return": "bool",
			"description": "Are cheats enabled on the server",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsDaytime": {
			"class": "CDOTAGamerules",
			"function": "IsDaytime",
			"return": "bool",
			"description": "Is it day time?",
			"server": true,
			"params": {}
		},
		"IsGamePaused": {
			"class": "CDOTAGamerules",
			"function": "IsGamePaused",
			"return": "bool",
			"description": "Returns whether the game is paused.",
			"server": true,
			"params": {}
		},
		"IsHeroRespawnEnabled": {
			"class": "CDOTAGamerules",
			"function": "IsHeroRespawnEnabled",
			"return": "bool",
			"description": "Returns whether hero respawn is enabled.",
			"server": true,
			"params": {}
		},
		"IsInBanPhase": {
			"class": "CDOTAGamerules",
			"function": "IsInBanPhase",
			"return": "bool",
			"description": "Are we in the ban phase of hero pick?",
			"server": true,
			"params": {}
		},
		"IsItemInWhiteList": {
			"class": "CDOTAGamerules",
			"function": "IsItemInWhiteList",
			"return": "bool",
			"description": "Query an item in the whitelist",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"IsNightstalkerNight": {
			"class": "CDOTAGamerules",
			"function": "IsNightstalkerNight",
			"return": "bool",
			"description": "Is it night stalker night-time?",
			"server": true,
			"params": {}
		},
		"IsTemporaryNight": {
			"class": "CDOTAGamerules",
			"function": "IsTemporaryNight",
			"return": "bool",
			"description": "Is it temporarily night-time?",
			"server": true,
			"params": {}
		},
		"LockCustomGameSetupTeamAssignment": {
			"class": "CDOTAGamerules",
			"function": "LockCustomGameSetupTeamAssignment",
			"return": "void",
			"description": "Lock (true) or unlock (false) team assignemnt. If team assignment is locked players cannot change teams.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"MakeTeamLose": {
			"class": "CDOTAGamerules",
			"function": "MakeTeamLose",
			"return": "void",
			"description": "Makes the specified team lose",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"ModifyGoldFiltered": {
			"class": "CDOTAGamerules",
			"function": "ModifyGoldFiltered",
			"return": "int",
			"description": "Like ModifyGold, but will use the gold filter if SetFilterMoreGold has been set true",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				}
			}
		},
		"NumDroppedItems": {
			"class": "CDOTAGamerules",
			"function": "NumDroppedItems",
			"return": "int",
			"description": "Returns the number of items currently dropped on the ground",
			"server": true,
			"params": {}
		},
		"PlayerHasCustomGameHostPrivileges": {
			"class": "CDOTAGamerules",
			"function": "PlayerHasCustomGameHostPrivileges",
			"return": "bool",
			"description": "Whether a player has custom game host privileges (shuffle teams, etc.)",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"Playtesting_UpdateAddOnKeyValues": {
			"class": "CDOTAGamerules",
			"function": "Playtesting_UpdateAddOnKeyValues",
			"return": "void",
			"description": "Updates custom hero, unit and ability KeyValues in memory with the latest values from disk",
			"server": true,
			"params": {}
		},
		"PrepareSpawners": {
			"class": "CDOTAGamerules",
			"function": "PrepareSpawners",
			"return": "void",
			"description": "Prepare Dota lane style spawners with a given interval",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"RemoveFakeClient": {
			"class": "CDOTAGamerules",
			"function": "RemoveFakeClient",
			"return": "void",
			"description": "Removes a fake client",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"RemoveItemFromWhiteList": {
			"class": "CDOTAGamerules",
			"function": "RemoveItemFromWhiteList",
			"return": "void",
			"description": "Remove an item from the whitelist",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"ResetDefeated": {
			"class": "CDOTAGamerules",
			"function": "ResetDefeated",
			"return": "void",
			"description": "Restart after killing the ancient, etc.",
			"server": true,
			"params": {}
		},
		"ResetGameTime": {
			"class": "CDOTAGamerules",
			"function": "ResetGameTime",
			"return": "void",
			"description": "Restart gametime from 0",
			"server": true,
			"params": {}
		},
		"ResetToCustomGameSetup": {
			"class": "CDOTAGamerules",
			"function": "ResetToCustomGameSetup",
			"return": "void",
			"description": "Restart at custom game setup.",
			"server": true,
			"params": {}
		},
		"ResetToHeroSelection": {
			"class": "CDOTAGamerules",
			"function": "ResetToHeroSelection",
			"return": "void",
			"description": "Restart the game at hero selection",
			"server": true,
			"params": {}
		},
		"Script_GetMatchID": {
			"class": "CDOTAGamerules",
			"function": "Script_GetMatchID",
			"return": "uint64",
			"description": "Get the MatchID for this game.",
			"server": true,
			"params": {}
		},
		"SendCustomMessage": {
			"class": "CDOTAGamerules",
			"function": "SendCustomMessage",
			"return": "void",
			"description": "Sends a message on behalf of a player.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				}
			}
		},
		"SendCustomMessageToTeam": {
			"class": "CDOTAGamerules",
			"function": "SendCustomMessageToTeam",
			"return": "void",
			"description": "Sends a message on behalf of a player to the specified team.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				}
			}
		},
		"SetAllowOutpostBonuses": {
			"class": "CDOTAGamerules",
			"function": "SetAllowOutpostBonuses",
			"return": "void",
			"description": "Allow Outposts granting XP",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCreepMinimapIconScale": {
			"class": "CDOTAGamerules",
			"function": "SetCreepMinimapIconScale",
			"return": "void",
			"description": "(flMinimapCreepIconScale) - Scale the creep icons on the minimap.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCreepSpawningEnabled": {
			"class": "CDOTAGamerules",
			"function": "SetCreepSpawningEnabled",
			"return": "void",
			"description": "Sets whether the regular Dota creeps spawn.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameAccountRecordSaveFunction": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameAccountRecordSaveFunction",
			"return": "void",
			"description": "(Preview/Unreleased) Sets a callback to handle saving custom game account records (callback is passed a Player ID and should return a flat simple table)",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameAllowBattleMusic": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameAllowBattleMusic",
			"return": "void",
			"description": "Sets a flag to enable/disable the default music handling code for custom games",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameAllowHeroPickMusic": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameAllowHeroPickMusic",
			"return": "void",
			"description": "Sets a flag to enable/disable the default music handling code for custom games",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameAllowMusicAtGameStart": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameAllowMusicAtGameStart",
			"return": "void",
			"description": "Sets a flag to enable/disable the default music handling code for custom games",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameAllowSecondaryAbilitiesOnOtherUnits": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameAllowSecondaryAbilitiesOnOtherUnits",
			"return": "void",
			"description": "Sets a flag to enable/disable the casting secondary abilities from units other than the player`s own hero.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameBansPerTeam": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameBansPerTeam",
			"return": "void",
			"description": "Set number of hero bans each team gets",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameDifficulty": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameDifficulty",
			"return": "void",
			"description": "Set the difficulty level of the custom game mode",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameEndDelay": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameEndDelay",
			"return": "void",
			"description": "Sets the game end delay.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameSetupAutoLaunchDelay": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameSetupAutoLaunchDelay",
			"return": "void",
			"description": "Set the amount of time to wait for auto launch.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameSetupRemainingTime": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameSetupRemainingTime",
			"return": "void",
			"description": "Set the amount of remaining time, in seconds, for custom game setup. 0 = finish immediately, -1 = wait forever",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameSetupTimeout": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameSetupTimeout",
			"return": "void",
			"description": "Setup (pre-gameplay) phase timeout. 0 = instant, -1 = forever (until FinishCustomGameSetup is called)",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomGameTeamMaxPlayers": {
			"class": "CDOTAGamerules",
			"function": "SetCustomGameTeamMaxPlayers",
			"return": "void",
			"description": "Set whether a team is selectable during game setup",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomVictoryMessage": {
			"class": "CDOTAGamerules",
			"function": "SetCustomVictoryMessage",
			"return": "void",
			"description": "Sets the victory message.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomVictoryMessageDuration": {
			"class": "CDOTAGamerules",
			"function": "SetCustomVictoryMessageDuration",
			"return": "void",
			"description": "Sets the victory message duration.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetEventMetadataCustomTable": {
			"class": "CDOTAGamerules",
			"function": "SetEventMetadataCustomTable",
			"return": "bool",
			"description": "Event-only ( table hMetadataTable )",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"SetEventSignoutCustomTable": {
			"class": "CDOTAGamerules",
			"function": "SetEventSignoutCustomTable",
			"return": "bool",
			"description": "Event-only ( table hMetadataTable )",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"SetFilterMoreGold": {
			"class": "CDOTAGamerules",
			"function": "SetFilterMoreGold",
			"return": "void",
			"description": "Sets whether to filter more gold events than normal",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetFirstBloodActive": {
			"class": "CDOTAGamerules",
			"function": "SetFirstBloodActive",
			"return": "void",
			"description": "Sets whether First Blood has been triggered.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetGameTimeFrozen": {
			"class": "CDOTAGamerules",
			"function": "SetGameTimeFrozen",
			"return": "void",
			"description": "Freeze the game time.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetGameWinner": {
			"class": "CDOTAGamerules",
			"function": "SetGameWinner",
			"return": "void",
			"description": "Makes the specified team win",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetGlyphCooldown": {
			"class": "CDOTAGamerules",
			"function": "SetGlyphCooldown",
			"return": "void",
			"description": "Set Glyph cooldown for team",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"SetGoldPerTick": {
			"class": "CDOTAGamerules",
			"function": "SetGoldPerTick",
			"return": "void",
			"description": "Set the auto gold increase per timed interval.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetGoldTickTime": {
			"class": "CDOTAGamerules",
			"function": "SetGoldTickTime",
			"return": "void",
			"description": "Set the time interval between auto gold increases.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetHeroMinimapIconScale": {
			"class": "CDOTAGamerules",
			"function": "SetHeroMinimapIconScale",
			"return": "void",
			"description": "(flMinimapHeroIconScale) - Scale the hero minimap icons on the minimap.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetHeroRespawnEnabled": {
			"class": "CDOTAGamerules",
			"function": "SetHeroRespawnEnabled",
			"return": "void",
			"description": "Control if the normal DOTA hero respawn rules apply.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetHeroSelectPenaltyTime": {
			"class": "CDOTAGamerules",
			"function": "SetHeroSelectPenaltyTime",
			"return": "void",
			"description": "Sets amount of penalty time before randoming a hero",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetHeroSelectionTime": {
			"class": "CDOTAGamerules",
			"function": "SetHeroSelectionTime",
			"return": "void",
			"description": "Sets the amount of time players have to pick their hero.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetHideKillMessageHeaders": {
			"class": "CDOTAGamerules",
			"function": "SetHideKillMessageHeaders",
			"return": "void",
			"description": "Sets whether the multikill, streak, and first-blood banners appear at the top of the screen.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetIgnoreLobbyTeamsInCustomGame": {
			"class": "CDOTAGamerules",
			"function": "SetIgnoreLobbyTeamsInCustomGame",
			"return": "void",
			"description": "Set whether custom and event games should ignore Lobby teams when assigning players to teams. Defaults to true.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetItemStockCount": {
			"class": "CDOTAGamerules",
			"function": "SetItemStockCount",
			"return": "void",
			"description": "Set the stock count of the item",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				}
			}
		},
		"SetNextBountyRuneSpawnTime": {
			"class": "CDOTAGamerules",
			"function": "SetNextBountyRuneSpawnTime",
			"return": "void",
			"description": "Sets next bounty rune spawn time",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetNextRuneSpawnTime": {
			"class": "CDOTAGamerules",
			"function": "SetNextRuneSpawnTime",
			"return": "void",
			"description": "Sets next rune spawn time",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetOverlayHealthBarUnit": {
			"class": "CDOTAGamerules",
			"function": "SetOverlayHealthBarUnit",
			"return": "void",
			"description": "Show this unit`s health on the overlay health bar",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"SetPostGameTime": {
			"class": "CDOTAGamerules",
			"function": "SetPostGameTime",
			"return": "void",
			"description": "Sets the amount of time players have between the game ending and the server disconnecting them.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetPreGameTime": {
			"class": "CDOTAGamerules",
			"function": "SetPreGameTime",
			"return": "void",
			"description": "Sets the amount of time players have between picking their hero and game start.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetRuneMinimapIconScale": {
			"class": "CDOTAGamerules",
			"function": "SetRuneMinimapIconScale",
			"return": "void",
			"description": "(flMinimapRuneIconScale) - Scale the rune icons on the minimap.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetRuneSpawnTime": {
			"class": "CDOTAGamerules",
			"function": "SetRuneSpawnTime",
			"return": "void",
			"description": "Sets the amount of time between rune spawns.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetSafeToLeave": {
			"class": "CDOTAGamerules",
			"function": "SetSafeToLeave",
			"return": "void",
			"description": "(bSafeToLeave) - Mark this game as safe to leave.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetSameHeroSelectionEnabled": {
			"class": "CDOTAGamerules",
			"function": "SetSameHeroSelectionEnabled",
			"return": "void",
			"description": "When true, players can repeatedly pick the same hero.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetShowcaseTime": {
			"class": "CDOTAGamerules",
			"function": "SetShowcaseTime",
			"return": "void",
			"description": "Sets the amount of time players have between the strategy phase and entering the pre-game phase.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetSpeechUseSpawnInsteadOfRespawnConcept": {
			"class": "CDOTAGamerules",
			"function": "SetSpeechUseSpawnInsteadOfRespawnConcept",
			"return": "void",
			"description": "Set whether to speak a Spawn concept instead of a Respawn concept on respawn.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetStartingGold": {
			"class": "CDOTAGamerules",
			"function": "SetStartingGold",
			"return": "void",
			"description": "Set the starting gold amount.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetStrategyTime": {
			"class": "CDOTAGamerules",
			"function": "SetStrategyTime",
			"return": "void",
			"description": "Sets the amount of time players have between the hero selection and entering the showcase phase.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetTreeRegrowTime": {
			"class": "CDOTAGamerules",
			"function": "SetTreeRegrowTime",
			"return": "void",
			"description": "Sets the tree regrow time in seconds.",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"SetUseBaseGoldBountyOnHeroes": {
			"class": "CDOTAGamerules",
			"function": "SetUseBaseGoldBountyOnHeroes",
			"return": "void",
			"description": "Heroes will use the basic NPC functionality for determining their bounty, rather than DOTA specific formulas.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetUseCustomHeroXPValues": {
			"class": "CDOTAGamerules",
			"function": "SetUseCustomHeroXPValues",
			"return": "void",
			"description": "Allows heroes in the map to give a specific amount of XP (this value must be set).",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetUseUniversalShopMode": {
			"class": "CDOTAGamerules",
			"function": "SetUseUniversalShopMode",
			"return": "void",
			"description": "When true, all items are available at as long as any shop is in range.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetWeatherWindDirection": {
			"class": "CDOTAGamerules",
			"function": "SetWeatherWindDirection",
			"return": "void",
			"description": "Set Weather Wind Direction Vector",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				}
			}
		},
		"SetWhiteListEnabled": {
			"class": "CDOTAGamerules",
			"function": "SetWhiteListEnabled",
			"return": "void",
			"description": "Item whitelist functionality enable/disable",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SpawnAndReleaseCreeps": {
			"class": "CDOTAGamerules",
			"function": "SpawnAndReleaseCreeps",
			"return": "void",
			"description": "Spawn and release the next creep wave from Dota lane style spawners.",
			"server": true,
			"params": {}
		},
		"SpawnNeutralCreeps": {
			"class": "CDOTAGamerules",
			"function": "SpawnNeutralCreeps",
			"return": "void",
			"description": "Spawn and release the next set of neutral camps.",
			"server": true,
			"params": {}
		},
		"State_Get": {
			"class": "CDOTAGamerules",
			"class_cl": "CDOTAGamerules",
			"function": "State_Get",
			"return": "int",
			"description": "Get the current Gamerules state",
			"server": true,
			"client": true,
			"params": {}
		},
		"extends": "",
		"variable": "Gamerules"
	},
	"CDOTAPlayer": {
		"description": "extends CBaseAnimating",
		"CheckForCourierSpawning": {
			"class": "CDOTAPlayer",
			"function": "CheckForCourierSpawning",
			"return": "void",
			"description": "Attempt to spawn the appropriate couriers for this mode.",
			"server": true,
			"params": {
				"hHero": {
					"type": "handle",
					"params_name": "hHero",
					"description": "No Description Set"
				}
			}
		},
		"GetAssignedHero": {
			"class": "CDOTAPlayer",
			"function": "GetAssignedHero",
			"return": "handle",
			"description": "Get the player`s hero.",
			"server": true,
			"params": {}
		},
		"GetPlayerID": {
			"class": "CDOTAPlayer",
			"function": "GetPlayerID",
			"return": "int",
			"description": "Get the player`s official PlayerID; notably is -1 when the player isn`t yet on a team.",
			"server": true,
			"params": {}
		},
		"MakeRandomHeroSelection": {
			"class": "CDOTAPlayer",
			"function": "MakeRandomHeroSelection",
			"return": "void",
			"description": "Randoms this player`s hero.",
			"server": true,
			"params": {}
		},
		"SetAssignedHeroEntity": {
			"class": "CDOTAPlayer",
			"function": "SetAssignedHeroEntity",
			"return": "void",
			"description": "Sets this player`s hero .",
			"server": true,
			"params": {
				"hHero": {
					"type": "handle",
					"params_name": "hHero",
					"description": "No Description Set"
				}
			}
		},
		"SetKillCamUnit": {
			"class": "CDOTAPlayer",
			"function": "SetKillCamUnit",
			"return": "void",
			"description": "Set the kill cam unit for this hero.",
			"server": true,
			"params": {
				"hEntity": {
					"type": "handle",
					"params_name": "hEntity",
					"description": "No Description Set"
				}
			}
		},
		"SetMusicStatus": {
			"class": "CDOTAPlayer",
			"function": "SetMusicStatus",
			"return": "void",
			"description": "(nMusicStatus, flIntensity) - Set the music status for this player, note this will only really apply if dota_music_battle_enable is off.",
			"server": true,
			"params": {
				"nMusicStatus": {
					"type": "int",
					"params_name": "nMusicStatus",
					"description": "No Description Set"
				},
				"flIntensity": {
					"type": "float",
					"params_name": "flIntensity",
					"description": "No Description Set"
				}
			}
		},
		"SetSelectedHero": {
			"class": "CDOTAPlayer",
			"function": "SetSelectedHero",
			"return": "void",
			"description": "Sets this player`s hero selection.",
			"server": true,
			"params": {
				"pszHeroName": {
					"type": "string",
					"params_name": "pszHeroName",
					"description": "No Description Set"
				}
			}
		},
		"SpawnCourierAtPosition": {
			"class": "CDOTAPlayer",
			"function": "SpawnCourierAtPosition",
			"return": "handle",
			"description": "Spawn a courier for this player at the given position.",
			"server": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseAnimating",
		"variable": ""
	},
	"CDOTATutorial": {
		"description": "全局访问变量：Tutorial",
		"AddBot": {
			"class": "CDOTATutorial",
			"function": "AddBot",
			"return": "bool",
			"description": "Add a computer controlled bot.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"bool_4": {
					"type": "bool",
					"params_name": "bool_4",
					"description": "No Description Set"
				}
			}
		},
		"AddQuest": {
			"class": "CDOTATutorial",
			"function": "AddQuest",
			"return": "void",
			"description": "Add a quest to the quest log",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"string_4": {
					"type": "string",
					"params_name": "string_4",
					"description": "No Description Set"
				}
			}
		},
		"AddShopWhitelistItem": {
			"class": "CDOTATutorial",
			"function": "AddShopWhitelistItem",
			"return": "void",
			"description": "Add an item to the shop whitelist.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"CompleteQuest": {
			"class": "CDOTATutorial",
			"function": "CompleteQuest",
			"return": "void",
			"description": "Complete a quest,",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"CreateLocationTask": {
			"class": "CDOTATutorial",
			"function": "CreateLocationTask",
			"return": "void",
			"description": "Add a task to move to a specific location",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				}
			}
		},
		"EnableCreepAggroViz": {
			"class": "CDOTATutorial",
			"function": "EnableCreepAggroViz",
			"return": "void",
			"description": "Alert the player when a creep becomes agro to their hero.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"EnablePlayerOffscreenTip": {
			"class": "CDOTATutorial",
			"function": "EnablePlayerOffscreenTip",
			"return": "void",
			"description": "Enable the tip to alert players how to find their hero.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"EnableTowerAggroViz": {
			"class": "CDOTATutorial",
			"function": "EnableTowerAggroViz",
			"return": "void",
			"description": "Alert the player when a tower becomes agro to their hero.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"FinishTutorial": {
			"class": "CDOTATutorial",
			"function": "FinishTutorial",
			"return": "void",
			"description": "End the tutorial.",
			"server": true,
			"params": {}
		},
		"ForceGameStart": {
			"class": "CDOTATutorial",
			"function": "ForceGameStart",
			"return": "void",
			"description": "Force the start of the game.",
			"server": true,
			"params": {}
		},
		"GetTimeFrozen": {
			"class": "CDOTATutorial",
			"function": "GetTimeFrozen",
			"return": "bool",
			"description": "Is our time frozen?",
			"server": true,
			"params": {}
		},
		"IsItemInWhiteList": {
			"class": "CDOTATutorial",
			"function": "IsItemInWhiteList",
			"return": "bool",
			"description": "Is this item currently in the white list.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"RemoveShopWhitelistItem": {
			"class": "CDOTATutorial",
			"function": "RemoveShopWhitelistItem",
			"return": "void",
			"description": "Remove an item from the shop whitelist.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SelectHero": {
			"class": "CDOTATutorial",
			"function": "SelectHero",
			"return": "void",
			"description": "Select a hero for the local player",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SelectPlayerTeam": {
			"class": "CDOTATutorial",
			"function": "SelectPlayerTeam",
			"return": "void",
			"description": "Select the team for the local player",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SetItemGuide": {
			"class": "CDOTATutorial",
			"function": "SetItemGuide",
			"return": "void",
			"description": "Set the current item guide.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SetOrModifyPlayerGold": {
			"class": "CDOTATutorial",
			"function": "SetOrModifyPlayerGold",
			"return": "void",
			"description": "Set gold amount for the tutorial player. (int) GoldAmount, (bool) true=Set, false=Modify",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"bool_2": {
					"type": "bool",
					"params_name": "bool_2",
					"description": "No Description Set"
				}
			}
		},
		"SetQuickBuy": {
			"class": "CDOTATutorial",
			"function": "SetQuickBuy",
			"return": "void",
			"description": "Set players quick buy item.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"SetShopOpen": {
			"class": "CDOTATutorial",
			"function": "SetShopOpen",
			"return": "void",
			"description": "Set the shop open or closed.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetTimeFrozen": {
			"class": "CDOTATutorial",
			"function": "SetTimeFrozen",
			"return": "void",
			"description": "Set if we should freeze time or not.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"SetTutorialConvar": {
			"class": "CDOTATutorial",
			"function": "SetTutorialConvar",
			"return": "void",
			"description": "Set a tutorial convar",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"SetTutorialUI": {
			"class": "CDOTATutorial",
			"function": "SetTutorialUI",
			"return": "void",
			"description": "Set the UI to use a reduced version to focus attention to specific elements.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetWhiteListEnabled": {
			"class": "CDOTATutorial",
			"function": "SetWhiteListEnabled",
			"return": "void",
			"description": "Set if we should whitelist shop items.",
			"server": true,
			"params": {
				"bool_1": {
					"type": "bool",
					"params_name": "bool_1",
					"description": "No Description Set"
				}
			}
		},
		"StartTutorialMode": {
			"class": "CDOTATutorial",
			"function": "StartTutorialMode",
			"return": "void",
			"description": "Initialize Tutorial Mode",
			"server": true,
			"params": {}
		},
		"UpgradePlayerAbility": {
			"class": "CDOTATutorial",
			"function": "UpgradePlayerAbility",
			"return": "void",
			"description": "Upgrade a specific ability for the local hero",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": "Tutorial"
	},
	"CDOTAVoteSystem": {
		"description": "No Description Set",
		"StartVote": {
			"class": "CDOTAVoteSystem",
			"function": "StartVote",
			"return": "void",
			"description": "Starts a vote, based upon a table of parameters",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDOTA_Ability_Animation_Attack": {
		"description": "extends CDOTABaseAbility",
		"SetPlaybackRate": {
			"class": "CDOTA_Ability_Animation_Attack",
			"function": "SetPlaybackRate",
			"return": "void",
			"description": "Override playbackrate",
			"server": true,
			"params": {
				"flRate": {
					"type": "float",
					"params_name": "flRate",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTABaseAbility",
		"variable": ""
	},
	"CDOTA_Ability_Animation_TailSpin": {
		"description": "extends CDOTABaseAbility",
		"SetPlaybackRate": {
			"class": "CDOTA_Ability_Animation_TailSpin",
			"function": "SetPlaybackRate",
			"return": "void",
			"description": "Override playbackrate",
			"server": true,
			"params": {
				"flRate": {
					"type": "float",
					"params_name": "flRate",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTABaseAbility",
		"variable": ""
	},
	"CDOTA_Ability_DataDriven": {
		"description": "extends CDOTABaseAbility",
		"ApplyDataDrivenModifier": {
			"class": "CDOTA_Ability_DataDriven",
			"function": "ApplyDataDrivenModifier",
			"return": "handle",
			"description": "Applies a data driven modifier to the target",
			"server": true,
			"params": {
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "No Description Set"
				},
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				},
				"pszModifierName": {
					"type": "string",
					"params_name": "pszModifierName",
					"description": "No Description Set"
				},
				"hModifierTable": {
					"type": "handle",
					"params_name": "hModifierTable",
					"description": "No Description Set"
				}
			}
		},
		"ApplyDataDrivenThinker": {
			"class": "CDOTA_Ability_DataDriven",
			"function": "ApplyDataDrivenThinker",
			"return": "handle",
			"description": "Applies a data driven thinker at the location",
			"server": true,
			"params": {
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "No Description Set"
				},
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				},
				"pszModifierName": {
					"type": "string",
					"params_name": "pszModifierName",
					"description": "No Description Set"
				},
				"hModifierTable": {
					"type": "handle",
					"params_name": "hModifierTable",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTABaseAbility",
		"variable": ""
	},
	"CDOTA_Ability_Lua": {
		"description": "extends CDOTABaseAbility",
		"OnProjectileHit_ExtraData": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnProjectileHit_ExtraData",
			"return": "bool",
			"description": "当投射物命中目标或者到达最远距离（此时hTarget为无效值）",
			"server": true,
			"example": "function mirana_arrow:OnProjectileHit_ExtraData(hTarget, vLocation, ExtraData)\n\tlocal hCaster = self:GetCaster()\n\tlocal tDamageTable = \n\t{\n\t\tability = self,\n\t\tattacker = hCaster,\n\t\tvictim = hTarget,\n\t\tdamage = ExtraData.flDamage\n\t\tdamage_type = self:GetAbilityDamageType()\n\t}\n\tApplyDamage(damage_table)\n\treturn true -- 返回true会销毁投射物\nend",
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "击中的目标"
				},
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "目标位置"
				},
				"table": {
					"type": "handle",
					"params_name": "ExtraData",
					"description": "额外参数"
				}
			}
		},
		"GetIntrinsicModifierName": {
			"class": "CDOTA_Ability_Lua",
			"function": "GetIntrinsicModifierName",
			"return": "string",
			"description": "返回此技能被动给予的修饰器的名称",
			"server": true,
			"example": "function phantom_assassin_blur_imba:GetIntrinsicModifierName()\n\treturn \"modifier_phantom_assassin_blur_imba\"\nend",
			"params": {}
		},
		"CastFilterResult": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "CastFilterResult",
			"return": "int",
			"description": "Determine whether an issued command with no target is valid.",
			"server": true,
			"client": true,
			"params": {}
		},
		"CastFilterResultLocation": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "CastFilterResultLocation",
			"return": "int",
			"description": "(Vector vLocation) Determine whether an issued command on a location is valid.",
			"server": true,
			"client": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"CastFilterResultTarget": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "CastFilterResultTarget",
			"return": "int",
			"description": "(HSCRIPT hTarget) Determine whether an issued command on a target is valid.",
			"server": true,
			"client": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"GetAOERadius": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetAOERadius",
			"return": "float",
			"description": "Controls the size of the AOE casting cursor.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAssociatedPrimaryAbilities": {
			"class": "CDOTA_Ability_Lua",
			"function": "GetAssociatedPrimaryAbilities",
			"return": "string",
			"description": "Returns abilities that are stolen simultaneously, or otherwise related in functionality.",
			"server": true,
			"params": {}
		},
		"GetAssociatedSecondaryAbilities": {
			"class": "CDOTA_Ability_Lua",
			"function": "GetAssociatedSecondaryAbilities",
			"return": "string",
			"description": "Returns other abilities that are stolen simultaneously, or otherwise related in functionality.  Generally hidden abilities.",
			"server": true,
			"params": {}
		},
		"GetBehavior": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetBehavior",
			"return": "uint64",
			"description": "Return cast behavior type of this ability.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCastAnimation": {
			"class": "CDOTA_Ability_Lua",
			"function": "GetCastAnimation",
			"return": "int",
			"description": "Return casting animation of this ability.",
			"server": true,
			"params": {}
		},
		"GetCastPoint": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetCastPoint",
			"return": "float",
			"description": "Return cast point of this ability.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCastRange": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetCastRange",
			"return": "int",
			"description": "Return cast range of this ability.",
			"server": true,
			"client": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				},
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"GetChannelAnimation": {
			"class": "CDOTA_Ability_Lua",
			"function": "GetChannelAnimation",
			"return": "int",
			"description": "Return channel animation of this ability.",
			"server": true,
			"params": {}
		},
		"GetChannelTime": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetChannelTime",
			"return": "float",
			"description": "Return the channel time of this ability.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetChannelledManaCostPerSecond": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetChannelledManaCostPerSecond",
			"return": "int",
			"description": "Return mana cost at the given level per second while channeling (-1 is current).",
			"server": true,
			"client": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetConceptRecipientType": {
			"class": "CDOTA_Ability_Lua",
			"function": "GetConceptRecipientType",
			"return": "int",
			"description": "Return who hears speech when this spell is cast.",
			"server": true,
			"params": {}
		},
		"GetCooldown": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetCooldown",
			"return": "float",
			"description": "Return cooldown of this ability.",
			"server": true,
			"client": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetCustomCastError": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetCustomCastError",
			"return": "string",
			"description": "Return the error string of a failed command with no target.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCustomCastErrorLocation": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetCustomCastErrorLocation",
			"return": "string",
			"description": "(Vector vLocation) Return the error string of a failed command on a location.",
			"server": true,
			"client": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"GetCustomCastErrorTarget": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetCustomCastErrorTarget",
			"return": "string",
			"description": "(HSCRIPT hTarget) Return the error string of a failed command on a target.",
			"server": true,
			"client": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldCost": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetGoldCost",
			"return": "int",
			"description": "Return gold cost at the given level (-1 is current).",
			"server": true,
			"client": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetManaCost": {
			"class": "CDOTA_Ability_Lua",
			"class_cl": "C_DOTA_Ability_Lua",
			"function": "GetManaCost",
			"return": "int",
			"description": "Return mana cost at the given level (-1 is current).",
			"server": true,
			"client": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetPlaybackRateOverride": {
			"class": "CDOTA_Ability_Lua",
			"function": "GetPlaybackRateOverride",
			"return": "float",
			"description": "Return the animation rate of the cast animation.",
			"server": true,
			"params": {}
		},
		"IsHiddenAbilityCastable": {
			"class": "CDOTA_Ability_Lua",
			"function": "IsHiddenAbilityCastable",
			"return": "bool",
			"description": "Returns true if this ability can be used when not on the action panel.",
			"server": true,
			"params": {}
		},
		"IsHiddenWhenStolen": {
			"class": "CDOTA_Ability_Lua",
			"function": "IsHiddenWhenStolen",
			"return": "bool",
			"description": "Returns true if this ability is hidden when stolen by Spell Steal.",
			"server": true,
			"params": {}
		},
		"IsRefreshable": {
			"class": "CDOTA_Ability_Lua",
			"function": "IsRefreshable",
			"return": "bool",
			"description": "Returns true if this ability is refreshed by Refresher Orb.",
			"server": true,
			"params": {}
		},
		"IsStealable": {
			"class": "CDOTA_Ability_Lua",
			"function": "IsStealable",
			"return": "bool",
			"description": "Returns true if this ability can be stolen by Spell Steal.",
			"server": true,
			"params": {}
		},
		"OnAbilityPhaseInterrupted": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnAbilityPhaseInterrupted",
			"return": "void",
			"description": "Cast time did not complete successfully.",
			"server": true,
			"params": {}
		},
		"OnAbilityPhaseStart": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnAbilityPhaseStart",
			"return": "bool",
			"description": "Cast time begins (return true for successful cast).",
			"server": true,
			"params": {}
		},
		"OnAbilityPinged": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnAbilityPinged",
			"return": "void",
			"description": "The ability was pinged (nPlayerID, bCtrlHeld).",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"bCtrlHeld": {
					"type": "bool",
					"params_name": "bCtrlHeld",
					"description": "No Description Set"
				}
			}
		},
		"OnChannelFinish": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnChannelFinish",
			"return": "void",
			"description": "(bool bInterrupted) Channel finished.",
			"server": true,
			"params": {
				"bInterrupted": {
					"type": "bool",
					"params_name": "bInterrupted",
					"description": "No Description Set"
				}
			}
		},
		"OnChannelThink": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnChannelThink",
			"return": "void",
			"description": "(float flInterval) Channeling is taking place.",
			"server": true,
			"params": {
				"flInterval": {
					"type": "float",
					"params_name": "flInterval",
					"description": "No Description Set"
				}
			}
		},
		"OnHeroCalculateStatBonus": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnHeroCalculateStatBonus",
			"return": "void",
			"description": "Caster (hero only) gained a level, skilled an ability, or received a new stat bonus.",
			"server": true,
			"params": {}
		},
		"OnHeroDiedNearby": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnHeroDiedNearby",
			"return": "void",
			"description": "A hero has died in the vicinity (ie Urn), takes table of params.",
			"server": true,
			"params": {
				"unit": {
					"type": "handle",
					"params_name": "unit",
					"description": "No Description Set"
				},
				"attacker": {
					"type": "handle",
					"params_name": "attacker",
					"description": "No Description Set"
				},
				"table": {
					"type": "handle",
					"params_name": "table",
					"description": "No Description Set"
				}
			}
		},
		"OnHeroLevelUp": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnHeroLevelUp",
			"return": "void",
			"description": "Caster gained a level.",
			"server": true,
			"params": {}
		},
		"OnInventoryContentsChanged": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnInventoryContentsChanged",
			"return": "void",
			"description": "当技能拥有者物品栏中的物品发生变化时触发。物品移动物品栏位置或移动到储藏处时会触发一次，丢下和拾取物品时会额外触发一次。",
			"server": true,
			"params": {}
		},
		"OnItemEquipped": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnItemEquipped",
			"return": "void",
			"description": "当技能拥有者装备一件物品时触发",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "物品"
				}
			}
		},
		"OnOwnerDied": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnOwnerDied",
			"return": "void",
			"description": "Caster died.",
			"server": true,
			"params": {}
		},
		"OnOwnerSpawned": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnOwnerSpawned",
			"return": "void",
			"description": "Caster respawned or spawned for the first time.",
			"server": true,
			"params": {}
		},
		"OnProjectileHit": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnProjectileHit",
			"return": "bool",
			"description": "(HSCRIPT hTarget, Vector vLocation) Projectile has collided with a given target or reached its destination (target is invalid).",
			"server": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				},
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"OnProjectileHitHandle": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnProjectileHitHandle",
			"return": "bool",
			"description": "(HSCRIPT hTarget, Vector vLocation, int nHandle) Projectile has collided with a given target or reached its destination (target is invalid).",
			"server": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				},
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				},
				"iProjectileHandle": {
					"type": "int",
					"params_name": "iProjectileHandle",
					"description": "No Description Set"
				}
			}
		},
		"OnProjectileThink": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnProjectileThink",
			"return": "void",
			"description": "(Vector vLocation) Projectile is actively moving.",
			"server": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"OnProjectileThinkHandle": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnProjectileThinkHandle",
			"return": "void",
			"description": "(int nProjectileHandle) Projectile is actively moving.",
			"server": true,
			"params": {
				"iProjectileHandle": {
					"type": "int",
					"params_name": "iProjectileHandle",
					"description": "No Description Set"
				}
			}
		},
		"OnProjectileThink_ExtraData": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnProjectileThink_ExtraData",
			"return": "void",
			"description": "(Vector vLocation, table kv ) Projectile is actively moving.",
			"server": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				},
				"table": {
					"type": "handle",
					"params_name": "table",
					"description": "No Description Set"
				}
			}
		},
		"OnSpellStart": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnSpellStart",
			"return": "void",
			"description": "Cast time finished, spell effects begin.",
			"server": true,
			"params": {}
		},
		"OnStolen": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnStolen",
			"return": "void",
			"description": "( HSCRIPT hAbility ) Special behavior when stolen by Spell Steal.",
			"server": true,
			"params": {
				"hSourceAbility": {
					"type": "handle",
					"params_name": "hSourceAbility",
					"description": "No Description Set"
				}
			}
		},
		"OnToggle": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnToggle",
			"return": "void",
			"description": "Ability is toggled on/off.",
			"server": true,
			"params": {}
		},
		"OnUnStolen": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnUnStolen",
			"return": "void",
			"description": "Special behavior when lost by Spell Steal.",
			"server": true,
			"params": {}
		},
		"OnUpgrade": {
			"class": "CDOTA_Ability_Lua",
			"function": "OnUpgrade",
			"return": "void",
			"description": "Ability gained a level.",
			"server": true,
			"params": {}
		},
		"ProcsMagicStick": {
			"class": "CDOTA_Ability_Lua",
			"function": "ProcsMagicStick",
			"return": "bool",
			"description": "Returns true if this ability will generate magic stick charges for nearby enemies.",
			"server": true,
			"params": {}
		},
		"RequiresFacing": {
			"class": "CDOTA_Ability_Lua",
			"function": "RequiresFacing",
			"return": "bool",
			"description": "Does this ability need the caster to face the target before executing?",
			"server": true,
			"params": {}
		},
		"ResetToggleOnRespawn": {
			"class": "CDOTA_Ability_Lua",
			"function": "ResetToggleOnRespawn",
			"return": "bool",
			"description": "Returns true if this ability should return to the default toggle state when its parent respawns.",
			"server": true,
			"params": {}
		},
		"SpeakTrigger": {
			"class": "CDOTA_Ability_Lua",
			"function": "SpeakTrigger",
			"return": "int",
			"description": "Return the type of speech used.",
			"server": true,
			"params": {}
		},
		"extends": "CDOTABaseAbility",
		"variable": ""
	},
	"CDOTA_Ability_Nian_Dive": {
		"description": "extends CDOTABaseAbility",
		"SetPlaybackRate": {
			"class": "CDOTA_Ability_Nian_Dive",
			"function": "SetPlaybackRate",
			"return": "void",
			"description": "Override playbackrate",
			"server": true,
			"params": {
				"flRate": {
					"type": "float",
					"params_name": "flRate",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTABaseAbility",
		"variable": ""
	},
	"CDOTA_Ability_Nian_Leap": {
		"description": "extends CDOTABaseAbility",
		"SetPlaybackRate": {
			"class": "CDOTA_Ability_Nian_Leap",
			"function": "SetPlaybackRate",
			"return": "void",
			"description": "Override playbackrate",
			"server": true,
			"params": {
				"flRate": {
					"type": "float",
					"params_name": "flRate",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTABaseAbility",
		"variable": ""
	},
	"CDOTA_Ability_Nian_Roar": {
		"description": "extends CDOTABaseAbility",
		"GetCastCount": {
			"class": "CDOTA_Ability_Nian_Roar",
			"function": "GetCastCount",
			"return": "int",
			"description": "Number of times Nian has used the roar",
			"server": true,
			"params": {}
		},
		"extends": "CDOTABaseAbility",
		"variable": ""
	},
	"CDOTA_BaseNPC": {
		"description": "extends CBaseFlex",
		"AddNewModifier": {
			"class": "CDOTA_BaseNPC",
			"function": "AddNewModifier",
			"return": "handle",
			"description": "给一个单位添加modifier，hModifierTable可以传入持续时间和其他自定义参数，自定义参数可以在modifier的server端获得。",
			"server": true,
			"example": "hCaster:AddNewModifier(hCaster, hAbility, \"modifier_test_buff\", {duration = 6, a = 3})\nfunction modifier_test_buff:OnCreated(params)\n\tif IsServer() then\n\t\tlocal a = params.a\n\tend\nend",
			"params": {
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "来源单位"
				},
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "来源技能"
				},
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "modifier名字"
				},
				"hModifierTable": {
					"type": "handle",
					"params_name": "hModifierTable",
					"description": "modifier参数表"
				}
			}
		},
		"FindAbilityByName": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "FindAbilityByName",
			"return": "handle",
			"description": "从单位身上寻找技能",
			"server": true,
			"client": true,
			"example": "undefined",
			"params": {
				"pAbilityName": {
					"type": "string",
					"params_name": "sAbilityName",
					"description": "技能名"
				}
			}
		},
		"SetControllableByPlayer": {
			"class": "CDOTA_BaseNPC",
			"function": "SetControllableByPlayer",
			"return": "void",
			"description": "设置玩家可以控制该单位，由于同队伍的碰撞检测较近，bSkipAdjustingPosition为true时，单位可能会被卡住。",
			"server": true,
			"example": "undefined",
			"params": {
				"iIndex": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "玩家ID"
				},
				"bSkipAdjustingPosition": {
					"type": "bool",
					"params_name": "bSkipAdjustingPosition",
					"description": "是否跳过调整位置"
				}
			}
		},
		"SetCustomHealthLabel": {
			"class": "CDOTA_BaseNPC",
			"function": "SetCustomHealthLabel",
			"return": "void",
			"description": "在单位血条上显示指定的文字（支持本地化），可设置文字颜色。",
			"server": true,
			"params": {
				"pLabel": {
					"type": "string",
					"params_name": "pLabel",
					"description": "No Description Set"
				},
				"r": {
					"type": "int",
					"params_name": "r",
					"description": "No Description Set"
				},
				"g": {
					"type": "int",
					"params_name": "g",
					"description": "No Description Set"
				},
				"b": {
					"type": "int",
					"params_name": "b",
					"description": "No Description Set"
				}
			}
		},
		"SetAttackCapability": {
			"class": "CDOTA_BaseNPC",
			"function": "SetAttackCapability",
			"return": "void",
			"description": "设置攻击类型0无攻击1近战2远程",
			"server": true,
			"example": "undefined",
			"params": {
				"iAttackCapabilities": {
					"type": "int",
					"params_name": "iAttackCapabilities",
					"description": "No Description Set"
				}
			}
		},
		"PassivesDisabled": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "PassivesDisabled",
			"return": "bool",
			"description": "判断单位是否被禁用被动",
			"server": true,
			"client": true,
			"example": "self:GetCaster():PassivesDisabled()",
			"params": {}
		},
		"HasScepter": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "HasScepter",
			"return": "bool",
			"description": "判断单位是否拥有阿哈利姆神杖升级效果",
			"server": true,
			"client": true,
			"example": "function test_ability:OnSpellStart()\n\tlocal bHasScepter = self:GetCaster():HasScepter()\nend",
			"params": {}
		},
		"GetOpposingTeamNumber": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetOpposingTeamNumber",
			"return": "int",
			"description": "获取敌方的队伍编号",
			"server": true,
			"client": true,
			"example": "local hParent = self:GetParent()\nIsLocationVisible(hParent:GetOpposingTeamNumber(), hParent:GetAbsOrigin())",
			"params": {}
		},
		"GetHealthDeficit": {
			"class": "CDOTA_BaseNPC",
			"function": "GetHealthDeficit",
			"return": "int",
			"description": "返回单位已损失生命值。",
			"server": true,
			"example": "hParent:GetHealthDeficit()",
			"params": {}
		},
		"AddAbility": {
			"class": "CDOTA_BaseNPC",
			"function": "AddAbility",
			"return": "handle",
			"description": "给单位添加技能",
			"server": true,
			"params": {
				"pszAbilityName": {
					"type": "string",
					"params_name": "sAbilityName",
					"description": "技能名"
				}
			}
		},
		"AddActivityModifier": {
			"class": "CDOTA_BaseNPC",
			"function": "AddActivityModifier",
			"return": "void",
			"description": "添加一个activity modifier，该activity modifier会影响以后的StartGesture的调用。该值可以在模型编辑器中模型动作的Activities查看。",
			"server": true,
			"example": "-- 剑圣没有走路动作就需要添加\"run\"\nhUnit:AddActivityModifier(\"run\")",
			"params": {
				"szName": {
					"type": "string",
					"params_name": "sName",
					"description": "activity modifier"
				}
			}
		},
		"AddItem": {
			"class": "CDOTA_BaseNPC",
			"function": "AddItem",
			"return": "handle",
			"description": "给单位添加一个物品",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "物品实体"
				}
			}
		},
		"AddItemByName": {
			"class": "CDOTA_BaseNPC",
			"function": "AddItemByName",
			"return": "handle",
			"description": "给单位添加一个物品，直接传入物品名字即可，返回创建的物品实体。",
			"server": true,
			"example": "local hItem = hUnit:AddItemByName(\"item_blink\")",
			"params": {
				"pszItemName": {
					"type": "string",
					"params_name": "sItemName",
					"description": "物品名字"
				}
			}
		},
		"AddNoDraw": {
			"class": "CDOTA_BaseNPC",
			"function": "AddNoDraw",
			"return": "void",
			"description": "添加不渲染的标记，使该单位不显示。比如黑鸟的关。",
			"server": true,
			"params": {}
		},
		"AddSpeechBubble": {
			"class": "CDOTA_BaseNPC",
			"function": "AddSpeechBubble",
			"return": "void",
			"description": "Add a speech bubble(1-4 live at a time) to this NPC.",
			"server": true,
			"params": {
				"iBubble": {
					"type": "int",
					"params_name": "iBubble",
					"description": "No Description Set"
				},
				"pszSpeech": {
					"type": "string",
					"params_name": "pszSpeech",
					"description": "No Description Set"
				},
				"flDuration": {
					"type": "float",
					"params_name": "flDuration",
					"description": "No Description Set"
				},
				"unOffsetX": {
					"type": "unsigned",
					"params_name": "unOffsetX",
					"description": "No Description Set"
				},
				"unOffsetY": {
					"type": "unsigned",
					"params_name": "unOffsetY",
					"description": "No Description Set"
				}
			}
		},
		"AlertNearbyUnits": {
			"class": "CDOTA_BaseNPC",
			"function": "AlertNearbyUnits",
			"return": "void",
			"server": true,
			"params": {
				"hAttacker": {
					"type": "handle",
					"params_name": "hAttacker",
					"description": "No Description Set"
				},
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				}
			}
		},
		"AngerNearbyUnits": {
			"class": "CDOTA_BaseNPC",
			"function": "AngerNearbyUnits",
			"return": "void",
			"server": true,
			"params": {}
		},
		"AttackNoEarlierThan": {
			"class": "CDOTA_BaseNPC",
			"function": "AttackNoEarlierThan",
			"return": "void",
			"server": true,
			"params": {
				"flTime": {
					"type": "float",
					"params_name": "flTime",
					"description": "No Description Set"
				}
			}
		},
		"AttackReady": {
			"class": "CDOTA_BaseNPC",
			"function": "AttackReady",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"BoundingRadius2D": {
			"class": "CDOTA_BaseNPC",
			"function": "BoundingRadius2D",
			"return": "float",
			"server": true,
			"params": {}
		},
		"CalculateGenericBonuses": {
			"class": "CDOTA_BaseNPC",
			"function": "CalculateGenericBonuses",
			"return": "void",
			"server": true,
			"params": {}
		},
		"CanEntityBeSeenByMyTeam": {
			"class": "CDOTA_BaseNPC",
			"function": "CanEntityBeSeenByMyTeam",
			"return": "bool",
			"description": "Check FoW to see if an entity is visible.",
			"server": true,
			"params": {
				"hEntity": {
					"type": "handle",
					"params_name": "hEntity",
					"description": "No Description Set"
				}
			}
		},
		"CanSellItems": {
			"class": "CDOTA_BaseNPC",
			"function": "CanSellItems",
			"return": "bool",
			"description": "Query if this unit can sell items.",
			"server": true,
			"params": {}
		},
		"CastAbilityImmediately": {
			"class": "CDOTA_BaseNPC",
			"function": "CastAbilityImmediately",
			"return": "void",
			"description": "Cast an ability immediately.",
			"server": true,
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				},
				"iPlayerIndex": {
					"type": "int",
					"params_name": "iPlayerIndex",
					"description": "No Description Set"
				}
			}
		},
		"CastAbilityNoTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "CastAbilityNoTarget",
			"return": "void",
			"description": "Cast an ability with no target.",
			"server": true,
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				},
				"iPlayerIndex": {
					"type": "int",
					"params_name": "iPlayerIndex",
					"description": "No Description Set"
				}
			}
		},
		"CastAbilityOnPosition": {
			"class": "CDOTA_BaseNPC",
			"function": "CastAbilityOnPosition",
			"return": "void",
			"description": "Cast an ability on a position.",
			"server": true,
			"params": {
				"vPosition": {
					"type": "Vector",
					"params_name": "vPosition",
					"description": "No Description Set"
				},
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				},
				"iPlayerIndex": {
					"type": "int",
					"params_name": "iPlayerIndex",
					"description": "No Description Set"
				}
			}
		},
		"CastAbilityOnTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "CastAbilityOnTarget",
			"return": "void",
			"description": "Cast an ability on a target entity.",
			"server": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				},
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				},
				"iPlayerIndex": {
					"type": "int",
					"params_name": "iPlayerIndex",
					"description": "No Description Set"
				}
			}
		},
		"CastAbilityToggle": {
			"class": "CDOTA_BaseNPC",
			"function": "CastAbilityToggle",
			"return": "void",
			"description": "Toggle an ability.",
			"server": true,
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				},
				"iPlayerIndex": {
					"type": "int",
					"params_name": "iPlayerIndex",
					"description": "No Description Set"
				}
			}
		},
		"ChangeTeam": {
			"class": "CDOTA_BaseNPC",
			"function": "ChangeTeam",
			"return": "void",
			"server": true,
			"params": {
				"iTeamNum": {
					"type": "int",
					"params_name": "iTeamNum",
					"description": "No Description Set"
				}
			}
		},
		"ClearActivityModifiers": {
			"class": "CDOTA_BaseNPC",
			"function": "ClearActivityModifiers",
			"return": "void",
			"description": "Clear Activity modifiers",
			"server": true,
			"params": {}
		},
		"DestroyAllSpeechBubbles": {
			"class": "CDOTA_BaseNPC",
			"function": "DestroyAllSpeechBubbles",
			"return": "void",
			"server": true,
			"params": {}
		},
		"DisassembleItem": {
			"class": "CDOTA_BaseNPC",
			"function": "DisassembleItem",
			"return": "void",
			"description": "Disassemble the passed item in this unit`s inventory.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"DropItemAtPosition": {
			"class": "CDOTA_BaseNPC",
			"function": "DropItemAtPosition",
			"return": "void",
			"description": "Drop an item at a given point.",
			"server": true,
			"params": {
				"vDest": {
					"type": "Vector",
					"params_name": "vDest",
					"description": "No Description Set"
				},
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"DropItemAtPositionImmediate": {
			"class": "CDOTA_BaseNPC",
			"function": "DropItemAtPositionImmediate",
			"return": "void",
			"description": "Immediately drop a carried item at a given position.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				},
				"vPosition": {
					"type": "Vector",
					"params_name": "vPosition",
					"description": "No Description Set"
				}
			}
		},
		"EjectItemFromStash": {
			"class": "CDOTA_BaseNPC",
			"function": "EjectItemFromStash",
			"return": "void",
			"description": "Drops the selected item out of this unit`s stash.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"FaceTowards": {
			"class": "CDOTA_BaseNPC",
			"function": "FaceTowards",
			"return": "void",
			"description": "This unit will be set to face the target point.",
			"server": true,
			"params": {
				"vTarget": {
					"type": "Vector",
					"params_name": "vTarget",
					"description": "No Description Set"
				}
			}
		},
		"FadeGesture": {
			"class": "CDOTA_BaseNPC",
			"function": "FadeGesture",
			"return": "void",
			"description": "Fade and remove the given gesture activity.",
			"server": true,
			"params": {
				"nActivity": {
					"type": "int",
					"params_name": "nActivity",
					"description": "No Description Set"
				}
			}
		},
		"FindAllModifiers": {
			"class": "CDOTA_BaseNPC",
			"function": "FindAllModifiers",
			"return": "table",
			"description": "Returns a table of all of the modifiers on the NPC.",
			"server": true,
			"params": {}
		},
		"FindAllModifiersByName": {
			"class": "CDOTA_BaseNPC",
			"function": "FindAllModifiersByName",
			"return": "table",
			"description": "Returns a table of all of the modifiers on the NPC with the passed name (modifierName)",
			"server": true,
			"params": {
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "No Description Set"
				}
			}
		},
		"FindItemInInventory": {
			"class": "CDOTA_BaseNPC",
			"function": "FindItemInInventory",
			"return": "handle",
			"description": "Get handle to first item in inventory, else nil.",
			"server": true,
			"params": {
				"pszItemName": {
					"type": "string",
					"params_name": "pszItemName",
					"description": "No Description Set"
				}
			}
		},
		"FindModifierByName": {
			"class": "CDOTA_BaseNPC",
			"function": "FindModifierByName",
			"return": "handle",
			"description": "Return a handle to the modifier of the given name if found, else nil (string Name )",
			"server": true,
			"params": {
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "No Description Set"
				}
			}
		},
		"FindModifierByNameAndCaster": {
			"class": "CDOTA_BaseNPC",
			"function": "FindModifierByNameAndCaster",
			"return": "handle",
			"description": "Return a handle to the modifier of the given name from the passed caster if found, else nil ( string Name, hCaster )",
			"server": true,
			"params": {
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "No Description Set"
				},
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "No Description Set"
				}
			}
		},
		"ForceKill": {
			"class": "CDOTA_BaseNPC",
			"function": "ForceKill",
			"return": "void",
			"description": "Kill this unit immediately.",
			"server": true,
			"params": {
				"bReincarnate": {
					"type": "bool",
					"params_name": "bReincarnate",
					"description": "No Description Set"
				}
			}
		},
		"ForcePlayActivityOnce": {
			"class": "CDOTA_BaseNPC",
			"function": "ForcePlayActivityOnce",
			"return": "void",
			"description": "Play an activity once, and then go back to idle.",
			"server": true,
			"params": {
				"nActivity": {
					"type": "int",
					"params_name": "nActivity",
					"description": "No Description Set"
				}
			}
		},
		"GetAbilityByIndex": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAbilityByIndex",
			"return": "handle",
			"description": "通过技能索引值获取该单位身上的技能。",
			"server": true,
			"params": {
				"iIndex": {
					"type": "int",
					"params_name": "iIndex",
					"description": "索引"
				}
			}
		},
		"GetAbilityCount": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetAbilityCount",
			"return": "int",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAcquisitionRange": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAcquisitionRange",
			"return": "float",
			"description": "Gets the range at which this unit will auto-acquire.",
			"server": true,
			"params": {}
		},
		"GetAdditionalBattleMusicWeight": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAdditionalBattleMusicWeight",
			"return": "float",
			"description": "Combat involving this creature will have this weight added to the music calcuations.",
			"server": true,
			"params": {}
		},
		"GetAggroTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAggroTarget",
			"return": "handle",
			"description": "Returns this unit`s aggro target.",
			"server": true,
			"params": {}
		},
		"GetAttackAnimationPoint": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAttackAnimationPoint",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetAttackCapability": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAttackCapability",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetAttackDamage": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAttackDamage",
			"return": "int",
			"description": "返回介于单位的最小和最大基础伤害之间的随机整数。",
			"server": true,
			"params": {}
		},
		"GetAttackRangeBuffer": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAttackRangeBuffer",
			"return": "float",
			"description": "Gets the attack range buffer.",
			"server": true,
			"params": {}
		},
		"GetAttackSpeed": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetAttackSpeed",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAttackTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAttackTarget",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"GetAttacksPerSecond": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetAttacksPerSecond",
			"return": "float",
			"description": "获取每秒攻击次数",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAverageTrueAttackDamage": {
			"class": "CDOTA_BaseNPC",
			"function": "GetAverageTrueAttackDamage",
			"return": "int",
			"description": "返回攻击力的平均值（包括绿字）。",
			"server": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"GetBaseAttackRange": {
			"class": "CDOTA_BaseNPC",
			"function": "GetBaseAttackRange",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetBaseAttackTime": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetBaseAttackTime",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetBaseDamageMax": {
			"class": "CDOTA_BaseNPC",
			"function": "GetBaseDamageMax",
			"return": "int",
			"description": "获取基础最大攻击力。",
			"server": true,
			"params": {}
		},
		"GetBaseDamageMin": {
			"class": "CDOTA_BaseNPC",
			"function": "GetBaseDamageMin",
			"return": "int",
			"description": "获取基础最小攻击力。",
			"server": true,
			"params": {}
		},
		"GetBaseDayTimeVisionRange": {
			"class": "CDOTA_BaseNPC",
			"function": "GetBaseDayTimeVisionRange",
			"return": "int",
			"description": "Returns the vision range before modifiers.",
			"server": true,
			"params": {}
		},
		"GetBaseHealthRegen": {
			"class": "CDOTA_BaseNPC",
			"function": "GetBaseHealthRegen",
			"return": "float",
			"description": "获取基础生命回复。",
			"server": true,
			"params": {}
		},
		"GetBaseMagicalResistanceValue": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetBaseMagicalResistanceValue",
			"return": "float",
			"description": "获取基础魔抗。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetBaseMaxHealth": {
			"class": "CDOTA_BaseNPC",
			"function": "GetBaseMaxHealth",
			"return": "float",
			"description": "Gets the base max health value.",
			"server": true,
			"params": {}
		},
		"GetBaseMoveSpeed": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetBaseMoveSpeed",
			"return": "float",
			"description": "获取基础移动速度。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetBaseNightTimeVisionRange": {
			"class": "CDOTA_BaseNPC",
			"function": "GetBaseNightTimeVisionRange",
			"return": "int",
			"description": "Returns the vision range after modifiers.",
			"server": true,
			"params": {}
		},
		"GetBonusManaRegen": {
			"class": "CDOTA_BaseNPC",
			"function": "GetBonusManaRegen",
			"return": "float",
			"description": "This Mana regen is derived from constant bonuses like Basilius.",
			"server": true,
			"params": {}
		},
		"GetCastPoint": {
			"class": "CDOTA_BaseNPC",
			"function": "GetCastPoint",
			"return": "float",
			"server": true,
			"params": {
				"bAttack": {
					"type": "bool",
					"params_name": "bAttack",
					"description": "No Description Set"
				}
			}
		},
		"GetCastRangeBonus": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetCastRangeBonus",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCloneSource": {
			"class": "CDOTA_BaseNPC",
			"function": "GetCloneSource",
			"return": "handle",
			"description": "Get clone source (Meepo Prime, if this is a Meepo)",
			"server": true,
			"params": {}
		},
		"GetCollisionPadding": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetCollisionPadding",
			"return": "float",
			"description": "Returns the size of the collision padding around the hull.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCooldownReduction": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetCooldownReduction",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCreationTime": {
			"class": "CDOTA_BaseNPC",
			"function": "GetCreationTime",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetCurrentActiveAbility": {
			"class": "CDOTA_BaseNPC",
			"function": "GetCurrentActiveAbility",
			"return": "handle",
			"description": "Get the ability this unit is currently casting.",
			"server": true,
			"params": {}
		},
		"GetCurrentVisionRange": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetCurrentVisionRange",
			"return": "int",
			"description": "Gets the current vision range.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCursorCastTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "GetCursorCastTarget",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"GetCursorPosition": {
			"class": "CDOTA_BaseNPC",
			"function": "GetCursorPosition",
			"return": "Vector",
			"server": true,
			"params": {}
		},
		"GetCursorTargetingNothing": {
			"class": "CDOTA_BaseNPC",
			"function": "GetCursorTargetingNothing",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"GetDamageMax": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetDamageMax",
			"return": "int",
			"description": "Get the maximum attack damage of this unit.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetDamageMin": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetDamageMin",
			"return": "int",
			"description": "Get the minimum attack damage of this unit.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetDayTimeVisionRange": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetDayTimeVisionRange",
			"return": "int",
			"description": "Returns the vision range after modifiers.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetDeathXP": {
			"class": "CDOTA_BaseNPC",
			"function": "GetDeathXP",
			"return": "int",
			"description": "Get the XP bounty on this unit.",
			"server": true,
			"params": {}
		},
		"GetDisplayAttackSpeed": {
			"class": "CDOTA_BaseNPC",
			"function": "GetDisplayAttackSpeed",
			"return": "float",
			"description": "Attack speed expressed as constant value",
			"server": true,
			"params": {}
		},
		"GetEvasion": {
			"class": "CDOTA_BaseNPC",
			"function": "GetEvasion",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetForceAttackTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "GetForceAttackTarget",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"GetGoldBounty": {
			"class": "CDOTA_BaseNPC",
			"function": "GetGoldBounty",
			"return": "int",
			"description": "Get the gold bounty on this unit.",
			"server": true,
			"params": {}
		},
		"GetHasteFactor": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetHasteFactor",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetHealthPercent": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetHealthPercent",
			"return": "int",
			"description": "Get the current health percent of the unit.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetHealthRegen": {
			"class": "CDOTA_BaseNPC",
			"function": "GetHealthRegen",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetHullRadius": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetHullRadius",
			"return": "float",
			"description": "Get the collision hull radius of this NPC.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetIdealSpeed": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetIdealSpeed",
			"return": "float",
			"description": "Returns speed after all modifiers.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetIdealSpeedNoSlows": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetIdealSpeedNoSlows",
			"return": "float",
			"description": "Returns speed after all modifiers, but excluding those that reduce speed.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetIncreasedAttackSpeed": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetIncreasedAttackSpeed",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetInitialGoalEntity": {
			"class": "CDOTA_BaseNPC",
			"function": "GetInitialGoalEntity",
			"return": "handle",
			"description": "Returns the initial waypoint goal for this NPC.",
			"server": true,
			"params": {}
		},
		"GetInitialGoalPosition": {
			"class": "CDOTA_BaseNPC",
			"function": "GetInitialGoalPosition",
			"return": "Vector",
			"description": "Get waypoint position for this NPC.",
			"server": true,
			"params": {}
		},
		"GetItemInSlot": {
			"class": "CDOTA_BaseNPC",
			"function": "GetItemInSlot",
			"return": "handle",
			"description": "Returns nth item in inventory slot (index is zero based).",
			"server": true,
			"params": {
				"i": {
					"type": "int",
					"params_name": "i",
					"description": "No Description Set"
				}
			}
		},
		"GetLastAttackTime": {
			"class": "CDOTA_BaseNPC",
			"function": "GetLastAttackTime",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetLastDamageTime": {
			"class": "CDOTA_BaseNPC",
			"function": "GetLastDamageTime",
			"return": "float",
			"description": "Get the last time this NPC took damage",
			"server": true,
			"params": {}
		},
		"GetLastIdleChangeTime": {
			"class": "CDOTA_BaseNPC",
			"function": "GetLastIdleChangeTime",
			"return": "float",
			"description": "Get the last game time that this unit switched to/from idle state.",
			"server": true,
			"params": {}
		},
		"GetLevel": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetLevel",
			"return": "int",
			"description": "Returns the level of this unit.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetMagicalArmorValue": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetMagicalArmorValue",
			"return": "float",
			"description": "Returns current magical armor value.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetMainControllingPlayer": {
			"class": "CDOTA_BaseNPC",
			"function": "GetMainControllingPlayer",
			"return": "int",
			"description": "Returns the player ID of the controlling player.",
			"server": true,
			"params": {}
		},
		"GetMana": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetMana",
			"return": "float",
			"description": "Get the mana on this unit.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetManaPercent": {
			"class": "CDOTA_BaseNPC",
			"function": "GetManaPercent",
			"return": "int",
			"description": "Get the percent of mana remaining.",
			"server": true,
			"params": {}
		},
		"GetManaRegen": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetManaRegen",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetMaxMana": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetMaxMana",
			"return": "float",
			"description": "Get the maximum mana of this unit.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetMaximumGoldBounty": {
			"class": "CDOTA_BaseNPC",
			"function": "GetMaximumGoldBounty",
			"return": "int",
			"description": "Get the maximum gold bounty for this unit.",
			"server": true,
			"params": {}
		},
		"GetMinimumGoldBounty": {
			"class": "CDOTA_BaseNPC",
			"function": "GetMinimumGoldBounty",
			"return": "int",
			"description": "Get the minimum gold bounty for this unit.",
			"server": true,
			"params": {}
		},
		"GetModelRadius": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetModelRadius",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetModifierCount": {
			"class": "CDOTA_BaseNPC",
			"function": "GetModifierCount",
			"return": "int",
			"description": "How many modifiers does this unit have?",
			"server": true,
			"params": {}
		},
		"GetModifierNameByIndex": {
			"class": "CDOTA_BaseNPC",
			"function": "GetModifierNameByIndex",
			"return": "string",
			"description": "Get a modifier name by index.",
			"server": true,
			"params": {
				"nIndex": {
					"type": "int",
					"params_name": "nIndex",
					"description": "No Description Set"
				}
			}
		},
		"GetModifierStackCount": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetModifierStackCount",
			"return": "int",
			"description": "Gets the stack count of a given modifier.",
			"server": true,
			"client": true,
			"params": {
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "No Description Set"
				},
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "No Description Set"
				}
			}
		},
		"GetMoveSpeedModifier": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetMoveSpeedModifier",
			"return": "float",
			"server": true,
			"client": true,
			"params": {
				"flBaseSpeed": {
					"type": "float",
					"params_name": "flBaseSpeed",
					"description": "No Description Set"
				},
				"bReturnUnslowed": {
					"type": "bool",
					"params_name": "bReturnUnslowed",
					"description": "No Description Set"
				}
			}
		},
		"GetMustReachEachGoalEntity": {
			"class": "CDOTA_BaseNPC",
			"function": "GetMustReachEachGoalEntity",
			"return": "bool",
			"description": "Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.",
			"server": true,
			"params": {}
		},
		"GetNeutralSpawnerName": {
			"class": "CDOTA_BaseNPC",
			"function": "GetNeutralSpawnerName",
			"return": "string",
			"description": "Get the name of this camp`s neutral spawner.",
			"server": true,
			"params": {}
		},
		"GetNeverMoveToClearSpace": {
			"class": "CDOTA_BaseNPC",
			"function": "GetNeverMoveToClearSpace",
			"return": "bool",
			"description": "If set to true, we will never attempt to move this unit to clear space, even when it unphases.",
			"server": true,
			"params": {}
		},
		"GetNightTimeVisionRange": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetNightTimeVisionRange",
			"return": "int",
			"description": "Returns the vision range after modifiers.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetPaddedCollisionRadius": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetPaddedCollisionRadius",
			"return": "float",
			"description": "Get the collision hull radius (including padding) of this NPC.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetPhysicalArmorBaseValue": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetPhysicalArmorBaseValue",
			"return": "float",
			"description": "Returns base physical armor value.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetPhysicalArmorValue": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetPhysicalArmorValue",
			"return": "float",
			"description": "Returns current physical armor value.",
			"server": true,
			"client": true,
			"params": {
				"bIgnoreBase": {
					"type": "bool",
					"params_name": "bIgnoreBase",
					"description": "No Description Set"
				}
			}
		},
		"GetPlayerOwner": {
			"class": "CDOTA_BaseNPC",
			"function": "GetPlayerOwner",
			"return": "handle",
			"description": "Returns the player that owns this unit.",
			"server": true,
			"params": {}
		},
		"GetPlayerOwnerID": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetPlayerOwnerID",
			"return": "int",
			"description": "Get the owner player ID for this unit.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetProjectileSpeed": {
			"class": "CDOTA_BaseNPC",
			"function": "GetProjectileSpeed",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetRangeToUnit": {
			"class": "CDOTA_BaseNPC",
			"function": "GetRangeToUnit",
			"return": "float",
			"server": true,
			"params": {
				"hNPC": {
					"type": "handle",
					"params_name": "hNPC",
					"description": "No Description Set"
				}
			}
		},
		"GetRangedProjectileName": {
			"class": "CDOTA_BaseNPC",
			"function": "GetRangedProjectileName",
			"return": "string",
			"server": true,
			"params": {}
		},
		"GetSecondsPerAttack": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetSecondsPerAttack",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetSpellAmplification": {
			"class": "CDOTA_BaseNPC",
			"function": "GetSpellAmplification",
			"return": "float",
			"server": true,
			"params": {
				"bBaseOnly": {
					"type": "bool",
					"params_name": "bBaseOnly",
					"description": "No Description Set"
				}
			}
		},
		"GetStatusResistance": {
			"class": "CDOTA_BaseNPC",
			"function": "GetStatusResistance",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetTotalPurchasedUpgradeGoldCost": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetTotalPurchasedUpgradeGoldCost",
			"return": "int",
			"description": "Get how much gold has been spent on ability upgrades.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetUnitLabel": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetUnitLabel",
			"return": "string",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetUnitName": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "GetUnitName",
			"return": "string",
			"description": "Get the name of this unit.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GiveMana": {
			"class": "CDOTA_BaseNPC",
			"function": "GiveMana",
			"return": "void",
			"description": "Give mana to this unit, this can be used for mana gained by abilities or item usage.",
			"server": true,
			"params": {
				"flMana": {
					"type": "float",
					"params_name": "flMana",
					"description": "No Description Set"
				}
			}
		},
		"HasAbility": {
			"class": "CDOTA_BaseNPC",
			"function": "HasAbility",
			"return": "bool",
			"description": "See whether this unit has an ability by name.",
			"server": true,
			"params": {
				"pszAbilityName": {
					"type": "string",
					"params_name": "pszAbilityName",
					"description": "No Description Set"
				}
			}
		},
		"HasAnyActiveAbilities": {
			"class": "CDOTA_BaseNPC",
			"function": "HasAnyActiveAbilities",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"HasAttackCapability": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "HasAttackCapability",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"HasFlyMovementCapability": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "HasFlyMovementCapability",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"HasFlyingVision": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "HasFlyingVision",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"HasGroundMovementCapability": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "HasGroundMovementCapability",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"HasInventory": {
			"class": "CDOTA_BaseNPC",
			"function": "HasInventory",
			"return": "bool",
			"description": "Does this unit have an inventory.",
			"server": true,
			"params": {}
		},
		"HasItemInInventory": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "HasItemInInventory",
			"return": "bool",
			"description": "See whether this unit has an item by name.",
			"server": true,
			"client": true,
			"params": {
				"pItemName": {
					"type": "string",
					"params_name": "pItemName",
					"description": "No Description Set"
				}
			}
		},
		"HasModifier": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "HasModifier",
			"return": "bool",
			"description": "Sees if this unit has a given modifier.",
			"server": true,
			"client": true,
			"params": {
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "No Description Set"
				}
			}
		},
		"HasMovementCapability": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "HasMovementCapability",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"Heal": {
			"class": "CDOTA_BaseNPC",
			"function": "Heal",
			"return": "void",
			"description": "Heal this unit.",
			"server": true,
			"params": {
				"flAmount": {
					"type": "float",
					"params_name": "flAmount",
					"description": "No Description Set"
				},
				"hInflictor": {
					"type": "handle",
					"params_name": "hInflictor",
					"description": "No Description Set"
				}
			}
		},
		"Hold": {
			"class": "CDOTA_BaseNPC",
			"function": "Hold",
			"return": "void",
			"description": "Hold position.",
			"server": true,
			"params": {}
		},
		"Interrupt": {
			"class": "CDOTA_BaseNPC",
			"function": "Interrupt",
			"return": "void",
			"server": true,
			"params": {}
		},
		"InterruptChannel": {
			"class": "CDOTA_BaseNPC",
			"function": "InterruptChannel",
			"return": "void",
			"server": true,
			"params": {}
		},
		"InterruptMotionControllers": {
			"class": "CDOTA_BaseNPC",
			"function": "InterruptMotionControllers",
			"return": "void",
			"server": true,
			"params": {
				"bFindClearSpace": {
					"type": "bool",
					"params_name": "bFindClearSpace",
					"description": "No Description Set"
				}
			}
		},
		"IsAlive": {
			"class": "CDOTA_BaseNPC",
			"function": "IsAlive",
			"return": "bool",
			"description": "Is this unit alive?",
			"server": true,
			"params": {}
		},
		"IsAncient": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsAncient",
			"return": "bool",
			"description": "Is this unit an Ancient?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsAttackImmune": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsAttackImmune",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsAttacking": {
			"class": "CDOTA_BaseNPC",
			"function": "IsAttacking",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsAttackingEntity": {
			"class": "CDOTA_BaseNPC",
			"function": "IsAttackingEntity",
			"return": "bool",
			"server": true,
			"params": {
				"hEntity": {
					"type": "handle",
					"params_name": "hEntity",
					"description": "No Description Set"
				}
			}
		},
		"IsBarracks": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsBarracks",
			"return": "bool",
			"description": "Is this unit a Barracks?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsBlind": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsBlind",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsBlockDisabled": {
			"class": "CDOTA_BaseNPC",
			"function": "IsBlockDisabled",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsBoss": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsBoss",
			"return": "bool",
			"description": "Is this unit a boss?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsBuilding": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsBuilding",
			"return": "bool",
			"description": "Is this unit a building?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsChanneling": {
			"class": "CDOTA_BaseNPC",
			"function": "IsChanneling",
			"return": "bool",
			"description": "Is this unit currently channeling a spell?",
			"server": true,
			"params": {}
		},
		"IsClone": {
			"class": "CDOTA_BaseNPC",
			"function": "IsClone",
			"return": "bool",
			"description": "Is this unit a clone? (Meepo)",
			"server": true,
			"params": {}
		},
		"IsCommandRestricted": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsCommandRestricted",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsConsideredHero": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsConsideredHero",
			"return": "bool",
			"description": "Is this unit a considered a hero for targeting purposes?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsControllableByAnyPlayer": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsControllableByAnyPlayer",
			"return": "bool",
			"description": "Is this unit controlled by any non-bot player?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsCourier": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsCourier",
			"return": "bool",
			"description": "Is this unit a courier?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsCreature": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsCreature",
			"return": "bool",
			"description": "Is this a Creature type NPC?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsCreep": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsCreep",
			"return": "bool",
			"description": "Is this unit a creep?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsCreepHero": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsCreepHero",
			"return": "bool",
			"description": "Is this unit a creep hero?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsCurrentlyHorizontalMotionControlled": {
			"class": "CDOTA_BaseNPC",
			"function": "IsCurrentlyHorizontalMotionControlled",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsCurrentlyVerticalMotionControlled": {
			"class": "CDOTA_BaseNPC",
			"function": "IsCurrentlyVerticalMotionControlled",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsDisarmed": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsDisarmed",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsDominated": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsDominated",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsEvadeDisabled": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsEvadeDisabled",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsFort": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsFort",
			"return": "bool",
			"description": "Is this unit an Ancient?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsFrozen": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsFrozen",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsHero": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsHero",
			"return": "bool",
			"description": "Is this a hero or hero illusion?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsHexed": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsHexed",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsIdle": {
			"class": "CDOTA_BaseNPC",
			"function": "IsIdle",
			"return": "bool",
			"description": "Is this creature currently idle?",
			"server": true,
			"params": {}
		},
		"IsIllusion": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsIllusion",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsInRangeOfShop": {
			"class": "CDOTA_BaseNPC",
			"function": "IsInRangeOfShop",
			"return": "bool",
			"description": "Ask whether this unit is in range of the specified shop ( DOTA_SHOP_TYPE shop, bool bMustBePhysicallyNear",
			"server": true,
			"params": {
				"nShopType": {
					"type": "int",
					"params_name": "nShopType",
					"description": "No Description Set"
				},
				"bPhysical": {
					"type": "bool",
					"params_name": "bPhysical",
					"description": "No Description Set"
				}
			}
		},
		"IsInvisible": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsInvisible",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsInvulnerable": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsInvulnerable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsLowAttackPriority": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsLowAttackPriority",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsMagicImmune": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsMagicImmune",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsMovementImpaired": {
			"class": "CDOTA_BaseNPC",
			"function": "IsMovementImpaired",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsMoving": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsMoving",
			"return": "bool",
			"description": "Is this unit moving?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsMuted": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsMuted",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsNeutralUnitType": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsNeutralUnitType",
			"return": "bool",
			"description": "Is this a neutral?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsNightmared": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsNightmared",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsOpposingTeam": {
			"class": "CDOTA_BaseNPC",
			"function": "IsOpposingTeam",
			"return": "bool",
			"server": true,
			"params": {
				"nTeam": {
					"type": "int",
					"params_name": "nTeam",
					"description": "No Description Set"
				}
			}
		},
		"IsOther": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsOther",
			"return": "bool",
			"description": "Is this unit a ward-type unit?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsOutOfGame": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsOutOfGame",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsOwnedByAnyPlayer": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsOwnedByAnyPlayer",
			"return": "bool",
			"description": "Is this unit owned by any non-bot player?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsPhantom": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsPhantom",
			"return": "bool",
			"description": "Is this a phantom unit?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsPhantomBlocker": {
			"class": "CDOTA_BaseNPC",
			"function": "IsPhantomBlocker",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsPhased": {
			"class": "CDOTA_BaseNPC",
			"function": "IsPhased",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsPositionInRange": {
			"class": "CDOTA_BaseNPC",
			"function": "IsPositionInRange",
			"return": "bool",
			"server": true,
			"params": {
				"vPosition": {
					"type": "Vector",
					"params_name": "vPosition",
					"description": "No Description Set"
				},
				"flRange": {
					"type": "float",
					"params_name": "flRange",
					"description": "No Description Set"
				}
			}
		},
		"IsRangedAttacker": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsRangedAttacker",
			"return": "bool",
			"description": "Is this unit a ranged attacker?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsRealHero": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsRealHero",
			"return": "bool",
			"description": "Is this a real hero?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsReincarnating": {
			"class": "CDOTA_BaseNPC",
			"function": "IsReincarnating",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsRooted": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsRooted",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsShrine": {
			"class": "CDOTA_BaseNPC",
			"function": "IsShrine",
			"return": "bool",
			"description": "Is this a shrine?",
			"server": true,
			"params": {}
		},
		"IsSilenced": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsSilenced",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsSpeciallyDeniable": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsSpeciallyDeniable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsSpeciallyUndeniable": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsSpeciallyUndeniable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsStunned": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsStunned",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsSummoned": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsSummoned",
			"return": "bool",
			"description": "Is this unit summoned?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsTempestDouble": {
			"class": "CDOTA_BaseNPC",
			"function": "IsTempestDouble",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsTower": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsTower",
			"return": "bool",
			"description": "Is this a tower?",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsUnableToMiss": {
			"class": "CDOTA_BaseNPC",
			"function": "IsUnableToMiss",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsUnselectable": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsUnselectable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsUntargetable": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "IsUntargetable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"Kill": {
			"class": "CDOTA_BaseNPC",
			"function": "Kill",
			"return": "void",
			"description": "Kills this NPC, with the params Ability and Attacker.",
			"server": true,
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				},
				"hAttacker": {
					"type": "handle",
					"params_name": "hAttacker",
					"description": "No Description Set"
				}
			}
		},
		"MakeIllusion": {
			"class": "CDOTA_BaseNPC",
			"function": "MakeIllusion",
			"return": "void",
			"server": true,
			"params": {}
		},
		"MakePhantomBlocker": {
			"class": "CDOTA_BaseNPC",
			"function": "MakePhantomBlocker",
			"return": "void",
			"server": true,
			"params": {}
		},
		"MakeVisibleDueToAttack": {
			"class": "CDOTA_BaseNPC",
			"function": "MakeVisibleDueToAttack",
			"return": "void",
			"server": true,
			"params": {
				"iTeam": {
					"type": "int",
					"params_name": "iTeam",
					"description": "No Description Set"
				},
				"flRadius": {
					"type": "float",
					"params_name": "flRadius",
					"description": "No Description Set"
				}
			}
		},
		"MakeVisibleToTeam": {
			"class": "CDOTA_BaseNPC",
			"function": "MakeVisibleToTeam",
			"return": "void",
			"server": true,
			"params": {
				"iTeam": {
					"type": "int",
					"params_name": "iTeam",
					"description": "No Description Set"
				},
				"flDuration": {
					"type": "float",
					"params_name": "flDuration",
					"description": "No Description Set"
				}
			}
		},
		"ManageModelChanges": {
			"class": "CDOTA_BaseNPC",
			"function": "ManageModelChanges",
			"return": "void",
			"server": true,
			"params": {}
		},
		"ModifyHealth": {
			"class": "CDOTA_BaseNPC",
			"function": "ModifyHealth",
			"return": "void",
			"description": "Sets the health to a specific value, with optional flags or inflictors.",
			"server": true,
			"params": {
				"iDesiredHealthValue": {
					"type": "int",
					"params_name": "iDesiredHealthValue",
					"description": "No Description Set"
				},
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				},
				"bLethal": {
					"type": "bool",
					"params_name": "bLethal",
					"description": "No Description Set"
				},
				"iAdditionalFlags": {
					"type": "int",
					"params_name": "iAdditionalFlags",
					"description": "No Description Set"
				}
			}
		},
		"MoveToNPC": {
			"class": "CDOTA_BaseNPC",
			"function": "MoveToNPC",
			"return": "void",
			"description": "Move to follow a unit.",
			"server": true,
			"params": {
				"hNPC": {
					"type": "handle",
					"params_name": "hNPC",
					"description": "No Description Set"
				}
			}
		},
		"MoveToNPCToGiveItem": {
			"class": "CDOTA_BaseNPC",
			"function": "MoveToNPCToGiveItem",
			"return": "void",
			"description": "Give an item to another unit.",
			"server": true,
			"params": {
				"hNPC": {
					"type": "handle",
					"params_name": "hNPC",
					"description": "No Description Set"
				},
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"MoveToPosition": {
			"class": "CDOTA_BaseNPC",
			"function": "MoveToPosition",
			"return": "void",
			"description": "Issue a Move-To command.",
			"server": true,
			"params": {
				"vDest": {
					"type": "Vector",
					"params_name": "vDest",
					"description": "No Description Set"
				}
			}
		},
		"MoveToPositionAggressive": {
			"class": "CDOTA_BaseNPC",
			"function": "MoveToPositionAggressive",
			"return": "void",
			"description": "Issue an Attack-Move-To command.",
			"server": true,
			"params": {
				"vDest": {
					"type": "Vector",
					"params_name": "vDest",
					"description": "No Description Set"
				}
			}
		},
		"MoveToTargetToAttack": {
			"class": "CDOTA_BaseNPC",
			"function": "MoveToTargetToAttack",
			"return": "void",
			"description": "Move to a target to attack.",
			"server": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"NoHealthBar": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "NoHealthBar",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"NoTeamMoveTo": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "NoTeamMoveTo",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"NoTeamSelect": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "NoTeamSelect",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"NoUnitCollision": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "NoUnitCollision",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"NotOnMinimap": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "NotOnMinimap",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"NotOnMinimapForEnemies": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "NotOnMinimapForEnemies",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"NotifyWearablesOfModelChange": {
			"class": "CDOTA_BaseNPC",
			"function": "NotifyWearablesOfModelChange",
			"return": "void",
			"server": true,
			"params": {
				"bOriginalModel": {
					"type": "bool",
					"params_name": "bOriginalModel",
					"description": "No Description Set"
				}
			}
		},
		"PatrolToPosition": {
			"class": "CDOTA_BaseNPC",
			"function": "PatrolToPosition",
			"return": "void",
			"description": "Issue a Patrol-To command.",
			"server": true,
			"params": {
				"vDest": {
					"type": "Vector",
					"params_name": "vDest",
					"description": "No Description Set"
				}
			}
		},
		"PerformAttack": {
			"class": "CDOTA_BaseNPC",
			"function": "PerformAttack",
			"return": "void",
			"description": "Performs an attack on a target.",
			"server": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				},
				"bUseCastAttackOrb": {
					"type": "bool",
					"params_name": "bUseCastAttackOrb",
					"description": "No Description Set"
				},
				"bProcessProcs": {
					"type": "bool",
					"params_name": "bProcessProcs",
					"description": "No Description Set"
				},
				"bSkipCooldown": {
					"type": "bool",
					"params_name": "bSkipCooldown",
					"description": "No Description Set"
				},
				"bIgnoreInvis": {
					"type": "bool",
					"params_name": "bIgnoreInvis",
					"description": "No Description Set"
				},
				"bUseProjectile": {
					"type": "bool",
					"params_name": "bUseProjectile",
					"description": "No Description Set"
				},
				"bFakeAttack": {
					"type": "bool",
					"params_name": "bFakeAttack",
					"description": "No Description Set"
				},
				"bNeverMiss": {
					"type": "bool",
					"params_name": "bNeverMiss",
					"description": "No Description Set"
				}
			}
		},
		"PickupDroppedItem": {
			"class": "CDOTA_BaseNPC",
			"function": "PickupDroppedItem",
			"return": "void",
			"description": "Pick up a dropped item.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"PickupRune": {
			"class": "CDOTA_BaseNPC",
			"function": "PickupRune",
			"return": "void",
			"description": "Pick up a rune.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"PlayVCD": {
			"class": "CDOTA_BaseNPC",
			"function": "PlayVCD",
			"return": "void",
			"description": "Play a VCD on the NPC.",
			"server": true,
			"params": {
				"pVCD": {
					"type": "string",
					"params_name": "pVCD",
					"description": "No Description Set"
				}
			}
		},
		"ProvidesVision": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "ProvidesVision",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"Purge": {
			"class": "CDOTA_BaseNPC",
			"function": "Purge",
			"return": "void",
			"description": "(bool RemovePositiveBuffs, bool RemoveDebuffs, bool BuffsCreatedThisFrameOnly, bool RemoveStuns, bool RemoveExceptions)",
			"server": true,
			"params": {
				"bRemovePositiveBuffs": {
					"type": "bool",
					"params_name": "bRemovePositiveBuffs",
					"description": "No Description Set"
				},
				"bRemoveDebuffs": {
					"type": "bool",
					"params_name": "bRemoveDebuffs",
					"description": "No Description Set"
				},
				"bFrameOnly": {
					"type": "bool",
					"params_name": "bFrameOnly",
					"description": "No Description Set"
				},
				"bRemoveStuns": {
					"type": "bool",
					"params_name": "bRemoveStuns",
					"description": "No Description Set"
				},
				"bRemoveExceptions": {
					"type": "bool",
					"params_name": "bRemoveExceptions",
					"description": "No Description Set"
				}
			}
		},
		"QueueConcept": {
			"class": "CDOTA_BaseNPC",
			"function": "QueueConcept",
			"return": "void",
			"description": "Queue a response system concept with the TLK_DOTA_CUSTOM concept, after a delay.",
			"server": true,
			"params": {
				"flDelay": {
					"type": "float",
					"params_name": "flDelay",
					"description": "No Description Set"
				},
				"hCriteriaTable": {
					"type": "handle",
					"params_name": "hCriteriaTable",
					"description": "No Description Set"
				},
				"hCompletionCallbackFn": {
					"type": "handle",
					"params_name": "hCompletionCallbackFn",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				},
				"hCallbackInfo": {
					"type": "handle",
					"params_name": "hCallbackInfo",
					"description": "No Description Set"
				}
			}
		},
		"QueueTeamConcept": {
			"class": "CDOTA_BaseNPC",
			"function": "QueueTeamConcept",
			"return": "void",
			"description": "Queue a response system concept with the TLK_DOTA_CUSTOM concept, after a delay, for the same team this speaker is on.",
			"server": true,
			"params": {
				"flDelay": {
					"type": "float",
					"params_name": "flDelay",
					"description": "No Description Set"
				},
				"hCriteriaTable": {
					"type": "handle",
					"params_name": "hCriteriaTable",
					"description": "No Description Set"
				},
				"hCompletionCallbackFn": {
					"type": "handle",
					"params_name": "hCompletionCallbackFn",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				},
				"hCallbackInfo": {
					"type": "handle",
					"params_name": "hCallbackInfo",
					"description": "No Description Set"
				}
			}
		},
		"QueueTeamConceptNoSpectators": {
			"class": "CDOTA_BaseNPC",
			"function": "QueueTeamConceptNoSpectators",
			"return": "void",
			"description": "Queue a response system concept with the TLK_DOTA_CUSTOM concept, after a delay, for the same team this speaker is on. Is not played for spectators.",
			"server": true,
			"params": {
				"flDelay": {
					"type": "float",
					"params_name": "flDelay",
					"description": "No Description Set"
				},
				"hCriteriaTable": {
					"type": "handle",
					"params_name": "hCriteriaTable",
					"description": "No Description Set"
				},
				"hCompletionCallbackFn": {
					"type": "handle",
					"params_name": "hCompletionCallbackFn",
					"description": "No Description Set"
				},
				"hContext": {
					"type": "handle",
					"params_name": "hContext",
					"description": "No Description Set"
				},
				"hCallbackInfo": {
					"type": "handle",
					"params_name": "hCallbackInfo",
					"description": "No Description Set"
				}
			}
		},
		"ReduceMana": {
			"class": "CDOTA_BaseNPC",
			"function": "ReduceMana",
			"return": "void",
			"description": "Remove mana from this unit, this can be used for involuntary mana loss, not for mana that is spent.",
			"server": true,
			"params": {
				"flAmount": {
					"type": "float",
					"params_name": "flAmount",
					"description": "No Description Set"
				}
			}
		},
		"RemoveAbility": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveAbility",
			"return": "void",
			"description": "Remove an ability from this unit by name.",
			"server": true,
			"params": {
				"pszAbilityName": {
					"type": "string",
					"params_name": "pszAbilityName",
					"description": "No Description Set"
				}
			}
		},
		"RemoveAbilityByHandle": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveAbilityByHandle",
			"return": "void",
			"description": "通过指定技能实体删除单位身上的技能。需要注意技能的被动modifier不会自动销毁，需要手动删除。",
			"server": true,
			"example": "local tModifiers = hCaster:FindAllModifiers()\nfor _, hModifier in ipairs(tModifiers) do\n\tif hModifier:GetAbility() == hAbility then\n\t\thModifier:Destroy()\n\tend\nend\nhCaster:RemoveAbilityByHandle(hAbility)",
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "技能实体"
				}
			}
		},
		"RemoveAbilityFromIndexByName": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveAbilityFromIndexByName",
			"return": "void",
			"server": true,
			"params": {
				"pszAbilityName": {
					"type": "string",
					"params_name": "pszAbilityName",
					"description": "No Description Set"
				}
			}
		},
		"RemoveAllModifiers": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveAllModifiers",
			"return": "void",
			"description": "(int targets [0=all, 1=enemy, 2=ally], bool bNow, bool bPermanent, bool bDeath)",
			"server": true,
			"params": {
				"targets": {
					"type": "int",
					"params_name": "targets",
					"description": "No Description Set"
				},
				"bNow": {
					"type": "bool",
					"params_name": "bNow",
					"description": "No Description Set"
				},
				"bPermanent": {
					"type": "bool",
					"params_name": "bPermanent",
					"description": "No Description Set"
				},
				"bDeath": {
					"type": "bool",
					"params_name": "bDeath",
					"description": "No Description Set"
				}
			}
		},
		"RemoveGesture": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveGesture",
			"return": "void",
			"description": "Remove the given gesture activity.",
			"server": true,
			"params": {
				"nActivity": {
					"type": "int",
					"params_name": "nActivity",
					"description": "No Description Set"
				}
			}
		},
		"RemoveHorizontalMotionController": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveHorizontalMotionController",
			"return": "void",
			"server": true,
			"params": {
				"hBuff": {
					"type": "handle",
					"params_name": "hBuff",
					"description": "No Description Set"
				}
			}
		},
		"RemoveItem": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveItem",
			"return": "void",
			"description": "Removes the passed item from this unit`s inventory and deletes it.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"RemoveModifierByName": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveModifierByName",
			"return": "void",
			"description": "Removes a modifier.",
			"server": true,
			"params": {
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "No Description Set"
				}
			}
		},
		"RemoveModifierByNameAndCaster": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveModifierByNameAndCaster",
			"return": "void",
			"description": "Removes a modifier that was cast by the given caster.",
			"server": true,
			"params": {
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "No Description Set"
				},
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "No Description Set"
				}
			}
		},
		"RemoveNoDraw": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveNoDraw",
			"return": "void",
			"description": "Remove the no draw flag.",
			"server": true,
			"params": {}
		},
		"RemoveVerticalMotionController": {
			"class": "CDOTA_BaseNPC",
			"function": "RemoveVerticalMotionController",
			"return": "void",
			"server": true,
			"params": {
				"hBuff": {
					"type": "handle",
					"params_name": "hBuff",
					"description": "No Description Set"
				}
			}
		},
		"RespawnUnit": {
			"class": "CDOTA_BaseNPC",
			"function": "RespawnUnit",
			"return": "void",
			"description": "Respawns the target unit if it can be respawned.",
			"server": true,
			"params": {}
		},
		"Script_GetAttackRange": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "Script_GetAttackRange",
			"return": "float",
			"description": "Gets this unit`s attack range after all modifiers.",
			"server": true,
			"client": true,
			"params": {}
		},
		"Script_IsDeniable": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "Script_IsDeniable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"SellItem": {
			"class": "CDOTA_BaseNPC",
			"function": "SellItem",
			"return": "void",
			"description": "Sells the passed item in this unit`s inventory.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"SetAbilityByIndex": {
			"class": "CDOTA_BaseNPC",
			"function": "SetAbilityByIndex",
			"return": "void",
			"description": "Set the ability by index.",
			"server": true,
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				},
				"iIndex": {
					"type": "int",
					"params_name": "iIndex",
					"description": "No Description Set"
				}
			}
		},
		"SetAcquisitionRange": {
			"class": "CDOTA_BaseNPC",
			"function": "SetAcquisitionRange",
			"return": "void",
			"server": true,
			"params": {
				"nRange": {
					"type": "int",
					"params_name": "nRange",
					"description": "No Description Set"
				}
			}
		},
		"SetAdditionalBattleMusicWeight": {
			"class": "CDOTA_BaseNPC",
			"function": "SetAdditionalBattleMusicWeight",
			"return": "void",
			"description": "Combat involving this creature will have this weight added to the music calcuations.",
			"server": true,
			"params": {
				"flWeight": {
					"type": "float",
					"params_name": "flWeight",
					"description": "No Description Set"
				}
			}
		},
		"SetAggroTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "SetAggroTarget",
			"return": "void",
			"description": "Set this unit`s aggro target to a specified unit.",
			"server": true,
			"params": {
				"hAggroTarget": {
					"type": "handle",
					"params_name": "hAggroTarget",
					"description": "No Description Set"
				}
			}
		},
		"SetAttacking": {
			"class": "CDOTA_BaseNPC",
			"function": "SetAttacking",
			"return": "void",
			"server": true,
			"params": {
				"hAttackTarget": {
					"type": "handle",
					"params_name": "hAttackTarget",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseAttackTime": {
			"class": "CDOTA_BaseNPC",
			"function": "SetBaseAttackTime",
			"return": "void",
			"server": true,
			"params": {
				"flBaseAttackTime": {
					"type": "float",
					"params_name": "flBaseAttackTime",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseDamageMax": {
			"class": "CDOTA_BaseNPC",
			"function": "SetBaseDamageMax",
			"return": "void",
			"description": "Sets the maximum base damage.",
			"server": true,
			"params": {
				"nMax": {
					"type": "int",
					"params_name": "nMax",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseDamageMin": {
			"class": "CDOTA_BaseNPC",
			"function": "SetBaseDamageMin",
			"return": "void",
			"description": "Sets the minimum base damage.",
			"server": true,
			"params": {
				"nMin": {
					"type": "int",
					"params_name": "nMin",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseHealthRegen": {
			"class": "CDOTA_BaseNPC",
			"function": "SetBaseHealthRegen",
			"return": "void",
			"server": true,
			"params": {
				"flHealthRegen": {
					"type": "float",
					"params_name": "flHealthRegen",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseMagicalResistanceValue": {
			"class": "CDOTA_BaseNPC",
			"function": "SetBaseMagicalResistanceValue",
			"return": "void",
			"description": "Sets base magical armor value.",
			"server": true,
			"params": {
				"flMagicalResistanceValue": {
					"type": "float",
					"params_name": "flMagicalResistanceValue",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseManaRegen": {
			"class": "CDOTA_BaseNPC",
			"function": "SetBaseManaRegen",
			"return": "void",
			"server": true,
			"params": {
				"flManaRegen": {
					"type": "float",
					"params_name": "flManaRegen",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseMaxHealth": {
			"class": "CDOTA_BaseNPC",
			"function": "SetBaseMaxHealth",
			"return": "void",
			"description": "Set a new base max health value.",
			"server": true,
			"params": {
				"flBaseMaxHealth": {
					"type": "float",
					"params_name": "flBaseMaxHealth",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseMoveSpeed": {
			"class": "CDOTA_BaseNPC",
			"function": "SetBaseMoveSpeed",
			"return": "void",
			"server": true,
			"params": {
				"iMoveSpeed": {
					"type": "int",
					"params_name": "iMoveSpeed",
					"description": "No Description Set"
				}
			}
		},
		"SetCanSellItems": {
			"class": "CDOTA_BaseNPC",
			"function": "SetCanSellItems",
			"return": "void",
			"description": "Set whether or not this unit is allowed to sell items (bCanSellItems)",
			"server": true,
			"params": {
				"bCanSell": {
					"type": "bool",
					"params_name": "bCanSell",
					"description": "No Description Set"
				}
			}
		},
		"SetCursorCastTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "SetCursorCastTarget",
			"return": "void",
			"server": true,
			"params": {
				"hEntity": {
					"type": "handle",
					"params_name": "hEntity",
					"description": "No Description Set"
				}
			}
		},
		"SetCursorPosition": {
			"class": "CDOTA_BaseNPC",
			"function": "SetCursorPosition",
			"return": "void",
			"server": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"SetCursorTargetingNothing": {
			"class": "CDOTA_BaseNPC",
			"function": "SetCursorTargetingNothing",
			"return": "void",
			"server": true,
			"params": {
				"bTargetingNothing": {
					"type": "bool",
					"params_name": "bTargetingNothing",
					"description": "No Description Set"
				}
			}
		},
		"SetDayTimeVisionRange": {
			"class": "CDOTA_BaseNPC",
			"function": "SetDayTimeVisionRange",
			"return": "void",
			"description": "Set the base vision range.",
			"server": true,
			"params": {
				"iRange": {
					"type": "int",
					"params_name": "iRange",
					"description": "No Description Set"
				}
			}
		},
		"SetDeathXP": {
			"class": "CDOTA_BaseNPC",
			"function": "SetDeathXP",
			"return": "void",
			"description": "Set the XP bounty on this unit.",
			"server": true,
			"params": {
				"iXPBounty": {
					"type": "int",
					"params_name": "iXPBounty",
					"description": "No Description Set"
				}
			}
		},
		"SetForceAttackTarget": {
			"class": "CDOTA_BaseNPC",
			"function": "SetForceAttackTarget",
			"return": "void",
			"server": true,
			"params": {
				"hNPC": {
					"type": "handle",
					"params_name": "hNPC",
					"description": "No Description Set"
				}
			}
		},
		"SetForceAttackTargetAlly": {
			"class": "CDOTA_BaseNPC",
			"function": "SetForceAttackTargetAlly",
			"return": "void",
			"server": true,
			"params": {
				"hNPC": {
					"type": "handle",
					"params_name": "hNPC",
					"description": "No Description Set"
				}
			}
		},
		"SetHasInventory": {
			"class": "CDOTA_BaseNPC",
			"function": "SetHasInventory",
			"return": "void",
			"description": "Set if this unit has an inventory.",
			"server": true,
			"params": {
				"bHasInventory": {
					"type": "bool",
					"params_name": "bHasInventory",
					"description": "No Description Set"
				}
			}
		},
		"SetHullRadius": {
			"class": "CDOTA_BaseNPC",
			"function": "SetHullRadius",
			"return": "void",
			"description": "Set the collision hull radius of this NPC.",
			"server": true,
			"params": {
				"flHullRadius": {
					"type": "float",
					"params_name": "flHullRadius",
					"description": "No Description Set"
				}
			}
		},
		"SetIdleAcquire": {
			"class": "CDOTA_BaseNPC",
			"function": "SetIdleAcquire",
			"return": "void",
			"server": true,
			"params": {
				"bIdleAcquire": {
					"type": "bool",
					"params_name": "bIdleAcquire",
					"description": "No Description Set"
				}
			}
		},
		"SetInitialGoalEntity": {
			"class": "CDOTA_BaseNPC",
			"function": "SetInitialGoalEntity",
			"return": "void",
			"description": "Sets the initial waypoint goal for this NPC.",
			"server": true,
			"params": {
				"hGoal": {
					"type": "handle",
					"params_name": "hGoal",
					"description": "No Description Set"
				}
			}
		},
		"SetInitialGoalPosition": {
			"class": "CDOTA_BaseNPC",
			"function": "SetInitialGoalPosition",
			"return": "void",
			"description": "Set waypoint position for this NPC.",
			"server": true,
			"params": {
				"vPosition": {
					"type": "Vector",
					"params_name": "vPosition",
					"description": "No Description Set"
				}
			}
		},
		"SetMana": {
			"class": "CDOTA_BaseNPC",
			"function": "SetMana",
			"return": "void",
			"description": "Set the mana on this unit.",
			"server": true,
			"params": {
				"flMana": {
					"type": "float",
					"params_name": "flMana",
					"description": "No Description Set"
				}
			}
		},
		"SetMaxMana": {
			"class": "CDOTA_BaseNPC",
			"function": "SetMaxMana",
			"return": "void",
			"description": "Set the maximum mana of this unit.",
			"server": true,
			"params": {
				"flMaxMana": {
					"type": "float",
					"params_name": "flMaxMana",
					"description": "No Description Set"
				}
			}
		},
		"SetMaximumGoldBounty": {
			"class": "CDOTA_BaseNPC",
			"function": "SetMaximumGoldBounty",
			"return": "void",
			"description": "Set the maximum gold bounty for this unit.",
			"server": true,
			"params": {
				"iGoldBountyMax": {
					"type": "int",
					"params_name": "iGoldBountyMax",
					"description": "No Description Set"
				}
			}
		},
		"SetMinimumGoldBounty": {
			"class": "CDOTA_BaseNPC",
			"function": "SetMinimumGoldBounty",
			"return": "void",
			"description": "Set the minimum gold bounty for this unit.",
			"server": true,
			"params": {
				"iGoldBountyMin": {
					"type": "int",
					"params_name": "iGoldBountyMin",
					"description": "No Description Set"
				}
			}
		},
		"SetModifierStackCount": {
			"class": "CDOTA_BaseNPC",
			"function": "SetModifierStackCount",
			"return": "void",
			"description": "Sets the stack count of a given modifier.",
			"server": true,
			"params": {
				"pszScriptName": {
					"type": "string",
					"params_name": "pszScriptName",
					"description": "No Description Set"
				},
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "No Description Set"
				},
				"nStackCount": {
					"type": "int",
					"params_name": "nStackCount",
					"description": "No Description Set"
				}
			}
		},
		"SetMoveCapability": {
			"class": "CDOTA_BaseNPC",
			"function": "SetMoveCapability",
			"return": "void",
			"server": true,
			"params": {
				"iMoveCapabilities": {
					"type": "int",
					"params_name": "iMoveCapabilities",
					"description": "No Description Set"
				}
			}
		},
		"SetMustReachEachGoalEntity": {
			"class": "CDOTA_BaseNPC",
			"function": "SetMustReachEachGoalEntity",
			"return": "void",
			"description": "Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.",
			"server": true,
			"params": {
				"must": {
					"type": "bool",
					"params_name": "must",
					"description": "No Description Set"
				}
			}
		},
		"SetNeverMoveToClearSpace": {
			"class": "CDOTA_BaseNPC",
			"function": "SetNeverMoveToClearSpace",
			"return": "void",
			"description": "If set to true, we will never attempt to move this unit to clear space, even when it unphases.",
			"server": true,
			"params": {
				"neverMoveToClearSpace": {
					"type": "bool",
					"params_name": "neverMoveToClearSpace",
					"description": "No Description Set"
				}
			}
		},
		"SetNightTimeVisionRange": {
			"class": "CDOTA_BaseNPC",
			"function": "SetNightTimeVisionRange",
			"return": "void",
			"description": "Returns the vision range after modifiers.",
			"server": true,
			"params": {
				"iRange": {
					"type": "int",
					"params_name": "iRange",
					"description": "No Description Set"
				}
			}
		},
		"SetOrigin": {
			"class": "CDOTA_BaseNPC",
			"function": "SetOrigin",
			"return": "void",
			"description": "Set the unit`s origin.",
			"server": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"SetOriginalModel": {
			"class": "CDOTA_BaseNPC",
			"function": "SetOriginalModel",
			"return": "void",
			"description": "Sets the original model of this entity, which it will tend to fall back to anytime its state changes.",
			"server": true,
			"params": {
				"pszModelName": {
					"type": "string",
					"params_name": "pszModelName",
					"description": "No Description Set"
				}
			}
		},
		"SetPhysicalArmorBaseValue": {
			"class": "CDOTA_BaseNPC",
			"function": "SetPhysicalArmorBaseValue",
			"return": "void",
			"description": "Sets base physical armor value.",
			"server": true,
			"params": {
				"flPhysicalArmorValue": {
					"type": "float",
					"params_name": "flPhysicalArmorValue",
					"description": "No Description Set"
				}
			}
		},
		"SetRangedProjectileName": {
			"class": "CDOTA_BaseNPC",
			"function": "SetRangedProjectileName",
			"return": "void",
			"server": true,
			"params": {
				"pProjectileName": {
					"type": "string",
					"params_name": "pProjectileName",
					"description": "No Description Set"
				}
			}
		},
		"SetRevealRadius": {
			"class": "CDOTA_BaseNPC",
			"function": "SetRevealRadius",
			"return": "void",
			"description": "sets the client side map reveal radius for this unit",
			"server": true,
			"params": {
				"revealRadius": {
					"type": "float",
					"params_name": "revealRadius",
					"description": "No Description Set"
				}
			}
		},
		"SetShouldDoFlyHeightVisual": {
			"class": "CDOTA_BaseNPC",
			"function": "SetShouldDoFlyHeightVisual",
			"return": "void",
			"server": true,
			"params": {
				"bShouldVisuallyFly": {
					"type": "bool",
					"params_name": "bShouldVisuallyFly",
					"description": "No Description Set"
				}
			}
		},
		"SetStolenScepter": {
			"class": "CDOTA_BaseNPC",
			"function": "SetStolenScepter",
			"return": "void",
			"server": true,
			"params": {
				"bStolenScepter": {
					"type": "bool",
					"params_name": "bStolenScepter",
					"description": "No Description Set"
				}
			}
		},
		"SetUnitCanRespawn": {
			"class": "CDOTA_BaseNPC",
			"function": "SetUnitCanRespawn",
			"return": "void",
			"server": true,
			"params": {
				"bCanRespawn": {
					"type": "bool",
					"params_name": "bCanRespawn",
					"description": "No Description Set"
				}
			}
		},
		"SetUnitName": {
			"class": "CDOTA_BaseNPC",
			"function": "SetUnitName",
			"return": "void",
			"server": true,
			"params": {
				"pName": {
					"type": "string",
					"params_name": "pName",
					"description": "No Description Set"
				}
			}
		},
		"ShouldIdleAcquire": {
			"class": "CDOTA_BaseNPC",
			"function": "ShouldIdleAcquire",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"SpeakConcept": {
			"class": "CDOTA_BaseNPC",
			"function": "SpeakConcept",
			"return": "void",
			"description": "Speak a response system concept with the TLK_DOTA_CUSTOM concept.",
			"server": true,
			"params": {
				"hCriteriaTable": {
					"type": "handle",
					"params_name": "hCriteriaTable",
					"description": "No Description Set"
				}
			}
		},
		"SpendMana": {
			"class": "CDOTA_BaseNPC",
			"function": "SpendMana",
			"return": "void",
			"description": "Spend mana from this unit, this can be used for spending mana from abilities or item usage.",
			"server": true,
			"params": {
				"flManaSpent": {
					"type": "float",
					"params_name": "flManaSpent",
					"description": "No Description Set"
				},
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				}
			}
		},
		"StartGesture": {
			"class": "CDOTA_BaseNPC",
			"function": "StartGesture",
			"return": "void",
			"description": "Add the given gesture activity.",
			"server": true,
			"params": {
				"nActivity": {
					"type": "int",
					"params_name": "nActivity",
					"description": "No Description Set"
				}
			}
		},
		"StartGestureFadeWithSequenceSettings": {
			"class": "CDOTA_BaseNPC",
			"function": "StartGestureFadeWithSequenceSettings",
			"return": "void",
			"description": "Add the given gesture activity faded according to its sequence settings.",
			"server": true,
			"params": {
				"nActivity": {
					"type": "int",
					"params_name": "nActivity",
					"description": "No Description Set"
				}
			}
		},
		"StartGestureWithFade": {
			"class": "CDOTA_BaseNPC",
			"function": "StartGestureWithFade",
			"return": "void",
			"description": "Add the given gesture activity faded according to to the parameters.",
			"server": true,
			"params": {
				"nActivity": {
					"type": "int",
					"params_name": "nActivity",
					"description": "No Description Set"
				},
				"fFadeIn": {
					"type": "float",
					"params_name": "fFadeIn",
					"description": "No Description Set"
				},
				"fFadeOut": {
					"type": "float",
					"params_name": "fFadeOut",
					"description": "No Description Set"
				}
			}
		},
		"StartGestureWithPlaybackRate": {
			"class": "CDOTA_BaseNPC",
			"function": "StartGestureWithPlaybackRate",
			"return": "void",
			"description": "Add the given gesture activity with a playback rate override.",
			"server": true,
			"params": {
				"nActivity": {
					"type": "int",
					"params_name": "nActivity",
					"description": "No Description Set"
				},
				"flRate": {
					"type": "float",
					"params_name": "flRate",
					"description": "No Description Set"
				}
			}
		},
		"Stop": {
			"class": "CDOTA_BaseNPC",
			"function": "Stop",
			"return": "void",
			"description": "Stop the current order.",
			"server": true,
			"params": {}
		},
		"StopFacing": {
			"class": "CDOTA_BaseNPC",
			"function": "StopFacing",
			"return": "void",
			"server": true,
			"params": {}
		},
		"SwapAbilities": {
			"class": "CDOTA_BaseNPC",
			"function": "SwapAbilities",
			"return": "void",
			"description": "Swaps the slots of the two passed abilities and sets them enabled/disabled.",
			"server": true,
			"params": {
				"pAbilityName1": {
					"type": "string",
					"params_name": "pAbilityName1",
					"description": "No Description Set"
				},
				"pAbilityName2": {
					"type": "string",
					"params_name": "pAbilityName2",
					"description": "No Description Set"
				},
				"bEnable1": {
					"type": "bool",
					"params_name": "bEnable1",
					"description": "No Description Set"
				},
				"bEnable2": {
					"type": "bool",
					"params_name": "bEnable2",
					"description": "No Description Set"
				}
			}
		},
		"SwapItems": {
			"class": "CDOTA_BaseNPC",
			"function": "SwapItems",
			"return": "void",
			"description": "Swap the contents of two item slots (slot1, slot2)",
			"server": true,
			"params": {
				"nSlot1": {
					"type": "int",
					"params_name": "nSlot1",
					"description": "No Description Set"
				},
				"nSlot2": {
					"type": "int",
					"params_name": "nSlot2",
					"description": "No Description Set"
				}
			}
		},
		"TakeItem": {
			"class": "CDOTA_BaseNPC",
			"function": "TakeItem",
			"return": "handle",
			"description": "Removed the passed item from this unit`s inventory.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"TimeUntilNextAttack": {
			"class": "CDOTA_BaseNPC",
			"function": "TimeUntilNextAttack",
			"return": "float",
			"server": true,
			"params": {}
		},
		"TriggerModifierDodge": {
			"class": "CDOTA_BaseNPC",
			"function": "TriggerModifierDodge",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"TriggerSpellAbsorb": {
			"class": "CDOTA_BaseNPC",
			"function": "TriggerSpellAbsorb",
			"return": "bool",
			"server": true,
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				}
			}
		},
		"TriggerSpellReflect": {
			"class": "CDOTA_BaseNPC",
			"function": "TriggerSpellReflect",
			"return": "void",
			"description": "Trigger the Lotus Orb-like effect.(hAbility)",
			"server": true,
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "No Description Set"
				}
			}
		},
		"UnHideAbilityToSlot": {
			"class": "CDOTA_BaseNPC",
			"function": "UnHideAbilityToSlot",
			"return": "void",
			"description": "Makes the first ability unhidden, and puts it where second ability currently is. Will do nothing if the first ability is already unhidden and in a valid slot.",
			"server": true,
			"params": {
				"pszAbilityName": {
					"type": "string",
					"params_name": "pszAbilityName",
					"description": "No Description Set"
				},
				"pszReplacedAbilityName": {
					"type": "string",
					"params_name": "pszReplacedAbilityName",
					"description": "No Description Set"
				}
			}
		},
		"UnitCanRespawn": {
			"class": "CDOTA_BaseNPC",
			"class_cl": "C_DOTA_BaseNPC",
			"function": "UnitCanRespawn",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"WasKilledPassively": {
			"class": "CDOTA_BaseNPC",
			"function": "WasKilledPassively",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"extends": "CBaseFlex",
		"variable": ""
	},
	"CDOTA_BaseNPC_Building": {
		"description": "extends CDOTA_BaseNPC",
		"GetInvulnCount": {
			"class": "CDOTA_BaseNPC_Building",
			"function": "GetInvulnCount",
			"return": "int",
			"description": "Get the invulnerability count for a building.",
			"server": true,
			"params": {}
		},
		"SetInvulnCount": {
			"class": "CDOTA_BaseNPC_Building",
			"function": "SetInvulnCount",
			"return": "void",
			"description": "Set the invulnerability counter of this building.",
			"server": true,
			"params": {
				"nInvulnCount": {
					"type": "int",
					"params_name": "nInvulnCount",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_BaseNPC",
		"variable": ""
	},
	"CDOTA_BaseNPC_Creature": {
		"description": "extends CDOTA_BaseNPC",
		"AddItemDrop": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "AddItemDrop",
			"return": "void",
			"description": "Add the specified item drop to this creature.",
			"server": true,
			"params": {
				"hDropData": {
					"type": "handle",
					"params_name": "hDropData",
					"description": "No Description Set"
				}
			}
		},
		"CreatureLevelUp": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "CreatureLevelUp",
			"return": "void",
			"description": "Level the creature up by the specified number of levels",
			"server": true,
			"params": {
				"iLevels": {
					"type": "int",
					"params_name": "iLevels",
					"description": "No Description Set"
				}
			}
		},
		"GetDisableResistance": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "GetDisableResistance",
			"return": "float",
			"description": "Set creature`s current disable resistance",
			"server": true,
			"params": {}
		},
		"GetUltimateDisableResistance": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "GetUltimateDisableResistance",
			"return": "float",
			"description": "Set creature`s current disable resistance from ultimates",
			"server": true,
			"params": {}
		},
		"IsChampion": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "IsChampion",
			"return": "bool",
			"description": "Is this unit a champion?",
			"server": true,
			"params": {}
		},
		"IsReincarnating": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "IsReincarnating",
			"return": "bool",
			"description": "Is this creature respawning?",
			"server": true,
			"params": {}
		},
		"RemoveAllItemDrops": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "RemoveAllItemDrops",
			"return": "void",
			"description": "Remove all item drops from this creature.",
			"server": true,
			"params": {}
		},
		"SetArmorGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetArmorGain",
			"return": "void",
			"description": "Set the armor gained per level on this creature.",
			"server": true,
			"params": {
				"flArmorGain": {
					"type": "float",
					"params_name": "flArmorGain",
					"description": "No Description Set"
				}
			}
		},
		"SetAttackTimeGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetAttackTimeGain",
			"return": "void",
			"description": "Set the attack time gained per level on this creature.",
			"server": true,
			"params": {
				"flAttackTimeGain": {
					"type": "float",
					"params_name": "flAttackTimeGain",
					"description": "No Description Set"
				}
			}
		},
		"SetBountyGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetBountyGain",
			"return": "void",
			"description": "Set the bounty gold gained per level on this creature.",
			"server": true,
			"params": {
				"nBountyGain": {
					"type": "int",
					"params_name": "nBountyGain",
					"description": "No Description Set"
				}
			}
		},
		"SetChampion": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetChampion",
			"return": "void",
			"description": "Flag this unit as a champion creature.",
			"server": true,
			"params": {
				"bIsChampion": {
					"type": "bool",
					"params_name": "bIsChampion",
					"description": "No Description Set"
				}
			}
		},
		"SetDamageGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetDamageGain",
			"return": "void",
			"description": "Set the damage gained per level on this creature.",
			"server": true,
			"params": {
				"nDamageGain": {
					"type": "int",
					"params_name": "nDamageGain",
					"description": "No Description Set"
				}
			}
		},
		"SetDisableResistance": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetDisableResistance",
			"return": "void",
			"description": "Set creature`s current disable resistance",
			"server": true,
			"params": {
				"flDisableResistance": {
					"type": "float",
					"params_name": "flDisableResistance",
					"description": "No Description Set"
				}
			}
		},
		"SetDisableResistanceGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetDisableResistanceGain",
			"return": "void",
			"description": "Set the disable resistance gained per level on this creature.",
			"server": true,
			"params": {
				"flDisableResistanceGain": {
					"type": "float",
					"params_name": "flDisableResistanceGain",
					"description": "No Description Set"
				}
			}
		},
		"SetHPGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetHPGain",
			"return": "void",
			"description": "Set the hit points gained per level on this creature.",
			"server": true,
			"params": {
				"nHPGain": {
					"type": "int",
					"params_name": "nHPGain",
					"description": "No Description Set"
				}
			}
		},
		"SetHPRegenGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetHPRegenGain",
			"return": "void",
			"description": "Set the hit points regen gained per level on this creature.",
			"server": true,
			"params": {
				"flHPRegenGain": {
					"type": "float",
					"params_name": "flHPRegenGain",
					"description": "No Description Set"
				}
			}
		},
		"SetMagicResistanceGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetMagicResistanceGain",
			"return": "void",
			"description": "Set the magic resistance gained per level on this creature.",
			"server": true,
			"params": {
				"flMagicResistanceGain": {
					"type": "float",
					"params_name": "flMagicResistanceGain",
					"description": "No Description Set"
				}
			}
		},
		"SetManaGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetManaGain",
			"return": "void",
			"description": "Set the mana points gained per level on this creature.",
			"server": true,
			"params": {
				"nManaGain": {
					"type": "int",
					"params_name": "nManaGain",
					"description": "No Description Set"
				}
			}
		},
		"SetManaRegenGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetManaRegenGain",
			"return": "void",
			"description": "Set the mana points regen gained per level on this creature.",
			"server": true,
			"params": {
				"flManaRegenGain": {
					"type": "float",
					"params_name": "flManaRegenGain",
					"description": "No Description Set"
				}
			}
		},
		"SetMoveSpeedGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetMoveSpeedGain",
			"return": "void",
			"description": "Set the move speed gained per level on this creature.",
			"server": true,
			"params": {
				"nMoveSpeedGain": {
					"type": "int",
					"params_name": "nMoveSpeedGain",
					"description": "No Description Set"
				}
			}
		},
		"SetRequiresReachingEndPath": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetRequiresReachingEndPath",
			"return": "void",
			"description": "Set whether creatures require reaching their end path before becoming idle",
			"server": true,
			"params": {
				"bRequiresReachingEndPath": {
					"type": "bool",
					"params_name": "bRequiresReachingEndPath",
					"description": "No Description Set"
				}
			}
		},
		"SetUltimateDisableResistance": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetUltimateDisableResistance",
			"return": "void",
			"description": "Set creature`s current disable resistance from ultimates",
			"server": true,
			"params": {
				"flUltDisableResistance": {
					"type": "float",
					"params_name": "flUltDisableResistance",
					"description": "No Description Set"
				}
			}
		},
		"SetXPGain": {
			"class": "CDOTA_BaseNPC_Creature",
			"function": "SetXPGain",
			"return": "void",
			"description": "Set the XP gained per level on this creature.",
			"server": true,
			"params": {
				"nXPGain": {
					"type": "int",
					"params_name": "nXPGain",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_BaseNPC",
		"variable": ""
	},
	"CDOTA_BaseNPC_Hero": {
		"description": "extends CDOTA_BaseNPC",
		"AddExperience": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "AddExperience",
			"return": "bool",
			"description": "Params: Float XP, Bool applyBotDifficultyScaling",
			"server": true,
			"params": {
				"flXP": {
					"type": "float",
					"params_name": "flXP",
					"description": "No Description Set"
				},
				"nReason": {
					"type": "int",
					"params_name": "nReason",
					"description": "No Description Set"
				},
				"bApplyBotDifficultyScaling": {
					"type": "bool",
					"params_name": "bApplyBotDifficultyScaling",
					"description": "No Description Set"
				},
				"bIncrementTotal": {
					"type": "bool",
					"params_name": "bIncrementTotal",
					"description": "No Description Set"
				}
			}
		},
		"Buyback": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "Buyback",
			"return": "void",
			"description": "Spend the gold and buyback with this hero.",
			"server": true,
			"params": {}
		},
		"CalculateStatBonus": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "CalculateStatBonus",
			"return": "void",
			"description": "Recalculate all stats after the hero gains stats.",
			"server": true,
			"params": {
				"bForce": {
					"type": "bool",
					"params_name": "bForce",
					"description": "No Description Set"
				}
			}
		},
		"CanEarnGold": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "CanEarnGold",
			"return": "bool",
			"description": "Returns boolean value result of buyback gold limit time less than game time.",
			"server": true,
			"params": {}
		},
		"ClearLastHitMultikill": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ClearLastHitMultikill",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"ClearLastHitStreak": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ClearLastHitStreak",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"ClearStreak": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ClearStreak",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"GetAbilityPoints": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetAbilityPoints",
			"return": "int",
			"description": "Gets the current unspent ability points.",
			"server": true,
			"params": {}
		},
		"GetAdditionalOwnedUnits": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetAdditionalOwnedUnits",
			"return": "table",
			"server": true,
			"params": {}
		},
		"GetAgility": {
			"class": "CDOTA_BaseNPC_Hero",
			"class_cl": "C_DOTA_BaseNPC_Hero",
			"function": "GetAgility",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAgilityGain": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetAgilityGain",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetAssists": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetAssists",
			"return": "int",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"GetAttacker": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetAttacker",
			"return": "int",
			"server": true,
			"params": {
				"nIndex": {
					"type": "int",
					"params_name": "nIndex",
					"description": "No Description Set"
				}
			}
		},
		"GetBaseAgility": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBaseAgility",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetBaseDamageMax": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBaseDamageMax",
			"return": "int",
			"description": "Hero damage is also affected by attributes.",
			"server": true,
			"params": {}
		},
		"GetBaseDamageMin": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBaseDamageMin",
			"return": "int",
			"description": "Hero damage is also affected by attributes.",
			"server": true,
			"params": {}
		},
		"GetBaseIntellect": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBaseIntellect",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetBaseManaRegen": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBaseManaRegen",
			"return": "float",
			"description": "Returns the base mana regen.",
			"server": true,
			"params": {}
		},
		"GetBaseStrength": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBaseStrength",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetBonusDamageFromPrimaryStat": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBonusDamageFromPrimaryStat",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetBuybackCooldownTime": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBuybackCooldownTime",
			"return": "float",
			"description": "Return float value for the amount of time left on cooldown for this hero`s buyback.",
			"server": true,
			"params": {}
		},
		"GetBuybackCost": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBuybackCost",
			"return": "int",
			"description": "Return integer value for the gold cost of a buyback.",
			"server": true,
			"params": {
				"bReturnOldValues": {
					"type": "bool",
					"params_name": "bReturnOldValues",
					"description": "No Description Set"
				}
			}
		},
		"GetBuybackGoldLimitTime": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetBuybackGoldLimitTime",
			"return": "float",
			"description": "Returns the amount of time gold gain is limited after buying back.",
			"server": true,
			"params": {}
		},
		"GetCurrentXP": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetCurrentXP",
			"return": "int",
			"description": "Returns the amount of XP ",
			"server": true,
			"params": {}
		},
		"GetDeathGoldCost": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetDeathGoldCost",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetDeaths": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetDeaths",
			"return": "int",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"GetDenies": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetDenies",
			"return": "int",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"GetGold": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetGold",
			"return": "int",
			"description": "Returns gold amount for the player owning this hero",
			"server": true,
			"params": {}
		},
		"GetGoldBounty": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetGoldBounty",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetHeroID": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetHeroID",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetIncreasedAttackSpeed": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetIncreasedAttackSpeed",
			"return": "float",
			"description": "Hero attack speed is also affected by agility.",
			"server": true,
			"params": {}
		},
		"GetIntellect": {
			"class": "CDOTA_BaseNPC_Hero",
			"class_cl": "C_DOTA_BaseNPC_Hero",
			"function": "GetIntellect",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetIntellectGain": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetIntellectGain",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetKills": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetKills",
			"return": "int",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"GetLastHits": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetLastHits",
			"return": "int",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"GetMostRecentDamageTime": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetMostRecentDamageTime",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetMultipleKillCount": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetMultipleKillCount",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetNumAttackers": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetNumAttackers",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetNumItemsInInventory": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetNumItemsInInventory",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetNumItemsInStash": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetNumItemsInStash",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetPhysicalArmorBaseValue": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetPhysicalArmorBaseValue",
			"return": "float",
			"description": "Hero armor is affected by attributes.",
			"server": true,
			"params": {}
		},
		"GetPlayerID": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetPlayerID",
			"return": "int",
			"description": "Returns player ID of the player owning this hero",
			"server": true,
			"params": {}
		},
		"GetPrimaryAttribute": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetPrimaryAttribute",
			"return": "int",
			"description": "0 = strength, 1 = agility, 2 = intelligence.",
			"server": true,
			"params": {}
		},
		"GetPrimaryStatValue": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetPrimaryStatValue",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetReplicatingOtherHero": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetReplicatingOtherHero",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"GetRespawnTime": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetRespawnTime",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetRespawnsDisabled": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetRespawnsDisabled",
			"return": "bool",
			"description": "Is this hero prevented from respawning?",
			"server": true,
			"params": {}
		},
		"GetStreak": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetStreak",
			"return": "int",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"GetStrength": {
			"class": "CDOTA_BaseNPC_Hero",
			"class_cl": "C_DOTA_BaseNPC_Hero",
			"function": "GetStrength",
			"return": "float",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetStrengthGain": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetStrengthGain",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetTimeUntilRespawn": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetTimeUntilRespawn",
			"return": "float",
			"server": true,
			"params": {}
		},
		"GetTogglableWearable": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "GetTogglableWearable",
			"return": "handle",
			"description": "Get wearable entity in slot (slot)",
			"server": true,
			"params": {
				"nSlotType": {
					"type": "int",
					"params_name": "nSlotType",
					"description": "No Description Set"
				}
			}
		},
		"HasAnyAvailableInventorySpace": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "HasAnyAvailableInventorySpace",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"HasFlyingVision": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "HasFlyingVision",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"HasOwnerAbandoned": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "HasOwnerAbandoned",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"HasRoomForItem": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "HasRoomForItem",
			"return": "int",
			"description": "Args: const char* pItemName, bool bIncludeStashCombines, bool bAllowSelling",
			"server": true,
			"params": {
				"pItemName": {
					"type": "string",
					"params_name": "pItemName",
					"description": "No Description Set"
				},
				"bIncludeStashCombines": {
					"type": "bool",
					"params_name": "bIncludeStashCombines",
					"description": "No Description Set"
				},
				"bAllowSelling": {
					"type": "bool",
					"params_name": "bAllowSelling",
					"description": "No Description Set"
				}
			}
		},
		"HeroLevelUp": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "HeroLevelUp",
			"return": "void",
			"description": "Levels up the hero, true or false to play effects.",
			"server": true,
			"params": {
				"bPlayEffects": {
					"type": "bool",
					"params_name": "bPlayEffects",
					"description": "No Description Set"
				}
			}
		},
		"IncrementAssists": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementAssists",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {
				"iKillerID": {
					"type": "int",
					"params_name": "iKillerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementDeaths": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementDeaths",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {
				"iKillerID": {
					"type": "int",
					"params_name": "iKillerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementDenies": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementDenies",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"IncrementKills": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementKills",
			"return": "void",
			"description": "Passed ID is for the victim, killer ID is ID of the current hero.  Value is stored in PlayerResource.",
			"server": true,
			"params": {
				"iVictimID": {
					"type": "int",
					"params_name": "iVictimID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementLastHitMultikill": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementLastHitMultikill",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"IncrementLastHitStreak": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementLastHitStreak",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"IncrementLastHits": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementLastHits",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"IncrementNearbyCreepDeaths": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementNearbyCreepDeaths",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"IncrementStreak": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IncrementStreak",
			"return": "void",
			"description": "Value is stored in PlayerResource.",
			"server": true,
			"params": {}
		},
		"IsBuybackDisabledByReapersScythe": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IsBuybackDisabledByReapersScythe",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsReincarnating": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IsReincarnating",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsStashEnabled": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "IsStashEnabled",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"KilledHero": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "KilledHero",
			"return": "void",
			"description": "Args: Hero, Inflictor",
			"server": true,
			"params": {
				"hHero": {
					"type": "handle",
					"params_name": "hHero",
					"description": "No Description Set"
				},
				"hInflictor": {
					"type": "handle",
					"params_name": "hInflictor",
					"description": "No Description Set"
				}
			}
		},
		"ModifyAgility": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ModifyAgility",
			"return": "void",
			"description": "Adds passed value to base attribute value, then calls CalculateStatBonus.",
			"server": true,
			"params": {
				"flNewAgility": {
					"type": "float",
					"params_name": "flNewAgility",
					"description": "No Description Set"
				}
			}
		},
		"ModifyGold": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ModifyGold",
			"return": "int",
			"description": "Gives this hero some gold.  Args: int nGoldChange, bool bReliable, int reason",
			"server": true,
			"params": {
				"iGoldChange": {
					"type": "int",
					"params_name": "iGoldChange",
					"description": "No Description Set"
				},
				"bReliable": {
					"type": "bool",
					"params_name": "bReliable",
					"description": "No Description Set"
				},
				"iReason": {
					"type": "int",
					"params_name": "iReason",
					"description": "No Description Set"
				}
			}
		},
		"ModifyGoldFiltered": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ModifyGoldFiltered",
			"return": "int",
			"description": "Gives this hero some gold, using the gold filter if extra filtering is on.  Args: int nGoldChange, bool bReliable, int reason",
			"server": true,
			"params": {
				"iGoldChange": {
					"type": "int",
					"params_name": "iGoldChange",
					"description": "No Description Set"
				},
				"bReliabe": {
					"type": "bool",
					"params_name": "bReliabe",
					"description": "No Description Set"
				},
				"iReason": {
					"type": "int",
					"params_name": "iReason",
					"description": "No Description Set"
				}
			}
		},
		"ModifyIntellect": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ModifyIntellect",
			"return": "void",
			"description": "Adds passed value to base attribute value, then calls CalculateStatBonus.",
			"server": true,
			"params": {
				"flNewIntellect": {
					"type": "float",
					"params_name": "flNewIntellect",
					"description": "No Description Set"
				}
			}
		},
		"ModifyStrength": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ModifyStrength",
			"return": "void",
			"description": "Adds passed value to base attribute value, then calls CalculateStatBonus.",
			"server": true,
			"params": {
				"flNewStrength": {
					"type": "float",
					"params_name": "flNewStrength",
					"description": "No Description Set"
				}
			}
		},
		"PerformTaunt": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "PerformTaunt",
			"return": "void",
			"server": true,
			"params": {}
		},
		"RecordLastHit": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "RecordLastHit",
			"return": "void",
			"server": true,
			"params": {}
		},
		"RespawnHero": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "RespawnHero",
			"return": "void",
			"description": "Respawn this hero.",
			"server": true,
			"params": {
				"bBuyBack": {
					"type": "bool",
					"params_name": "bBuyBack",
					"description": "No Description Set"
				},
				"bRespawnPenalty": {
					"type": "bool",
					"params_name": "bRespawnPenalty",
					"description": "No Description Set"
				}
			}
		},
		"SetAbilityPoints": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetAbilityPoints",
			"return": "void",
			"description": "Sets the current unspent ability points.",
			"server": true,
			"params": {
				"iPoints": {
					"type": "int",
					"params_name": "iPoints",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseAgility": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetBaseAgility",
			"return": "void",
			"server": true,
			"params": {
				"flAgility": {
					"type": "float",
					"params_name": "flAgility",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseIntellect": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetBaseIntellect",
			"return": "void",
			"server": true,
			"params": {
				"flIntellect": {
					"type": "float",
					"params_name": "flIntellect",
					"description": "No Description Set"
				}
			}
		},
		"SetBaseStrength": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetBaseStrength",
			"return": "void",
			"server": true,
			"params": {
				"flStrength": {
					"type": "float",
					"params_name": "flStrength",
					"description": "No Description Set"
				}
			}
		},
		"SetBotDifficulty": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetBotDifficulty",
			"return": "void",
			"server": true,
			"params": {
				"nDifficulty": {
					"type": "int",
					"params_name": "nDifficulty",
					"description": "No Description Set"
				}
			}
		},
		"SetBuyBackDisabledByReapersScythe": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetBuyBackDisabledByReapersScythe",
			"return": "void",
			"server": true,
			"params": {
				"bBuybackDisabled": {
					"type": "bool",
					"params_name": "bBuybackDisabled",
					"description": "No Description Set"
				}
			}
		},
		"SetBuybackCooldownTime": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetBuybackCooldownTime",
			"return": "void",
			"description": "Sets the buyback cooldown time.",
			"server": true,
			"params": {
				"flTime": {
					"type": "float",
					"params_name": "flTime",
					"description": "No Description Set"
				}
			}
		},
		"SetBuybackGoldLimitTime": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetBuybackGoldLimitTime",
			"return": "void",
			"description": "Set the amount of time gold gain is limited after buying back.",
			"server": true,
			"params": {
				"flTime": {
					"type": "float",
					"params_name": "flTime",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomDeathXP": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetCustomDeathXP",
			"return": "void",
			"description": "Sets a custom experience value for this hero.  Note, GameRules boolean must be set for this to work!",
			"server": true,
			"params": {
				"iValue": {
					"type": "int",
					"params_name": "iValue",
					"description": "No Description Set"
				}
			}
		},
		"SetGold": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetGold",
			"return": "void",
			"description": "Sets the gold amount for the player owning this hero",
			"server": true,
			"params": {
				"iGold": {
					"type": "int",
					"params_name": "iGold",
					"description": "No Description Set"
				},
				"bReliable": {
					"type": "bool",
					"params_name": "bReliable",
					"description": "No Description Set"
				}
			}
		},
		"SetPlayerID": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetPlayerID",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"SetPrimaryAttribute": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetPrimaryAttribute",
			"return": "void",
			"description": "Set this hero`s primary attribute value.",
			"server": true,
			"params": {
				"nPrimaryAttribute": {
					"type": "int",
					"params_name": "nPrimaryAttribute",
					"description": "No Description Set"
				}
			}
		},
		"SetRespawnPosition": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetRespawnPosition",
			"return": "void",
			"server": true,
			"params": {
				"vOrigin": {
					"type": "Vector",
					"params_name": "vOrigin",
					"description": "No Description Set"
				}
			}
		},
		"SetRespawnsDisabled": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetRespawnsDisabled",
			"return": "void",
			"description": "Prevent this hero from respawning.",
			"server": true,
			"params": {
				"bDisableRespawns": {
					"type": "bool",
					"params_name": "bDisableRespawns",
					"description": "No Description Set"
				}
			}
		},
		"SetStashEnabled": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetStashEnabled",
			"return": "void",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetTimeUntilRespawn": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SetTimeUntilRespawn",
			"return": "void",
			"server": true,
			"params": {
				"time": {
					"type": "float",
					"params_name": "time",
					"description": "No Description Set"
				}
			}
		},
		"ShouldDoFlyHeightVisual": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "ShouldDoFlyHeightVisual",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"SpendGold": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "SpendGold",
			"return": "void",
			"description": "Args: int nGold, int nReason",
			"server": true,
			"params": {
				"iCost": {
					"type": "int",
					"params_name": "iCost",
					"description": "No Description Set"
				},
				"iReason": {
					"type": "int",
					"params_name": "iReason",
					"description": "No Description Set"
				}
			}
		},
		"UpgradeAbility": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "UpgradeAbility",
			"return": "void",
			"description": "如果存在该技能并且英雄拥有足够的技能点，将会升级该技能。测试中发现似乎不会刷新被动modifier[2021/4/16]",
			"server": true,
			"params": {
				"hAbility": {
					"type": "handle",
					"params_name": "hAbility",
					"description": "技能实体"
				}
			}
		},
		"WillReincarnate": {
			"class": "CDOTA_BaseNPC_Hero",
			"function": "WillReincarnate",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"extends": "CDOTA_BaseNPC",
		"variable": ""
	},
	"CDOTA_BaseNPC_RotatableBuilding": {
		"description": "extends CDOTA_BaseNPC"
	},
	"CDOTA_BaseNPC_Shop": {
		"description": "extends CDOTA_BaseNPC_Building",
		"GetShopType": {
			"class": "CDOTA_BaseNPC_Shop",
			"function": "GetShopType",
			"return": "int",
			"description": "Get the DOTA_SHOP_TYPE",
			"server": true,
			"params": {}
		},
		"SetShopType": {
			"class": "CDOTA_BaseNPC_Shop",
			"function": "SetShopType",
			"return": "void",
			"description": "Set the DOTA_SHOP_TYPE.",
			"server": true,
			"params": {
				"eShopType": {
					"type": "int",
					"params_name": "eShopType",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_BaseNPC_Building",
		"variable": ""
	},
	"CDOTA_BaseNPC_Trap_Ward": {
		"description": "extends CDOTA_BaseNPC_Creature",
		"GetTrapTarget": {
			"class": "CDOTA_BaseNPC_Trap_Ward",
			"function": "GetTrapTarget",
			"return": "Vector",
			"description": "Get the trap target for this entity.",
			"server": true,
			"params": {}
		},
		"SetAnimation": {
			"class": "CDOTA_BaseNPC_Trap_Ward",
			"function": "SetAnimation",
			"return": "void",
			"description": "Set the animation sequence for this entity.",
			"server": true,
			"params": {
				"pAnimation": {
					"type": "string",
					"params_name": "pAnimation",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_BaseNPC_Creature",
		"variable": ""
	},
	"CDOTA_Buff": {
		"description": "No Description Set",
		"AddParticle": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "AddParticle",
			"return": "void",
			"description": "将一个特效绑定在modifier上，该特效会在modifier销毁时一起删除。",
			"server": true,
			"client": true,
			"params": {
				"i": {
					"type": "int",
					"params_name": "iParticleID",
					"description": "特效ID"
				},
				"bDestroyImmediately": {
					"type": "bool",
					"params_name": "bDestroyImmediately",
					"description": "是否立即删除"
				},
				"bStatusEffect": {
					"type": "bool",
					"params_name": "bStatusEffect",
					"description": "是否状态特效"
				},
				"iPriority": {
					"type": "int",
					"params_name": "iPriority",
					"description": "优先级"
				},
				"bHeroEffect": {
					"type": "bool",
					"params_name": "bHeroEffect",
					"description": "是否英雄特效"
				},
				"bOverheadEffect": {
					"type": "bool",
					"params_name": "bOverheadEffect",
					"description": "是否头顶特效"
				}
			}
		},
		"GetElapsedTime": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetElapsedTime",
			"return": "float",
			"description": "返回自创建修改器后经过的时间。",
			"server": true,
			"client": true,
			"example": "hModifier:GetElapsedTime()",
			"params": {}
		},
		"GetDieTime": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetDieTime",
			"return": "float",
			"description": "返回修改器的过期时间。",
			"server": true,
			"client": true,
			"example": "GameRules:GetGameTime() - self:GetDieTime()",
			"params": {}
		},
		"DecrementStackCount": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "DecrementStackCount",
			"return": "void",
			"description": "减少一层叠加层数。",
			"server": true,
			"client": true,
			"params": {}
		},
		"Destroy": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "Destroy",
			"return": "void",
			"description": "运行所有关联的destroy函数，然后删除modifier。",
			"server": true,
			"client": true,
			"params": {}
		},
		"DestroyOnExpire": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "DestroyOnExpire",
			"return": "bool",
			"description": "modifier到期后是否销毁",
			"server": true,
			"client": true,
			"example": "function modifier_axe:DestroyOnExpire()\n\treturn false\nend",
			"params": {}
		},
		"ForceRefresh": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "ForceRefresh",
			"return": "void",
			"description": "在此modifier上运行所有关联的刷新功能，就像重新添加它一样。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAbility": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetAbility",
			"return": "handle",
			"description": "获取该modifier的来源技能。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAuraDuration": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetAuraDuration",
			"return": "float",
			"description": "返回光环粘滞时间（默认0.5秒）",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAuraOwner": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetAuraOwner",
			"return": "handle",
			"description": "获取光环来源单位",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCaster": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetCaster",
			"return": "handle",
			"description": "获取该modifier的来源单位。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetClass": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetClass",
			"return": "string",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCreationTime": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetCreationTime",
			"return": "float",
			"description": "获取创建时间。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetDuration": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetDuration",
			"return": "float",
			"description": "获取该modifier的持续时间。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetLastAppliedTime": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetLastAppliedTime",
			"return": "float",
			"description": "获取上次应用时间。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetName": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetName",
			"return": "string",
			"description": "获取该modifier的名字。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetParent": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetParent",
			"return": "handle",
			"description": "获取modifier的作用单位。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetRemainingTime": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetRemainingTime",
			"return": "float",
			"description": "获取剩余时间。",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetSerialNumber": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetSerialNumber",
			"return": "int",
			"description": "获取序列号",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetStackCount": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "GetStackCount",
			"return": "int",
			"description": "获取modifier层数",
			"server": true,
			"client": true,
			"params": {}
		},
		"HasFunction": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "HasFunction",
			"return": "bool",
			"description": "判断是否拥有某个modifierfunction",
			"server": true,
			"client": true,
			"example": "-- ability\nfunction vengefulspirit_command_aura:OnSpellStart()\n\tlocal hCaster = self:GetCaster()\n\tlocal hModifier = hCaster :AddNewModifier(hCaster , self, \"modifier_vengefulspirit_hybrid_special\", {})\n\tprint(hModifier:HasFunction(MODIFIER_PROPERTY_STRONG_ILLUSION))\t\t-- 返回true\nend\n-- modifier\nif modifier_vengefulspirit_hybrid_special == nil then\n\tmodifier_vengefulspirit_hybrid_special = class({})\nend\nfunction modifier_vengefulspirit_hybrid_special:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_STRONG_ILLUSION,\n\t}\nend\nfunction modifier_vengefulspirit_hybrid_special:GetModifierStrongIllusion()\n\treturn 1\nend",
			"params": {
				"iFunction": {
					"type": "int",
					"params_name": "iFunction",
					"description": "modifierfunction"
				}
			}
		},
		"IncrementStackCount": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "IncrementStackCount",
			"return": "void",
			"description": "增加一层叠加层数。",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsDebuff": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "IsDebuff",
			"return": "bool",
			"description": "是否是负面buff",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsHexDebuff": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "IsHexDebuff",
			"return": "bool",
			"description": "是否是妖术负面buff",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsStunDebuff": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "IsStunDebuff",
			"return": "bool",
			"description": "是否是晕眩负面buff",
			"server": true,
			"client": true,
			"params": {}
		},
		"SendBuffRefreshToClients": {
			"class": "CDOTA_Buff",
			"function": "SendBuffRefreshToClients",
			"return": "void",
			"description": "通知客户端刷新modifier",
			"server": true,
			"params": {}
		},
		"SetDuration": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "SetDuration",
			"return": "void",
			"description": "设置持续时间",
			"server": true,
			"client": true,
			"params": {
				"flDuration": {
					"type": "float",
					"params_name": "flDuration",
					"description": "持续时间"
				},
				"bInformClient": {
					"type": "bool",
					"params_name": "bInformClient",
					"description": "是否通知客户端"
				}
			}
		},
		"SetStackCount": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "SetStackCount",
			"return": "void",
			"description": "设置叠加层数",
			"server": true,
			"client": true,
			"params": {
				"iCount": {
					"type": "int",
					"params_name": "iCount",
					"description": "叠加层数"
				}
			}
		},
		"StartIntervalThink": {
			"class": "CDOTA_Buff",
			"class_cl": "CDOTA_Buff",
			"function": "StartIntervalThink",
			"return": "void",
			"description": "以给定的间隔启动此修改器的计时器功能（OnIntervalThink）。 传入-1停止该计时器。",
			"server": true,
			"client": true,
			"example": "function modifier_antimage_blink_illusion:OnCreated(params)\n\tif IsServer() then\n\t\tself:StartIntervalThink(0)\t-- 传入0为每帧都运行\n\tend\nend\nfunction modifier_antimage_blink_illusion:OnIntervalThink()\n\tself:StartIntervalThink(-1)\t\t-- 停止计时\nend",
			"params": {
				"flInterval": {
					"type": "float",
					"params_name": "flInterval",
					"description": "计时间隔"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDOTA_CustomUIManager": {
		"description": "全局访问变量：CustomUI",
		"DynamicHud_Create": {
			"class": "CDOTA_CustomUIManager",
			"function": "DynamicHud_Create",
			"return": "void",
			"description": "Create a new custom UI HUD element for the specified player(s). ( int PlayerID /*-1 means everyone*/, string ElementID /* should be unique */, string LayoutFileName, table DialogVariables /* can be nil */ )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "handle_4",
					"description": "No Description Set"
				}
			}
		},
		"DynamicHud_Destroy": {
			"class": "CDOTA_CustomUIManager",
			"function": "DynamicHud_Destroy",
			"return": "void",
			"description": "Destroy a custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"DynamicHud_SetDialogVariables": {
			"class": "CDOTA_CustomUIManager",
			"function": "DynamicHud_SetDialogVariables",
			"return": "void",
			"description": "Add or modify dialog variables for an existing custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID, table DialogVariables )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"DynamicHud_SetVisible": {
			"class": "CDOTA_CustomUIManager",
			"function": "DynamicHud_SetVisible",
			"return": "void",
			"description": "Toggle the visibility of an existing custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID, bool Visible )",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": "CustomUI"
	},
	"CDOTA_Item": {
		"description": "extends CDOTABaseAbility",
		"GetIntrinsicModifierName": {
			"description": "返回此技能被动给予的修饰器的名称",
			"example": "function phantom_assassin_blur_imba:GetIntrinsicModifierName()\n\treturn \"modifier_phantom_assassin_blur_imba\"\nend"
		},
		"CanBeUsedOutOfInventory": {
			"class": "CDOTA_Item",
			"function": "CanBeUsedOutOfInventory",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"GetContainer": {
			"class": "CDOTA_Item",
			"function": "GetContainer",
			"return": "handle",
			"description": "Get the container for this item.",
			"server": true,
			"params": {}
		},
		"GetCost": {
			"class": "CDOTA_Item",
			"function": "GetCost",
			"return": "int",
			"server": true,
			"params": {}
		},
		"GetCurrentCharges": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "GetCurrentCharges",
			"return": "int",
			"description": "Get the number of charges this item currently has.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetInitialCharges": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "GetInitialCharges",
			"return": "int",
			"description": "Get the initial number of charges this item has.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetItemSlot": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "GetItemSlot",
			"return": "int",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetItemState": {
			"class": "CDOTA_Item",
			"function": "GetItemState",
			"return": "int",
			"description": "Gets whether item is unequipped or ready.",
			"server": true,
			"params": {}
		},
		"GetParent": {
			"class": "CDOTA_Item",
			"function": "GetParent",
			"return": "handle",
			"description": "Get the parent for this item.",
			"server": true,
			"params": {}
		},
		"GetPurchaseTime": {
			"class": "CDOTA_Item",
			"function": "GetPurchaseTime",
			"return": "float",
			"description": "Get the purchase time of this item",
			"server": true,
			"params": {}
		},
		"GetPurchaser": {
			"class": "CDOTA_Item",
			"function": "GetPurchaser",
			"return": "handle",
			"description": "Get the purchaser for this item.",
			"server": true,
			"params": {}
		},
		"GetSecondaryCharges": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "GetSecondaryCharges",
			"return": "int",
			"description": "Get the number of secondary charges this item currently has.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetShareability": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "GetShareability",
			"return": "int",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsAlertableItem": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsAlertableItem",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsCastOnPickup": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsCastOnPickup",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsCombinable": {
			"class": "CDOTA_Item",
			"function": "IsCombinable",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsCombineLocked": {
			"class": "CDOTA_Item",
			"function": "IsCombineLocked",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsDisassemblable": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsDisassemblable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsDroppable": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsDroppable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsInBackpack": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsInBackpack",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsItem": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsItem",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsKillable": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsKillable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsMuted": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsMuted",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsNeutralDrop": {
			"class": "CDOTA_Item",
			"function": "IsNeutralDrop",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IsPermanent": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsPermanent",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsPurchasable": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsPurchasable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsRecipe": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsRecipe",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsRecipeGenerated": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsRecipeGenerated",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsSellable": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsSellable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsStackable": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "IsStackable",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"LaunchLoot": {
			"class": "CDOTA_Item",
			"function": "LaunchLoot",
			"return": "void",
			"server": true,
			"params": {
				"bAutoUse": {
					"type": "bool",
					"params_name": "bAutoUse",
					"description": "No Description Set"
				},
				"flHeight": {
					"type": "float",
					"params_name": "flHeight",
					"description": "No Description Set"
				},
				"flDuration": {
					"type": "float",
					"params_name": "flDuration",
					"description": "No Description Set"
				},
				"vEndPoint": {
					"type": "Vector",
					"params_name": "vEndPoint",
					"description": "No Description Set"
				}
			}
		},
		"LaunchLootInitialHeight": {
			"class": "CDOTA_Item",
			"function": "LaunchLootInitialHeight",
			"return": "void",
			"server": true,
			"params": {
				"bAutoUse": {
					"type": "bool",
					"params_name": "bAutoUse",
					"description": "No Description Set"
				},
				"flInitialHeight": {
					"type": "float",
					"params_name": "flInitialHeight",
					"description": "No Description Set"
				},
				"flLaunchHeight": {
					"type": "float",
					"params_name": "flLaunchHeight",
					"description": "No Description Set"
				},
				"flDuration": {
					"type": "float",
					"params_name": "flDuration",
					"description": "No Description Set"
				},
				"vEndPoint": {
					"type": "Vector",
					"params_name": "vEndPoint",
					"description": "No Description Set"
				}
			}
		},
		"LaunchLootRequiredHeight": {
			"class": "CDOTA_Item",
			"function": "LaunchLootRequiredHeight",
			"return": "void",
			"server": true,
			"params": {
				"bAutoUse": {
					"type": "bool",
					"params_name": "bAutoUse",
					"description": "No Description Set"
				},
				"flRequiredHeight": {
					"type": "float",
					"params_name": "flRequiredHeight",
					"description": "No Description Set"
				},
				"flHeight": {
					"type": "float",
					"params_name": "flHeight",
					"description": "No Description Set"
				},
				"flDuration": {
					"type": "float",
					"params_name": "flDuration",
					"description": "No Description Set"
				},
				"vEndPoint": {
					"type": "Vector",
					"params_name": "vEndPoint",
					"description": "No Description Set"
				}
			}
		},
		"OnEquip": {
			"class": "CDOTA_Item",
			"function": "OnEquip",
			"return": "void",
			"server": true,
			"params": {}
		},
		"OnUnequip": {
			"class": "CDOTA_Item",
			"function": "OnUnequip",
			"return": "void",
			"server": true,
			"params": {}
		},
		"RequiresCharges": {
			"class": "CDOTA_Item",
			"class_cl": "C_DOTA_Item",
			"function": "RequiresCharges",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"SetCanBeUsedOutOfInventory": {
			"class": "CDOTA_Item",
			"function": "SetCanBeUsedOutOfInventory",
			"return": "void",
			"server": true,
			"params": {
				"bValue": {
					"type": "bool",
					"params_name": "bValue",
					"description": "No Description Set"
				}
			}
		},
		"SetCastOnPickup": {
			"class": "CDOTA_Item",
			"function": "SetCastOnPickup",
			"return": "void",
			"server": true,
			"params": {
				"bCastOnPickUp": {
					"type": "bool",
					"params_name": "bCastOnPickUp",
					"description": "No Description Set"
				}
			}
		},
		"SetCombineLocked": {
			"class": "CDOTA_Item",
			"function": "SetCombineLocked",
			"return": "void",
			"server": true,
			"params": {
				"bCombineLocked": {
					"type": "bool",
					"params_name": "bCombineLocked",
					"description": "No Description Set"
				}
			}
		},
		"SetCurrentCharges": {
			"class": "CDOTA_Item",
			"function": "SetCurrentCharges",
			"return": "void",
			"description": "Set the number of charges on this item",
			"server": true,
			"params": {
				"iCharges": {
					"type": "int",
					"params_name": "iCharges",
					"description": "No Description Set"
				}
			}
		},
		"SetDroppable": {
			"class": "CDOTA_Item",
			"function": "SetDroppable",
			"return": "void",
			"server": true,
			"params": {
				"bDroppable": {
					"type": "bool",
					"params_name": "bDroppable",
					"description": "No Description Set"
				}
			}
		},
		"SetItemState": {
			"class": "CDOTA_Item",
			"function": "SetItemState",
			"return": "void",
			"description": "Sets whether item is unequipped or ready.",
			"server": true,
			"params": {
				"iState": {
					"type": "int",
					"params_name": "iState",
					"description": "No Description Set"
				}
			}
		},
		"SetOnlyPlayerHeroPickup": {
			"class": "CDOTA_Item",
			"function": "SetOnlyPlayerHeroPickup",
			"return": "void",
			"server": true,
			"params": {
				"bOnlyPlayerHero": {
					"type": "bool",
					"params_name": "bOnlyPlayerHero",
					"description": "No Description Set"
				}
			}
		},
		"SetPurchaseTime": {
			"class": "CDOTA_Item",
			"function": "SetPurchaseTime",
			"return": "void",
			"description": "Set the purchase time of this item",
			"server": true,
			"params": {
				"flTime": {
					"type": "float",
					"params_name": "flTime",
					"description": "No Description Set"
				}
			}
		},
		"SetPurchaser": {
			"class": "CDOTA_Item",
			"function": "SetPurchaser",
			"return": "void",
			"description": "Set the purchaser of record for this item.",
			"server": true,
			"params": {
				"hPurchaser": {
					"type": "handle",
					"params_name": "hPurchaser",
					"description": "No Description Set"
				}
			}
		},
		"SetSecondaryCharges": {
			"class": "CDOTA_Item",
			"function": "SetSecondaryCharges",
			"return": "void",
			"description": "Set the number of secondary charges on this item",
			"server": true,
			"params": {
				"iCharges": {
					"type": "int",
					"params_name": "iCharges",
					"description": "No Description Set"
				}
			}
		},
		"SetSellable": {
			"class": "CDOTA_Item",
			"function": "SetSellable",
			"return": "void",
			"server": true,
			"params": {
				"bSellable": {
					"type": "bool",
					"params_name": "bSellable",
					"description": "No Description Set"
				}
			}
		},
		"SetShareability": {
			"class": "CDOTA_Item",
			"function": "SetShareability",
			"return": "void",
			"server": true,
			"params": {
				"iShareability": {
					"type": "int",
					"params_name": "iShareability",
					"description": "No Description Set"
				}
			}
		},
		"SetStacksWithOtherOwners": {
			"class": "CDOTA_Item",
			"function": "SetStacksWithOtherOwners",
			"return": "void",
			"server": true,
			"params": {
				"bStacksWithOtherOwners": {
					"type": "bool",
					"params_name": "bStacksWithOtherOwners",
					"description": "No Description Set"
				}
			}
		},
		"SpendCharge": {
			"class": "CDOTA_Item",
			"function": "SpendCharge",
			"return": "void",
			"server": true,
			"params": {}
		},
		"StacksWithOtherOwners": {
			"class": "CDOTA_Item",
			"function": "StacksWithOtherOwners",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"Think": {
			"class": "CDOTA_Item",
			"function": "Think",
			"return": "void",
			"description": "Think this item",
			"server": true,
			"params": {}
		},
		"extends": "CDOTABaseAbility",
		"variable": ""
	},
	"CDOTA_ItemSpawner": {
		"description": "extends CBaseEntity",
		"GetItemName": {
			"class": "CDOTA_ItemSpawner",
			"function": "GetItemName",
			"return": "string",
			"description": "Returns the item name",
			"server": true,
			"params": {}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CDOTA_Item_DataDriven": {
		"description": "extends CDOTA_Item",
		"ApplyDataDrivenModifier": {
			"class": "CDOTA_Item_DataDriven",
			"function": "ApplyDataDrivenModifier",
			"return": "void",
			"description": "Applies a data driven modifier to the target",
			"server": true,
			"params": {
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "No Description Set"
				},
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				},
				"pszModifierName": {
					"type": "string",
					"params_name": "pszModifierName",
					"description": "No Description Set"
				},
				"hModifierTable": {
					"type": "handle",
					"params_name": "hModifierTable",
					"description": "No Description Set"
				}
			}
		},
		"ApplyDataDrivenThinker": {
			"class": "CDOTA_Item_DataDriven",
			"function": "ApplyDataDrivenThinker",
			"return": "handle",
			"description": "Applies a data driven thinker at the location",
			"server": true,
			"params": {
				"hCaster": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "No Description Set"
				},
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				},
				"pszModifierName": {
					"type": "string",
					"params_name": "pszModifierName",
					"description": "No Description Set"
				},
				"hModifierTable": {
					"type": "handle",
					"params_name": "hModifierTable",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_Item",
		"variable": ""
	},
	"CDOTA_Item_Lua": {
		"description": "extends CDOTA_Item",
		"GetIntrinsicModifierName": {
			"class": "CDOTA_Item_Lua",
			"function": "GetIntrinsicModifierName",
			"return": "string",
			"description": "返回此技能被动给予的修饰器的名称",
			"server": true,
			"example": "function phantom_assassin_blur_imba:GetIntrinsicModifierName()\n\treturn \"modifier_phantom_assassin_blur_imba\"\nend",
			"params": {}
		},
		"CanUnitPickUp": {
			"class": "CDOTA_Item_Lua",
			"function": "CanUnitPickUp",
			"return": "bool",
			"description": "Returns true if this item can be picked up by the target unit.",
			"server": true,
			"example": "function item_crystal:CanUnitPickUp(hUnit)\n\tlocal iPlayerIDCan = GetPlayerID(self)\n\tif - 1 ~= iPlayerIDCan then\n\t\treturn GetPlayerID(hUnit) == iPlayerIDCan\n\tend\n\treturn true\nend",
			"params": {
				"hUnit": {
					"type": "handle",
					"params_name": "hUnit",
					"description": "拾取单位"
				}
			}
		},
		"CastFilterResult": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "CastFilterResult",
			"return": "int",
			"description": "Determine whether an issued command with no target is valid.",
			"server": true,
			"client": true,
			"params": {}
		},
		"CastFilterResultLocation": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "CastFilterResultLocation",
			"return": "int",
			"description": "(Vector vLocation) Determine whether an issued command on a location is valid.",
			"server": true,
			"client": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"CastFilterResultTarget": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "CastFilterResultTarget",
			"return": "int",
			"description": "(HSCRIPT hTarget) Determine whether an issued command on a target is valid.",
			"server": true,
			"client": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"GetAssociatedPrimaryAbilities": {
			"class": "CDOTA_Item_Lua",
			"function": "GetAssociatedPrimaryAbilities",
			"return": "string",
			"description": "Returns abilities that are stolen simultaneously, or otherwise related in functionality.",
			"server": true,
			"params": {}
		},
		"GetAssociatedSecondaryAbilities": {
			"class": "CDOTA_Item_Lua",
			"function": "GetAssociatedSecondaryAbilities",
			"return": "string",
			"description": "Returns other abilities that are stolen simultaneously, or otherwise related in functionality.  Generally hidden abilities.",
			"server": true,
			"params": {}
		},
		"GetBehavior": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetBehavior",
			"return": "int",
			"description": "Return cast behavior type of this ability.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCastRange": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetCastRange",
			"return": "int",
			"description": "Return cast range of this ability.",
			"server": true,
			"client": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				},
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"GetChannelTime": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetChannelTime",
			"return": "float",
			"description": "Return the channel time of this ability.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetChannelledManaCostPerSecond": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetChannelledManaCostPerSecond",
			"return": "int",
			"description": "Return mana cost at the given level per second while channeling (-1 is current).",
			"server": true,
			"client": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetConceptRecipientType": {
			"class": "CDOTA_Item_Lua",
			"function": "GetConceptRecipientType",
			"return": "int",
			"description": "Return who hears speech when this spell is cast.",
			"server": true,
			"params": {}
		},
		"GetCooldown": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetCooldown",
			"return": "float",
			"description": "Return cooldown of this ability.",
			"server": true,
			"client": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetCustomCastError": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetCustomCastError",
			"return": "string",
			"description": "Return the error string of a failed command with no target.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetCustomCastErrorLocation": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetCustomCastErrorLocation",
			"return": "string",
			"description": "(Vector vLocation) Return the error string of a failed command on a location.",
			"server": true,
			"client": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"GetCustomCastErrorTarget": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetCustomCastErrorTarget",
			"return": "string",
			"description": "(HSCRIPT hTarget) Return the error string of a failed command on a target.",
			"server": true,
			"client": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldCost": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetGoldCost",
			"return": "int",
			"description": "Return gold cost at the given level (-1 is current).",
			"server": true,
			"client": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetManaCost": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "GetManaCost",
			"return": "int",
			"description": "Return mana cost at the given level (-1 is current).",
			"server": true,
			"client": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"GetPlaybackRateOverride": {
			"class": "CDOTA_Item_Lua",
			"function": "GetPlaybackRateOverride",
			"return": "float",
			"description": "Return the animation rate of the cast animation.",
			"server": true,
			"params": {}
		},
		"IsHiddenAbilityCastable": {
			"class": "CDOTA_Item_Lua",
			"function": "IsHiddenAbilityCastable",
			"return": "bool",
			"description": "Returns true if this ability can be used when not on the action panel.",
			"server": true,
			"params": {}
		},
		"IsHiddenWhenStolen": {
			"class": "CDOTA_Item_Lua",
			"function": "IsHiddenWhenStolen",
			"return": "bool",
			"description": "Returns true if this ability is hidden when stolen by Spell Steal.",
			"server": true,
			"params": {}
		},
		"IsMuted": {
			"class": "CDOTA_Item_Lua",
			"class_cl": "C_DOTA_Item_Lua",
			"function": "IsMuted",
			"return": "bool",
			"description": "Returns whether this item is muted or not.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsRefreshable": {
			"class": "CDOTA_Item_Lua",
			"function": "IsRefreshable",
			"return": "bool",
			"description": "Returns true if this ability is refreshed by Refresher Orb.",
			"server": true,
			"params": {}
		},
		"IsStealable": {
			"class": "CDOTA_Item_Lua",
			"function": "IsStealable",
			"return": "bool",
			"description": "Returns true if this ability can be stolen by Spell Steal.",
			"server": true,
			"params": {}
		},
		"OnAbilityPhaseInterrupted": {
			"class": "CDOTA_Item_Lua",
			"function": "OnAbilityPhaseInterrupted",
			"return": "void",
			"description": "Cast time did not complete successfully.",
			"server": true,
			"params": {}
		},
		"OnAbilityPhaseStart": {
			"class": "CDOTA_Item_Lua",
			"function": "OnAbilityPhaseStart",
			"return": "bool",
			"description": "Cast time begins (return true for successful cast).",
			"server": true,
			"params": {}
		},
		"OnChannelFinish": {
			"class": "CDOTA_Item_Lua",
			"function": "OnChannelFinish",
			"return": "void",
			"description": "(bool bInterrupted) Channel finished.",
			"server": true,
			"params": {
				"bInterrupted": {
					"type": "bool",
					"params_name": "bInterrupted",
					"description": "No Description Set"
				}
			}
		},
		"OnChannelThink": {
			"class": "CDOTA_Item_Lua",
			"function": "OnChannelThink",
			"return": "void",
			"description": "(float flInterval) Channeling is taking place.",
			"server": true,
			"params": {
				"flInterval": {
					"type": "float",
					"params_name": "flInterval",
					"description": "No Description Set"
				}
			}
		},
		"OnChargeCountChanged": {
			"class": "CDOTA_Item_Lua",
			"function": "OnChargeCountChanged",
			"return": "void",
			"description": "Runs when item`s charge count changes.",
			"server": true,
			"params": {}
		},
		"OnHeroCalculateStatBonus": {
			"class": "CDOTA_Item_Lua",
			"function": "OnHeroCalculateStatBonus",
			"return": "void",
			"description": "Caster (hero only) gained a level, skilled an ability, or received a new stat bonus.",
			"server": true,
			"params": {}
		},
		"OnHeroDiedNearby": {
			"class": "CDOTA_Item_Lua",
			"function": "OnHeroDiedNearby",
			"return": "void",
			"description": "A hero has died in the vicinity (ie Urn), takes table of params.",
			"server": true,
			"params": {
				"unit": {
					"type": "handle",
					"params_name": "unit",
					"description": "No Description Set"
				},
				"attacker": {
					"type": "handle",
					"params_name": "attacker",
					"description": "No Description Set"
				},
				"table": {
					"type": "handle",
					"params_name": "table",
					"description": "No Description Set"
				}
			}
		},
		"OnHeroLevelUp": {
			"class": "CDOTA_Item_Lua",
			"function": "OnHeroLevelUp",
			"return": "void",
			"description": "Caster gained a level.",
			"server": true,
			"params": {}
		},
		"OnInventoryContentsChanged": {
			"class": "CDOTA_Item_Lua",
			"function": "OnInventoryContentsChanged",
			"return": "void",
			"description": "Caster inventory changed.",
			"server": true,
			"params": {}
		},
		"OnItemEquipped": {
			"class": "CDOTA_Item_Lua",
			"function": "OnItemEquipped",
			"return": "void",
			"description": "( HSCRIPT hItem ) Caster equipped item.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"OnOwnerDied": {
			"class": "CDOTA_Item_Lua",
			"function": "OnOwnerDied",
			"return": "void",
			"description": "Caster died.",
			"server": true,
			"params": {}
		},
		"OnOwnerSpawned": {
			"class": "CDOTA_Item_Lua",
			"function": "OnOwnerSpawned",
			"return": "void",
			"description": "Caster respawned or spawned for the first time.",
			"server": true,
			"params": {}
		},
		"OnProjectileHit": {
			"class": "CDOTA_Item_Lua",
			"function": "OnProjectileHit",
			"return": "bool",
			"description": "(HSCRIPT hTarget, Vector vLocation) Projectile has collided with a given target or reached its destination (target is invalid).",
			"server": true,
			"params": {
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				},
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"OnProjectileThink": {
			"class": "CDOTA_Item_Lua",
			"function": "OnProjectileThink",
			"return": "void",
			"description": "(Vector vLocation) Projectile is actively moving.",
			"server": true,
			"params": {
				"vLocation": {
					"type": "Vector",
					"params_name": "vLocation",
					"description": "No Description Set"
				}
			}
		},
		"OnSpellStart": {
			"class": "CDOTA_Item_Lua",
			"function": "OnSpellStart",
			"return": "void",
			"description": "Cast time finished, spell effects begin.",
			"server": true,
			"params": {}
		},
		"OnStolen": {
			"class": "CDOTA_Item_Lua",
			"function": "OnStolen",
			"return": "void",
			"description": "( HSCRIPT hAbility ) Special behavior when stolen by Spell Steal.",
			"server": true,
			"params": {
				"hSourceAbility": {
					"type": "handle",
					"params_name": "hSourceAbility",
					"description": "No Description Set"
				}
			}
		},
		"OnToggle": {
			"class": "CDOTA_Item_Lua",
			"function": "OnToggle",
			"return": "void",
			"description": "Ability is toggled on/off.",
			"server": true,
			"params": {}
		},
		"OnUnStolen": {
			"class": "CDOTA_Item_Lua",
			"function": "OnUnStolen",
			"return": "void",
			"description": "Special behavior when lost by Spell Steal.",
			"server": true,
			"params": {}
		},
		"OnUpgrade": {
			"class": "CDOTA_Item_Lua",
			"function": "OnUpgrade",
			"return": "void",
			"description": "Ability gained a level.",
			"server": true,
			"params": {}
		},
		"ProcsMagicStick": {
			"class": "CDOTA_Item_Lua",
			"function": "ProcsMagicStick",
			"return": "bool",
			"description": "Returns true if this ability will generate magic stick charges for nearby enemies.",
			"server": true,
			"params": {}
		},
		"SpeakTrigger": {
			"class": "CDOTA_Item_Lua",
			"function": "SpeakTrigger",
			"return": "int",
			"description": "Return the type of speech used.",
			"server": true,
			"params": {}
		},
		"extends": "CDOTA_Item",
		"variable": ""
	},
	"CDOTA_Item_Physical": {
		"description": "extends CBaseAnimating",
		"GetContainedItem": {
			"class": "CDOTA_Item_Physical",
			"function": "GetContainedItem",
			"return": "handle",
			"description": "Returned the contained item.",
			"server": true,
			"params": {}
		},
		"GetCreationTime": {
			"class": "CDOTA_Item_Physical",
			"function": "GetCreationTime",
			"return": "float",
			"description": "Returns the game time when this item was created in the world",
			"server": true,
			"params": {}
		},
		"SetContainedItem": {
			"class": "CDOTA_Item_Physical",
			"function": "SetContainedItem",
			"return": "void",
			"description": "Set the contained item.",
			"server": true,
			"params": {
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseAnimating",
		"variable": ""
	},
	"CDOTA_MapTree": {
		"description": "extends CBaseEntity",
		"CutDown": {
			"class": "CDOTA_MapTree",
			"function": "CutDown",
			"return": "void",
			"description": "Cuts down this tree. Parameters: int nTeamNumberKnownTo (-1 = invalid team)",
			"server": true,
			"params": {
				"nTeamNumberKnownTo": {
					"type": "int",
					"params_name": "nTeamNumberKnownTo",
					"description": "No Description Set"
				}
			}
		},
		"CutDownRegrowAfter": {
			"class": "CDOTA_MapTree",
			"function": "CutDownRegrowAfter",
			"return": "void",
			"description": "Cuts down this tree. Parameters: float flRegrowAfter (-1 = never regrow), int nTeamNumberKnownTo (-1 = invalid team)",
			"server": true,
			"params": {
				"flRegrowAfter": {
					"type": "float",
					"params_name": "flRegrowAfter",
					"description": "No Description Set"
				},
				"nTeamNumberKnownTo": {
					"type": "int",
					"params_name": "nTeamNumberKnownTo",
					"description": "No Description Set"
				}
			}
		},
		"GrowBack": {
			"class": "CDOTA_MapTree",
			"function": "GrowBack",
			"return": "void",
			"description": "Grows back the tree if it was cut down.",
			"server": true,
			"params": {}
		},
		"IsStanding": {
			"class": "CDOTA_MapTree",
			"function": "IsStanding",
			"return": "bool",
			"description": "Returns true if the tree is standing, false if it has been cut down",
			"server": true,
			"params": {}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CDOTA_Modifier_Lua": {
		"description": "extends CDOTA_Buff",
		"SetHasCustomTransmitterData": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "SetHasCustomTransmitterData",
			"return": "void",
			"description": "需要配合AddCustomTransmitterData、HandleCustomTransmitterData这两个函数一起使用。AddCustomTransmitterData在Server端返回需要传递的数据。HandleCustomTransmitterData在Client端接受传递过来的数据（会被像nettable一样处理）",
			"server": true,
			"client": true,
			"example": "function public:AddCustomTransmitterData()\n\treturn {\n\t\ta = 1,\n\t}\nend\nfunction public:HandleCustomTransmitterData(tData)\n\tlocal value = tData.a\nend\n\nfunction public:OnCreated(params)\n\tself:SetHasCustomTransmitterData(true)\nend",
			"params": {
				"bHasCustomData": {
					"type": "bool",
					"params_name": "bHasCustomData",
					"description": "No Description Set"
				}
			}
		},
		"IsPurgable": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "IsPurgable",
			"return": "bool",
			"description": "True/false ，该修饰器可以/不可以被弱驱散净化。默认false。",
			"server": true,
			"client": true,
			"example": "undefined",
			"params": {}
		},
		"DeclareFunctions": {
			"class": "CDOTA_Modifier_Lua",
			"type": "custom_note",
			"function": "DeclareFunctions",
			"return": "table",
			"description": "申明函数，注册修饰器使用的属性。",
			"server": true,
			"client": true,
			"example": "function modifier_lina_1:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT\n\t}\nend",
			"params": {}
		},
		"AddCustomTransmitterData": {
			"class": "CDOTA_Modifier_Lua",
			"type": "custom_note",
			"function": "AddCustomTransmitterData",
			"return": "table",
			"description": "在Server端添加自定义数据传送到Client端。HandleCustomTransmitterData在Client端接受传递过来的数据",
			"server": true,
			"example": "function public:AddCustomTransmitterData()\n    return {\n        a = 1,\n    }\nend\nfunction public:HandleCustomTransmitterData(tData)\n    local value = tData.a\nend\n\nfunction public:OnCreated(params)\n    self:SetHasCustomTransmitterData(true)\nend",
			"params": {}
		},
		"HandleCustomTransmitterData": {
			"class": "CDOTA_Modifier_Lua",
			"type": "custom_note",
			"function": "HandleCustomTransmitterData",
			"return": "table",
			"description": "在Server端添加自定义数据传送到Client端。HandleCustomTransmitterData在Client端接受传递过来的数据",
			"server": true,
			"example": "function modifier_lina_1:HandleCustomTransmitterData(tData)\n\tlocal value = tData.armor\nend",
			"params": {}
		},
		"CheckState": {
			"class": "CDOTA_Modifier_Lua",
			"type": "custom_note",
			"function": "CheckState",
			"return": "table",
			"description": "该修饰器包含的状态。晕眩、沉默、缴械等等。高优先级的修饰器状态会覆盖低优先级的修饰器状态。",
			"server": true,
			"client": true,
			"example": "function modifier_lina_1:CheckState()\n\treturn {\n\t\t[MODIFIER_STATE_CANNOT_MISS] = true\n\t}\nend",
			"params": {}
		},
		"AllowIllusionDuplicate": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "AllowIllusionDuplicate",
			"return": "bool",
			"description": "True/false if this modifier is active on illusions.",
			"server": true,
			"client": true,
			"params": {}
		},
		"CanParentBeAutoAttacked": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "CanParentBeAutoAttacked",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"DestroyOnExpire": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "DestroyOnExpire",
			"return": "bool",
			"description": "True/false if this buff is removed when the duration expires.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAttributes": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetAttributes",
			"return": "int",
			"description": "Return the types of attributes applied to this modifier (enum value from DOTAModifierAttribute_t",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAuraDuration": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetAuraDuration",
			"return": "float",
			"description": "Returns aura stickiness",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAuraEntityReject": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetAuraEntityReject",
			"return": "bool",
			"description": "Return true/false if this entity should receive the aura under specific conditions",
			"server": true,
			"client": true,
			"params": {
				"hEntity": {
					"type": "handle",
					"params_name": "hEntity",
					"description": "No Description Set"
				}
			}
		},
		"GetAuraRadius": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetAuraRadius",
			"return": "int",
			"description": "Return the range around the parent this aura tries to apply its buff.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAuraSearchFlags": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetAuraSearchFlags",
			"return": "int",
			"description": "Return the unit flags this aura respects when placing buffs.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAuraSearchTeam": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetAuraSearchTeam",
			"return": "int",
			"description": "Return the teams this aura applies its buff to.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetAuraSearchType": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetAuraSearchType",
			"return": "int",
			"description": "Return the unit classifications this aura applies its buff to.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetEffectAttachType": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetEffectAttachType",
			"return": "int",
			"description": "Return the attach type of the particle system from GetEffectName.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetEffectName": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetEffectName",
			"return": "string",
			"description": "Return the name of the particle system that is created while this modifier is active.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetHeroEffectName": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetHeroEffectName",
			"return": "string",
			"description": "Return the name of the hero effect particle system that is created while this modifier is active.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetModifierAura": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetModifierAura",
			"return": "string",
			"description": "The name of the secondary modifier that will be applied by this modifier (if it is an aura).",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetPriority": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetPriority",
			"return": "int",
			"description": "Return the priority order this modifier will be applied over others.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetStatusEffectName": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetStatusEffectName",
			"return": "string",
			"description": "Return the name of the status effect particle system that is created while this modifier is active.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetTexture": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "GetTexture",
			"return": "string",
			"description": "Return the name of the buff icon to be shown for this modifier.",
			"server": true,
			"client": true,
			"params": {}
		},
		"HeroEffectPriority": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "HeroEffectPriority",
			"return": "int",
			"description": "Relationship of this hero effect with those from other buffs (higher is more likely to be shown).",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsAura": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "IsAura",
			"return": "bool",
			"description": "True/false if this modifier is an aura.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsAuraActiveOnDeath": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "IsAuraActiveOnDeath",
			"return": "bool",
			"description": "True/false if this aura provides buffs when the parent is dead.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsDebuff": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "IsDebuff",
			"return": "bool",
			"description": "True/false if this modifier should be displayed as a debuff.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsHidden": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "IsHidden",
			"return": "bool",
			"description": "True/false if this modifier should be displayed on the buff bar.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsPermanent": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "IsPermanent",
			"return": "bool",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsPurgeException": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "IsPurgeException",
			"return": "bool",
			"description": "True/false if this modifier can be purged by strong dispels.",
			"server": true,
			"client": true,
			"params": {}
		},
		"IsStunDebuff": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "IsStunDebuff",
			"return": "bool",
			"description": "True/false if this modifier is considered a stun for purge reasons.",
			"server": true,
			"client": true,
			"params": {}
		},
		"OnCreated": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "OnCreated",
			"return": "void",
			"description": "Runs when the modifier is created.",
			"server": true,
			"client": true,
			"params": {
				"table": {
					"type": "handle",
					"params_name": "table",
					"description": "No Description Set"
				}
			}
		},
		"OnDestroy": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "OnDestroy",
			"return": "void",
			"description": "Runs when the modifier is destroyed (after unit loses modifier).",
			"server": true,
			"client": true,
			"params": {}
		},
		"OnIntervalThink": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "OnIntervalThink",
			"return": "void",
			"description": "Runs when the think interval occurs.",
			"server": true,
			"client": true,
			"params": {}
		},
		"OnRefresh": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "OnRefresh",
			"return": "void",
			"description": "Runs when the modifier is refreshed.",
			"server": true,
			"client": true,
			"params": {
				"table": {
					"type": "handle",
					"params_name": "table",
					"description": "No Description Set"
				}
			}
		},
		"OnRemoved": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "OnRemoved",
			"return": "void",
			"description": "Runs when the modifier is destroyed (before unit loses modifier).",
			"server": true,
			"client": true,
			"params": {}
		},
		"OnStackCountChanged": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "OnStackCountChanged",
			"return": "void",
			"description": "当叠加层数改变时调用，参数为改变前的叠加层数",
			"server": true,
			"client": true,
			"params": {
				"iStackCount": {
					"type": "int",
					"params_name": "iStackCount",
					"description": "改变前的叠加层数"
				}
			}
		},
		"RemoveOnDeath": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "RemoveOnDeath",
			"return": "bool",
			"description": "True/false if this modifier is removed when the parent dies.",
			"server": true,
			"client": true,
			"params": {}
		},
		"ShouldUseOverheadOffset": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "ShouldUseOverheadOffset",
			"return": "bool",
			"description": "Apply the overhead offset to the attached effect.",
			"server": true,
			"client": true,
			"params": {}
		},
		"StatusEffectPriority": {
			"class": "CDOTA_Modifier_Lua",
			"class_cl": "C_DOTA_Modifier_Lua",
			"function": "StatusEffectPriority",
			"return": "int",
			"description": "Relationship of this status effect with those from other buffs (higher is more likely to be shown).",
			"server": true,
			"client": true,
			"params": {}
		},
		"extends": "CDOTA_Buff",
		"variable": ""
	},
	"CDOTA_Modifier_Lua_Horizontal_Motion": {
		"description": "extends CDOTA_Modifier_Lua",
		"ApplyHorizontalMotionController": {
			"class": "CDOTA_Modifier_Lua_Horizontal_Motion",
			"function": "ApplyHorizontalMotionController",
			"return": "bool",
			"description": "Starts the horizontal motion controller effects for this buff.  Returns true if successful.",
			"server": true,
			"params": {}
		},
		"GetPriority": {
			"class": "CDOTA_Modifier_Lua_Horizontal_Motion",
			"function": "GetPriority",
			"return": "int",
			"description": "Get the priority",
			"server": true,
			"params": {}
		},
		"OnHorizontalMotionInterrupted": {
			"class": "CDOTA_Modifier_Lua_Horizontal_Motion",
			"class_cl": "CDOTA_Modifier_Lua_Horizontal_Motion",
			"function": "OnHorizontalMotionInterrupted",
			"return": "void",
			"description": "Called when the motion gets interrupted.",
			"server": true,
			"client": true,
			"params": {}
		},
		"SetPriority": {
			"class": "CDOTA_Modifier_Lua_Horizontal_Motion",
			"function": "SetPriority",
			"return": "void",
			"description": "Set the priority",
			"server": true,
			"params": {
				"nMotionPriority": {
					"type": "int",
					"params_name": "nMotionPriority",
					"description": "No Description Set"
				}
			}
		},
		"UpdateHorizontalMotion": {
			"class": "CDOTA_Modifier_Lua_Horizontal_Motion",
			"class_cl": "CDOTA_Modifier_Lua_Horizontal_Motion",
			"function": "UpdateHorizontalMotion",
			"return": "void",
			"description": "Perform any motion from the given interval on the NPC. UpdateHorizontalMotion先运行，UpdateVerticalMotion后运行。",
			"server": true,
			"client": true,
			"params": {
				"me": {
					"type": "handle",
					"params_name": "me",
					"description": "No Description Set"
				},
				"dt": {
					"type": "float",
					"params_name": "dt",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_Modifier_Lua",
		"variable": ""
	},
	"CDOTA_Modifier_Lua_Motion_Both": {
		"description": "extends CDOTA_Modifier_Lua",
		"ApplyHorizontalMotionController": {
			"class": "CDOTA_Modifier_Lua_Motion_Both",
			"function": "ApplyHorizontalMotionController",
			"return": "bool",
			"description": "Starts the horizontal motion controller effects for this buff.  Returns true if successful.",
			"server": true,
			"params": {}
		},
		"ApplyVerticalMotionController": {
			"class": "CDOTA_Modifier_Lua_Motion_Both",
			"function": "ApplyVerticalMotionController",
			"return": "bool",
			"description": "Starts the vertical motion controller effects for this buff.  Returns true if successful.",
			"server": true,
			"params": {}
		},
		"GetPriority": {
			"class": "CDOTA_Modifier_Lua_Motion_Both",
			"function": "GetPriority",
			"return": "int",
			"description": "Get the priority",
			"server": true,
			"params": {}
		},
		"OnHorizontalMotionInterrupted": {
			"class": "CDOTA_Modifier_Lua_Motion_Both",
			"class_cl": "CDOTA_Modifier_Lua_Motion_Both",
			"function": "OnHorizontalMotionInterrupted",
			"return": "void",
			"description": "Called when the motion gets interrupted.",
			"server": true,
			"client": true,
			"params": {}
		},
		"OnVerticalMotionInterrupted": {
			"class": "CDOTA_Modifier_Lua_Motion_Both",
			"class_cl": "CDOTA_Modifier_Lua_Motion_Both",
			"function": "OnVerticalMotionInterrupted",
			"return": "void",
			"description": "Called when the motion gets interrupted.",
			"server": true,
			"client": true,
			"params": {}
		},
		"SetPriority": {
			"class": "CDOTA_Modifier_Lua_Motion_Both",
			"function": "SetPriority",
			"return": "void",
			"description": "Set the priority",
			"server": true,
			"params": {
				"nMotionPriority": {
					"type": "int",
					"params_name": "nMotionPriority",
					"description": "No Description Set"
				}
			}
		},
		"UpdateHorizontalMotion": {
			"class": "CDOTA_Modifier_Lua_Motion_Both",
			"class_cl": "CDOTA_Modifier_Lua_Motion_Both",
			"function": "UpdateHorizontalMotion",
			"return": "void",
			"description": "Perform any motion from the given interval on the NPC.",
			"server": true,
			"client": true,
			"params": {
				"me": {
					"type": "handle",
					"params_name": "me",
					"description": "No Description Set"
				},
				"dt": {
					"type": "float",
					"params_name": "dt",
					"description": "No Description Set"
				}
			}
		},
		"UpdateVerticalMotion": {
			"class": "CDOTA_Modifier_Lua_Motion_Both",
			"class_cl": "CDOTA_Modifier_Lua_Motion_Both",
			"function": "UpdateVerticalMotion",
			"return": "void",
			"description": "Perform any motion from the given interval on the NPC.",
			"server": true,
			"client": true,
			"params": {
				"me": {
					"type": "handle",
					"params_name": "me",
					"description": "No Description Set"
				},
				"dt": {
					"type": "float",
					"params_name": "dt",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_Modifier_Lua",
		"variable": ""
	},
	"CDOTA_Modifier_Lua_Vertical_Motion": {
		"description": "extends CDOTA_Modifier_Lua",
		"ApplyVerticalMotionController": {
			"class": "CDOTA_Modifier_Lua_Vertical_Motion",
			"function": "ApplyVerticalMotionController",
			"return": "bool",
			"description": "Starts the vertical motion controller effects for this buff.  Returns true if successful.",
			"server": true,
			"params": {}
		},
		"GetMotionPriority": {
			"class": "CDOTA_Modifier_Lua_Vertical_Motion",
			"function": "GetMotionPriority",
			"return": "int",
			"description": "Get the priority",
			"server": true,
			"params": {}
		},
		"OnVerticalMotionInterrupted": {
			"class": "CDOTA_Modifier_Lua_Vertical_Motion",
			"class_cl": "CDOTA_Modifier_Lua_Vertical_Motion",
			"function": "OnVerticalMotionInterrupted",
			"return": "void",
			"description": "Called when the motion gets interrupted.",
			"server": true,
			"client": true,
			"params": {}
		},
		"SetMotionPriority": {
			"class": "CDOTA_Modifier_Lua_Vertical_Motion",
			"function": "SetMotionPriority",
			"return": "void",
			"description": "Set the priority",
			"server": true,
			"params": {
				"nMotionPriority": {
					"type": "int",
					"params_name": "nMotionPriority",
					"description": "No Description Set"
				}
			}
		},
		"UpdateVerticalMotion": {
			"class": "CDOTA_Modifier_Lua_Vertical_Motion",
			"class_cl": "CDOTA_Modifier_Lua_Vertical_Motion",
			"function": "UpdateVerticalMotion",
			"return": "void",
			"description": "Perform any motion from the given interval on the NPC.",
			"server": true,
			"client": true,
			"params": {
				"me": {
					"type": "handle",
					"params_name": "me",
					"description": "No Description Set"
				},
				"dt": {
					"type": "float",
					"params_name": "dt",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_Modifier_Lua",
		"variable": ""
	},
	"CDOTA_PlayerResource": {
		"description": "extends CBaseEntity",
		"SetUnitShareMaskForPlayer": {
			"class": "CDOTA_PlayerResource",
			"function": "SetUnitShareMaskForPlayer",
			"return": "void",
			"description": "nFlag:\n1 - 共享英雄\n2 - 共享单位\n4 - 队友帮助",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"nOtherPlayerID": {
					"type": "int",
					"params_name": "nOtherPlayerID",
					"description": "No Description Set"
				},
				"nFlag": {
					"type": "int",
					"params_name": "nFlag",
					"description": "No Description Set"
				},
				"bState": {
					"type": "bool",
					"params_name": "bState",
					"description": "No Description Set"
				}
			}
		},
		"AddAegisPickup": {
			"class": "CDOTA_PlayerResource",
			"function": "AddAegisPickup",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"AddCandyEvent": {
			"class": "CDOTA_PlayerResource",
			"function": "AddCandyEvent",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"nReason": {
					"type": "int",
					"params_name": "nReason",
					"description": "No Description Set"
				}
			}
		},
		"AddClaimedFarm": {
			"class": "CDOTA_PlayerResource",
			"function": "AddClaimedFarm",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"flFarmValue": {
					"type": "float",
					"params_name": "flFarmValue",
					"description": "No Description Set"
				},
				"bEarnedValue": {
					"type": "bool",
					"params_name": "bEarnedValue",
					"description": "No Description Set"
				}
			}
		},
		"AddGoldSpentOnSupport": {
			"class": "CDOTA_PlayerResource",
			"function": "AddGoldSpentOnSupport",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iCost": {
					"type": "int",
					"params_name": "iCost",
					"description": "No Description Set"
				}
			}
		},
		"AddNeutralItemToStash": {
			"class": "CDOTA_PlayerResource",
			"function": "AddNeutralItemToStash",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"nTeamNumber": {
					"type": "int",
					"params_name": "nTeamNumber",
					"description": "No Description Set"
				},
				"hItem": {
					"type": "handle",
					"params_name": "hItem",
					"description": "No Description Set"
				}
			}
		},
		"AddRunePickup": {
			"class": "CDOTA_PlayerResource",
			"function": "AddRunePickup",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"AreUnitsSharedWithPlayerID": {
			"class": "CDOTA_PlayerResource",
			"function": "AreUnitsSharedWithPlayerID",
			"return": "bool",
			"server": true,
			"params": {
				"nUnitOwnerPlayerID": {
					"type": "int",
					"params_name": "nUnitOwnerPlayerID",
					"description": "No Description Set"
				},
				"nOtherPlayerID": {
					"type": "int",
					"params_name": "nOtherPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"CanRepick": {
			"class": "CDOTA_PlayerResource",
			"function": "CanRepick",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"ClearKillsMatrix": {
			"class": "CDOTA_PlayerResource",
			"function": "ClearKillsMatrix",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"ClearLastHitMultikill": {
			"class": "CDOTA_PlayerResource",
			"function": "ClearLastHitMultikill",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"ClearLastHitStreak": {
			"class": "CDOTA_PlayerResource",
			"function": "ClearLastHitStreak",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"ClearRawPlayerDamageMatrix": {
			"class": "CDOTA_PlayerResource",
			"function": "ClearRawPlayerDamageMatrix",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"ClearStreak": {
			"class": "CDOTA_PlayerResource",
			"function": "ClearStreak",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetAegisPickups": {
			"class": "CDOTA_PlayerResource",
			"function": "GetAegisPickups",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetAssists": {
			"class": "CDOTA_PlayerResource",
			"function": "GetAssists",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetBroadcasterChannel": {
			"class": "CDOTA_PlayerResource",
			"function": "GetBroadcasterChannel",
			"return": "unsigned",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetBroadcasterChannelSlot": {
			"class": "CDOTA_PlayerResource",
			"function": "GetBroadcasterChannelSlot",
			"return": "unsigned",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetClaimedDenies": {
			"class": "CDOTA_PlayerResource",
			"function": "GetClaimedDenies",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetClaimedFarm": {
			"class": "CDOTA_PlayerResource",
			"function": "GetClaimedFarm",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"bOnlyEarned": {
					"type": "bool",
					"params_name": "bOnlyEarned",
					"description": "No Description Set"
				}
			}
		},
		"GetClaimedMisses": {
			"class": "CDOTA_PlayerResource",
			"function": "GetClaimedMisses",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetConnectionState": {
			"class": "CDOTA_PlayerResource",
			"function": "GetConnectionState",
			"return": "unknown",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetCreepDamageTaken": {
			"class": "CDOTA_PlayerResource",
			"function": "GetCreepDamageTaken",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"bTotal": {
					"type": "bool",
					"params_name": "bTotal",
					"description": "No Description Set"
				}
			}
		},
		"GetCustomBuybackCooldown": {
			"class": "CDOTA_PlayerResource",
			"function": "GetCustomBuybackCooldown",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetCustomBuybackCost": {
			"class": "CDOTA_PlayerResource",
			"function": "GetCustomBuybackCost",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetCustomTeamAssignment": {
			"class": "CDOTA_PlayerResource",
			"function": "GetCustomTeamAssignment",
			"return": "int",
			"description": "Get the current custom team assignment for this player.",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetDamageDoneToHero": {
			"class": "CDOTA_PlayerResource",
			"function": "GetDamageDoneToHero",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iVictimID": {
					"type": "int",
					"params_name": "iVictimID",
					"description": "No Description Set"
				}
			}
		},
		"GetDeaths": {
			"class": "CDOTA_PlayerResource",
			"function": "GetDeaths",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetDenies": {
			"class": "CDOTA_PlayerResource",
			"function": "GetDenies",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetEventGameCustomActionClaimCount": {
			"class": "CDOTA_PlayerResource",
			"function": "GetEventGameCustomActionClaimCount",
			"return": "int",
			"description": "(nPlayerID, nActionID)",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"unActionID": {
					"type": "unsigned",
					"params_name": "unActionID",
					"description": "No Description Set"
				}
			}
		},
		"GetEventGameCustomActionClaimCountByName": {
			"class": "CDOTA_PlayerResource",
			"function": "GetEventGameCustomActionClaimCountByName",
			"return": "int",
			"description": "(nPlayerID, pActionName)",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"pActionName": {
					"type": "string",
					"params_name": "pActionName",
					"description": "No Description Set"
				}
			}
		},
		"GetEventPointsForPlayerID": {
			"class": "CDOTA_PlayerResource",
			"function": "GetEventPointsForPlayerID",
			"return": "unsigned",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetEventPremiumPoints": {
			"class": "CDOTA_PlayerResource",
			"function": "GetEventPremiumPoints",
			"return": "unsigned",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetEventRanks": {
			"class": "CDOTA_PlayerResource",
			"function": "GetEventRanks",
			"return": "unknown",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetGold": {
			"class": "CDOTA_PlayerResource",
			"function": "GetGold",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldLostToDeath": {
			"class": "CDOTA_PlayerResource",
			"function": "GetGoldLostToDeath",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldPerMin": {
			"class": "CDOTA_PlayerResource",
			"function": "GetGoldPerMin",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldSpentOnBuybacks": {
			"class": "CDOTA_PlayerResource",
			"function": "GetGoldSpentOnBuybacks",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldSpentOnConsumables": {
			"class": "CDOTA_PlayerResource",
			"function": "GetGoldSpentOnConsumables",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldSpentOnItems": {
			"class": "CDOTA_PlayerResource",
			"function": "GetGoldSpentOnItems",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetGoldSpentOnSupport": {
			"class": "CDOTA_PlayerResource",
			"function": "GetGoldSpentOnSupport",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetHealing": {
			"class": "CDOTA_PlayerResource",
			"function": "GetHealing",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetHeroDamageTaken": {
			"class": "CDOTA_PlayerResource",
			"function": "GetHeroDamageTaken",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"bTotal": {
					"type": "bool",
					"params_name": "bTotal",
					"description": "No Description Set"
				}
			}
		},
		"GetKills": {
			"class": "CDOTA_PlayerResource",
			"function": "GetKills",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetKillsDoneToHero": {
			"class": "CDOTA_PlayerResource",
			"function": "GetKillsDoneToHero",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iVictimID": {
					"type": "int",
					"params_name": "iVictimID",
					"description": "No Description Set"
				}
			}
		},
		"GetLastHitMultikill": {
			"class": "CDOTA_PlayerResource",
			"function": "GetLastHitMultikill",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetLastHitStreak": {
			"class": "CDOTA_PlayerResource",
			"function": "GetLastHitStreak",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetLastHits": {
			"class": "CDOTA_PlayerResource",
			"function": "GetLastHits",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetLevel": {
			"class": "CDOTA_PlayerResource",
			"function": "GetLevel",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetLiveSpectatorTeam": {
			"class": "CDOTA_PlayerResource",
			"function": "GetLiveSpectatorTeam",
			"return": "unknown",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetMisses": {
			"class": "CDOTA_PlayerResource",
			"function": "GetMisses",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetNearbyCreepDeaths": {
			"class": "CDOTA_PlayerResource",
			"function": "GetNearbyCreepDeaths",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetNetWorth": {
			"class": "CDOTA_PlayerResource",
			"function": "GetNetWorth",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetNthCourierForTeam": {
			"class": "CDOTA_PlayerResource",
			"function": "GetNthCourierForTeam",
			"return": "handle",
			"server": true,
			"params": {
				"nCourierIndex": {
					"type": "int",
					"params_name": "nCourierIndex",
					"description": "No Description Set"
				},
				"nTeamNumber": {
					"type": "int",
					"params_name": "nTeamNumber",
					"description": "No Description Set"
				}
			}
		},
		"GetNthPlayerIDOnTeam": {
			"class": "CDOTA_PlayerResource",
			"function": "GetNthPlayerIDOnTeam",
			"return": "int",
			"server": true,
			"params": {
				"iTeamNumber": {
					"type": "int",
					"params_name": "iTeamNumber",
					"description": "No Description Set"
				},
				"iNthPlayer": {
					"type": "int",
					"params_name": "iNthPlayer",
					"description": "No Description Set"
				}
			}
		},
		"GetNumConsumablesPurchased": {
			"class": "CDOTA_PlayerResource",
			"function": "GetNumConsumablesPurchased",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetNumCouriersForTeam": {
			"class": "CDOTA_PlayerResource",
			"function": "GetNumCouriersForTeam",
			"return": "int",
			"server": true,
			"params": {
				"nTeamNumber": {
					"type": "int",
					"params_name": "nTeamNumber",
					"description": "No Description Set"
				}
			}
		},
		"GetNumItemsPurchased": {
			"class": "CDOTA_PlayerResource",
			"function": "GetNumItemsPurchased",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetPartyID": {
			"class": "CDOTA_PlayerResource",
			"function": "GetPartyID",
			"return": "uint64",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetPlayer": {
			"class": "CDOTA_PlayerResource",
			"function": "GetPlayer",
			"return": "handle",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetPlayerCount": {
			"class": "CDOTA_PlayerResource",
			"function": "GetPlayerCount",
			"return": "int",
			"description": "Includes spectators and players not assigned to a team",
			"server": true,
			"params": {}
		},
		"GetPlayerCountForTeam": {
			"class": "CDOTA_PlayerResource",
			"function": "GetPlayerCountForTeam",
			"return": "int",
			"server": true,
			"params": {
				"iTeam": {
					"type": "int",
					"params_name": "iTeam",
					"description": "No Description Set"
				}
			}
		},
		"GetPlayerLoadedCompletely": {
			"class": "CDOTA_PlayerResource",
			"function": "GetPlayerLoadedCompletely",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetPlayerName": {
			"class": "CDOTA_PlayerResource",
			"function": "GetPlayerName",
			"return": "string",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetPreferredCourierForPlayer": {
			"class": "CDOTA_PlayerResource",
			"function": "GetPreferredCourierForPlayer",
			"return": "handle",
			"server": true,
			"params": {
				"nPlayerId": {
					"type": "int",
					"params_name": "nPlayerId",
					"description": "No Description Set"
				}
			}
		},
		"GetRawPlayerDamage": {
			"class": "CDOTA_PlayerResource",
			"function": "GetRawPlayerDamage",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetReliableGold": {
			"class": "CDOTA_PlayerResource",
			"function": "GetReliableGold",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetRespawnSeconds": {
			"class": "CDOTA_PlayerResource",
			"function": "GetRespawnSeconds",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetRoshanKills": {
			"class": "CDOTA_PlayerResource",
			"function": "GetRoshanKills",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetRunePickups": {
			"class": "CDOTA_PlayerResource",
			"function": "GetRunePickups",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetSelectedHeroEntity": {
			"class": "CDOTA_PlayerResource",
			"function": "GetSelectedHeroEntity",
			"return": "handle",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetSelectedHeroID": {
			"class": "CDOTA_PlayerResource",
			"function": "GetSelectedHeroID",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetSelectedHeroName": {
			"class": "CDOTA_PlayerResource",
			"function": "GetSelectedHeroName",
			"return": "string",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetSteamAccountID": {
			"class": "CDOTA_PlayerResource",
			"function": "GetSteamAccountID",
			"return": "unsigned",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetSteamID": {
			"class": "CDOTA_PlayerResource",
			"function": "GetSteamID",
			"return": "uint64",
			"description": "Get the 64 bit steam ID for a given player.",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetStreak": {
			"class": "CDOTA_PlayerResource",
			"function": "GetStreak",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetStuns": {
			"class": "CDOTA_PlayerResource",
			"function": "GetStuns",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetTeam": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTeam",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetTeamKills": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTeamKills",
			"return": "int",
			"server": true,
			"params": {
				"iTeam": {
					"type": "int",
					"params_name": "iTeam",
					"description": "No Description Set"
				}
			}
		},
		"GetTeamPlayerCount": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTeamPlayerCount",
			"return": "int",
			"description": "Players on a valid team (radiant, dire, or custom*) who haven`t abandoned the game",
			"server": true,
			"params": {}
		},
		"GetTimeOfLastConsumablePurchase": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTimeOfLastConsumablePurchase",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetTimeOfLastDeath": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTimeOfLastDeath",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetTimeOfLastItemPurchase": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTimeOfLastItemPurchase",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetTotalEarnedGold": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTotalEarnedGold",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetTotalEarnedXP": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTotalEarnedXP",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetTotalGoldSpent": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTotalGoldSpent",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetTowerDamageTaken": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTowerDamageTaken",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"bTotal": {
					"type": "bool",
					"params_name": "bTotal",
					"description": "No Description Set"
				}
			}
		},
		"GetTowerKills": {
			"class": "CDOTA_PlayerResource",
			"function": "GetTowerKills",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetUnitShareMaskForPlayer": {
			"class": "CDOTA_PlayerResource",
			"function": "GetUnitShareMaskForPlayer",
			"return": "int",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"nOtherPlayerID": {
					"type": "int",
					"params_name": "nOtherPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetUnreliableGold": {
			"class": "CDOTA_PlayerResource",
			"function": "GetUnreliableGold",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"GetXPPerMin": {
			"class": "CDOTA_PlayerResource",
			"function": "GetXPPerMin",
			"return": "float",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"HasCustomGameTicketForPlayerID": {
			"class": "CDOTA_PlayerResource",
			"function": "HasCustomGameTicketForPlayerID",
			"return": "bool",
			"description": "Does this player have a custom game ticket for this game?",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"HasRandomed": {
			"class": "CDOTA_PlayerResource",
			"function": "HasRandomed",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"HasSelectedHero": {
			"class": "CDOTA_PlayerResource",
			"function": "HasSelectedHero",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"HasSetEventGameCustomActionClaimCount": {
			"class": "CDOTA_PlayerResource",
			"function": "HasSetEventGameCustomActionClaimCount",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"HaveAllPlayersJoined": {
			"class": "CDOTA_PlayerResource",
			"function": "HaveAllPlayersJoined",
			"return": "bool",
			"server": true,
			"params": {}
		},
		"IncrementAssists": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementAssists",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iVictimID": {
					"type": "int",
					"params_name": "iVictimID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementClaimedDenies": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementClaimedDenies",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementClaimedMisses": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementClaimedMisses",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementDeaths": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementDeaths",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iKillerID": {
					"type": "int",
					"params_name": "iKillerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementDenies": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementDenies",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementKills": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementKills",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iVictimID": {
					"type": "int",
					"params_name": "iVictimID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementLastHitMultikill": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementLastHitMultikill",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementLastHitStreak": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementLastHitStreak",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementLastHits": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementLastHits",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementMisses": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementMisses",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementNearbyCreepDeaths": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementNearbyCreepDeaths",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementStreak": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementStreak",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IncrementTotalEarnedXP": {
			"class": "CDOTA_PlayerResource",
			"function": "IncrementTotalEarnedXP",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iXP": {
					"type": "int",
					"params_name": "iXP",
					"description": "No Description Set"
				},
				"nReason": {
					"type": "int",
					"params_name": "nReason",
					"description": "No Description Set"
				}
			}
		},
		"IsBroadcaster": {
			"class": "CDOTA_PlayerResource",
			"function": "IsBroadcaster",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IsDisableHelpSetForPlayerID": {
			"class": "CDOTA_PlayerResource",
			"function": "IsDisableHelpSetForPlayerID",
			"return": "bool",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"nOtherPlayerID": {
					"type": "int",
					"params_name": "nOtherPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IsFakeClient": {
			"class": "CDOTA_PlayerResource",
			"function": "IsFakeClient",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IsHeroSelected": {
			"class": "CDOTA_PlayerResource",
			"function": "IsHeroSelected",
			"return": "bool",
			"server": true,
			"params": {
				"pHeroname": {
					"type": "string",
					"params_name": "pHeroname",
					"description": "No Description Set"
				},
				"bIgnoreUnrevealedPick": {
					"type": "bool",
					"params_name": "bIgnoreUnrevealedPick",
					"description": "No Description Set"
				}
			}
		},
		"IsHeroSharedWithPlayerID": {
			"class": "CDOTA_PlayerResource",
			"function": "IsHeroSharedWithPlayerID",
			"return": "bool",
			"server": true,
			"params": {
				"nUnitOwnerPlayerID": {
					"type": "int",
					"params_name": "nUnitOwnerPlayerID",
					"description": "No Description Set"
				},
				"nOtherPlayerID": {
					"type": "int",
					"params_name": "nOtherPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IsValidPlayer": {
			"class": "CDOTA_PlayerResource",
			"function": "IsValidPlayer",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IsValidPlayerID": {
			"class": "CDOTA_PlayerResource",
			"function": "IsValidPlayerID",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IsValidTeamPlayer": {
			"class": "CDOTA_PlayerResource",
			"function": "IsValidTeamPlayer",
			"return": "bool",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"IsValidTeamPlayerID": {
			"class": "CDOTA_PlayerResource",
			"function": "IsValidTeamPlayerID",
			"return": "bool",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"ModifyGold": {
			"class": "CDOTA_PlayerResource",
			"function": "ModifyGold",
			"return": "int",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iGoldChange": {
					"type": "int",
					"params_name": "iGoldChange",
					"description": "No Description Set"
				},
				"bReliable": {
					"type": "bool",
					"params_name": "bReliable",
					"description": "No Description Set"
				},
				"nReason": {
					"type": "int",
					"params_name": "nReason",
					"description": "No Description Set"
				}
			}
		},
		"NumPlayers": {
			"class": "CDOTA_PlayerResource",
			"function": "NumPlayers",
			"return": "int",
			"server": true,
			"params": {}
		},
		"NumTeamPlayers": {
			"class": "CDOTA_PlayerResource",
			"function": "NumTeamPlayers",
			"return": "int",
			"server": true,
			"params": {}
		},
		"RecordConsumableAbilityChargeChange": {
			"class": "CDOTA_PlayerResource",
			"function": "RecordConsumableAbilityChargeChange",
			"return": "void",
			"description": "Increment or decrement consumable charges (nPlayerID, item_definition_index, nChargeIncrementOrDecrement)",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"item_definition_index": {
					"type": "int",
					"params_name": "item_definition_index",
					"description": "No Description Set"
				},
				"nChargeIncrementOrDecrement": {
					"type": "int",
					"params_name": "nChargeIncrementOrDecrement",
					"description": "No Description Set"
				}
			}
		},
		"ReplaceHeroWith": {
			"class": "CDOTA_PlayerResource",
			"function": "ReplaceHeroWith",
			"return": "handle",
			"description": "(playerID, heroClassName, gold, XP) - replaces the player`s hero with a new one of the specified class, gold and XP",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"pszHeroClass": {
					"type": "string",
					"params_name": "pszHeroClass",
					"description": "No Description Set"
				},
				"nGold": {
					"type": "int",
					"params_name": "nGold",
					"description": "No Description Set"
				},
				"nXP": {
					"type": "int",
					"params_name": "nXP",
					"description": "No Description Set"
				}
			}
		},
		"ResetBuybackCostTime": {
			"class": "CDOTA_PlayerResource",
			"function": "ResetBuybackCostTime",
			"return": "void",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"ResetTotalEarnedGold": {
			"class": "CDOTA_PlayerResource",
			"function": "ResetTotalEarnedGold",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"SetBuybackCooldownTime": {
			"class": "CDOTA_PlayerResource",
			"function": "SetBuybackCooldownTime",
			"return": "void",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"flBuybackCooldown": {
					"type": "float",
					"params_name": "flBuybackCooldown",
					"description": "No Description Set"
				}
			}
		},
		"SetBuybackGoldLimitTime": {
			"class": "CDOTA_PlayerResource",
			"function": "SetBuybackGoldLimitTime",
			"return": "void",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"flBuybackCooldown": {
					"type": "float",
					"params_name": "flBuybackCooldown",
					"description": "No Description Set"
				}
			}
		},
		"SetCameraTarget": {
			"class": "CDOTA_PlayerResource",
			"function": "SetCameraTarget",
			"return": "void",
			"description": "(playerID, entity) - force the given player`s camera to follow the given entity",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"hTarget": {
					"type": "handle",
					"params_name": "hTarget",
					"description": "No Description Set"
				}
			}
		},
		"SetCanRepick": {
			"class": "CDOTA_PlayerResource",
			"function": "SetCanRepick",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"bCanRepick": {
					"type": "bool",
					"params_name": "bCanRepick",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomBuybackCooldown": {
			"class": "CDOTA_PlayerResource",
			"function": "SetCustomBuybackCooldown",
			"return": "void",
			"description": "Set the buyback cooldown for this player.",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"flCooldownTime": {
					"type": "float",
					"params_name": "flCooldownTime",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomBuybackCost": {
			"class": "CDOTA_PlayerResource",
			"function": "SetCustomBuybackCost",
			"return": "void",
			"description": "Set the buyback cost for this player.",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iGoldCost": {
					"type": "int",
					"params_name": "iGoldCost",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomIntParam": {
			"class": "CDOTA_PlayerResource",
			"function": "SetCustomIntParam",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iParam": {
					"type": "int",
					"params_name": "iParam",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomPlayerColor": {
			"class": "CDOTA_PlayerResource",
			"function": "SetCustomPlayerColor",
			"return": "void",
			"description": "Set custom color for player (minimap, scoreboard, etc)",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"r": {
					"type": "int",
					"params_name": "r",
					"description": "No Description Set"
				},
				"g": {
					"type": "int",
					"params_name": "g",
					"description": "No Description Set"
				},
				"b": {
					"type": "int",
					"params_name": "b",
					"description": "No Description Set"
				}
			}
		},
		"SetCustomTeamAssignment": {
			"class": "CDOTA_PlayerResource",
			"function": "SetCustomTeamAssignment",
			"return": "void",
			"description": "Set custom team assignment for this player.",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iTeamAssignment": {
					"type": "int",
					"params_name": "iTeamAssignment",
					"description": "No Description Set"
				}
			}
		},
		"SetGold": {
			"class": "CDOTA_PlayerResource",
			"function": "SetGold",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iGold": {
					"type": "int",
					"params_name": "iGold",
					"description": "No Description Set"
				},
				"bReliable": {
					"type": "bool",
					"params_name": "bReliable",
					"description": "No Description Set"
				}
			}
		},
		"SetHasRandomed": {
			"class": "CDOTA_PlayerResource",
			"function": "SetHasRandomed",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				}
			}
		},
		"SetLastBuybackTime": {
			"class": "CDOTA_PlayerResource",
			"function": "SetLastBuybackTime",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iLastBuybackTime": {
					"type": "int",
					"params_name": "iLastBuybackTime",
					"description": "No Description Set"
				}
			}
		},
		"SetOverrideSelectionEntity": {
			"class": "CDOTA_PlayerResource",
			"function": "SetOverrideSelectionEntity",
			"return": "void",
			"description": "Set the forced selection entity for a player.",
			"server": true,
			"params": {
				"nPlayerID": {
					"type": "int",
					"params_name": "nPlayerID",
					"description": "No Description Set"
				},
				"hEntity": {
					"type": "handle",
					"params_name": "hEntity",
					"description": "No Description Set"
				}
			}
		},
		"SpendGold": {
			"class": "CDOTA_PlayerResource",
			"function": "SpendGold",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iCost": {
					"type": "int",
					"params_name": "iCost",
					"description": "No Description Set"
				},
				"iReason": {
					"type": "int",
					"params_name": "iReason",
					"description": "No Description Set"
				}
			}
		},
		"UpdateTeamSlot": {
			"class": "CDOTA_PlayerResource",
			"function": "UpdateTeamSlot",
			"return": "void",
			"server": true,
			"params": {
				"iPlayerID": {
					"type": "int",
					"params_name": "iPlayerID",
					"description": "No Description Set"
				},
				"iTeamNumber": {
					"type": "int",
					"params_name": "iTeamNumber",
					"description": "No Description Set"
				},
				"desiredSlot": {
					"type": "int",
					"params_name": "desiredSlot",
					"description": "No Description Set"
				}
			}
		},
		"WhoSelectedHero": {
			"class": "CDOTA_PlayerResource",
			"function": "WhoSelectedHero",
			"return": "int",
			"server": true,
			"params": {
				"pHeroFilename": {
					"type": "string",
					"params_name": "pHeroFilename",
					"description": "No Description Set"
				},
				"bIgnoreUnrevealedPick": {
					"type": "bool",
					"params_name": "bIgnoreUnrevealedPick",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CDOTA_ShopTrigger": {
		"description": "extends CBaseTrigger",
		"GetShopType": {
			"class": "CDOTA_ShopTrigger",
			"function": "GetShopType",
			"return": "int",
			"description": "Get the DOTA_SHOP_TYPE",
			"server": true,
			"params": {}
		},
		"SetShopType": {
			"class": "CDOTA_ShopTrigger",
			"function": "SetShopType",
			"return": "void",
			"description": "Set the DOTA_SHOP_TYPE.",
			"server": true,
			"params": {
				"eShopType": {
					"type": "int",
					"params_name": "eShopType",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseTrigger",
		"variable": ""
	},
	"CDOTA_SimpleObstruction": {
		"description": "extends CBaseEntity",
		"IsEnabled": {
			"class": "CDOTA_SimpleObstruction",
			"function": "IsEnabled",
			"return": "bool",
			"description": "Returns whether the obstruction is currently active",
			"server": true,
			"params": {}
		},
		"SetEnabled": {
			"class": "CDOTA_SimpleObstruction",
			"function": "SetEnabled",
			"return": "void",
			"description": "Enable or disable the obstruction",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				},
				"bForce": {
					"type": "bool",
					"params_name": "bForce",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CDOTA_Unit_Courier": {
		"description": "extends CDOTA_BaseNPC",
		"UpgradeCourier": {
			"class": "CDOTA_Unit_Courier",
			"function": "UpgradeCourier",
			"return": "void",
			"description": "Upgrade the courier ( int param ) times.",
			"server": true,
			"params": {
				"iLevel": {
					"type": "int",
					"params_name": "iLevel",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CDOTA_BaseNPC",
		"variable": ""
	},
	"CDOTA_Unit_Nian": {
		"description": "extends CDOTA_BaseNPC_Creature",
		"GetHorn": {
			"class": "CDOTA_Unit_Nian",
			"function": "GetHorn",
			"return": "handle",
			"description": "Is the Nian horn?",
			"server": true,
			"params": {}
		},
		"GetTail": {
			"class": "CDOTA_Unit_Nian",
			"function": "GetTail",
			"return": "handle",
			"description": "Is the Nian`s tail broken?",
			"server": true,
			"params": {}
		},
		"IsHornAlive": {
			"class": "CDOTA_Unit_Nian",
			"function": "IsHornAlive",
			"return": "bool",
			"description": "Is the Nian`s horn broken?",
			"server": true,
			"params": {}
		},
		"IsTailAlive": {
			"class": "CDOTA_Unit_Nian",
			"function": "IsTailAlive",
			"return": "bool",
			"description": "Is the Nian`s tail broken?",
			"server": true,
			"params": {}
		},
		"extends": "CDOTA_BaseNPC_Creature",
		"variable": ""
	},
	"CDebugOverlayScriptHelper": {
		"description": "No Description Set",
		"Axis": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Axis",
			"return": "void",
			"description": "Draws an axis. Specify origin + orientation in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Quaternion_2": {
					"type": "Quaternion",
					"params_name": "Quaternion_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"bool_4": {
					"type": "bool",
					"params_name": "bool_4",
					"description": "No Description Set"
				},
				"float_5": {
					"type": "float",
					"params_name": "float_5",
					"description": "No Description Set"
				}
			}
		},
		"Box": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Box",
			"return": "void",
			"description": "Draws a world-space axis-aligned box. Specify bounds in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bool_7",
					"description": "No Description Set"
				},
				"float_8": {
					"type": "float",
					"params_name": "float_8",
					"description": "No Description Set"
				}
			}
		},
		"BoxAngles": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "BoxAngles",
			"return": "void",
			"description": "Draws an oriented box at the origin. Specify bounds in local space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"Quaternion_4": {
					"type": "Quaternion",
					"params_name": "Quaternion_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"bool_9": {
					"type": "bool",
					"params_name": "bool_9",
					"description": "No Description Set"
				},
				"float_10": {
					"type": "float",
					"params_name": "float_10",
					"description": "No Description Set"
				}
			}
		},
		"Capsule": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Capsule",
			"return": "void",
			"description": "Draws a capsule. Specify base in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Quaternion_2": {
					"type": "Quaternion",
					"params_name": "Quaternion_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"bool_9": {
					"type": "bool",
					"params_name": "bool_9",
					"description": "No Description Set"
				},
				"float_10": {
					"type": "float",
					"params_name": "float_10",
					"description": "No Description Set"
				}
			}
		},
		"Circle": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Circle",
			"return": "void",
			"description": "Draws a circle. Specify center in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Quaternion_2": {
					"type": "Quaternion",
					"params_name": "Quaternion_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"bool_8": {
					"type": "bool",
					"params_name": "bool_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				}
			}
		},
		"CircleScreenOriented": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "CircleScreenOriented",
			"return": "void",
			"description": "Draws a circle oriented to the screen. Specify center in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bool_7",
					"description": "No Description Set"
				},
				"float_8": {
					"type": "float",
					"params_name": "float_8",
					"description": "No Description Set"
				}
			}
		},
		"Cone": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Cone",
			"return": "void",
			"description": "Draws a wireframe cone. Specify endpoint and direction in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"bool_9": {
					"type": "bool",
					"params_name": "bool_9",
					"description": "No Description Set"
				},
				"float_10": {
					"type": "float",
					"params_name": "float_10",
					"description": "No Description Set"
				}
			}
		},
		"Cross": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Cross",
			"return": "void",
			"description": "Draws a screen-aligned cross. Specify origin in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bool_7",
					"description": "No Description Set"
				},
				"float_8": {
					"type": "float",
					"params_name": "float_8",
					"description": "No Description Set"
				}
			}
		},
		"Cross3D": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Cross3D",
			"return": "void",
			"description": "Draws a world-aligned cross. Specify origin in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bool_7",
					"description": "No Description Set"
				},
				"float_8": {
					"type": "float",
					"params_name": "float_8",
					"description": "No Description Set"
				}
			}
		},
		"Cross3DOriented": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Cross3DOriented",
			"return": "void",
			"description": "Draws an oriented cross. Specify origin in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Quaternion_2": {
					"type": "Quaternion",
					"params_name": "Quaternion_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"bool_8": {
					"type": "bool",
					"params_name": "bool_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				}
			}
		},
		"DrawTickMarkedLine": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "DrawTickMarkedLine",
			"return": "void",
			"description": "Draws a dashed line. Specify endpoints in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"bool_9": {
					"type": "bool",
					"params_name": "bool_9",
					"description": "No Description Set"
				},
				"float_10": {
					"type": "float",
					"params_name": "float_10",
					"description": "No Description Set"
				}
			}
		},
		"EntityAttachments": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "EntityAttachments",
			"return": "void",
			"description": "Draws the attachments of the entity",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"EntityAxis": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "EntityAxis",
			"return": "void",
			"description": "Draws the axis of the entity origin",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				}
			}
		},
		"EntityBounds": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "EntityBounds",
			"return": "void",
			"description": "Draws bounds of an entity",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"bool_6": {
					"type": "bool",
					"params_name": "bool_6",
					"description": "No Description Set"
				},
				"float_7": {
					"type": "float",
					"params_name": "float_7",
					"description": "No Description Set"
				}
			}
		},
		"EntitySkeleton": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "EntitySkeleton",
			"return": "void",
			"description": "Draws the skeleton of the entity",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"EntityText": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "EntityText",
			"return": "void",
			"description": "Draws text on an entity",
			"server": true,
			"client": true,
			"params": {
				"ehandle_1": {
					"type": "ehandle",
					"params_name": "ehandle_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"float_8": {
					"type": "float",
					"params_name": "float_8",
					"description": "No Description Set"
				}
			}
		},
		"FilledRect2D": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "FilledRect2D",
			"return": "void",
			"description": "Draws a screen-space filled 2D rectangle. Coordinates are in pixels.",
			"server": true,
			"client": true,
			"params": {
				"Vector2D_1": {
					"type": "Vector2D",
					"params_name": "Vector2D_1",
					"description": "No Description Set"
				},
				"Vector2D_2": {
					"type": "Vector2D",
					"params_name": "Vector2D_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"float_7": {
					"type": "float",
					"params_name": "float_7",
					"description": "No Description Set"
				}
			}
		},
		"HorzArrow": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "HorzArrow",
			"return": "void",
			"description": "Draws a horizontal arrow. Specify endpoints in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"bool_8": {
					"type": "bool",
					"params_name": "bool_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				}
			}
		},
		"Line": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Line",
			"return": "void",
			"description": "Draws a line between two points",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bool_7",
					"description": "No Description Set"
				},
				"float_8": {
					"type": "float",
					"params_name": "float_8",
					"description": "No Description Set"
				}
			}
		},
		"Line2D": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Line2D",
			"return": "void",
			"description": "Draws a line between two points in screenspace",
			"server": true,
			"client": true,
			"params": {
				"Vector2D_1": {
					"type": "Vector2D",
					"params_name": "Vector2D_1",
					"description": "No Description Set"
				},
				"Vector2D_2": {
					"type": "Vector2D",
					"params_name": "Vector2D_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"float_7": {
					"type": "float",
					"params_name": "float_7",
					"description": "No Description Set"
				}
			}
		},
		"PopDebugOverlayScope": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "PopDebugOverlayScope",
			"return": "void",
			"description": "Pops the identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.",
			"server": true,
			"client": true,
			"params": {}
		},
		"PushAndClearDebugOverlayScope": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "PushAndClearDebugOverlayScope",
			"return": "void",
			"description": "Pushes an identifier used to group overlays. Deletes all existing overlays using this overlay id.",
			"server": true,
			"client": true,
			"params": {
				"utlstringtoken_1": {
					"type": "utlstringtoken",
					"params_name": "utlstringtoken_1",
					"description": "No Description Set"
				}
			}
		},
		"PushDebugOverlayScope": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "PushDebugOverlayScope",
			"return": "void",
			"description": "Pushes an identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.",
			"server": true,
			"client": true,
			"params": {
				"utlstringtoken_1": {
					"type": "utlstringtoken",
					"params_name": "utlstringtoken_1",
					"description": "No Description Set"
				}
			}
		},
		"RemoveAllInScope": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "RemoveAllInScope",
			"return": "void",
			"description": "Removes all overlays marked with a specific identifier, regardless of their lifetime.",
			"server": true,
			"client": true,
			"params": {
				"utlstringtoken_1": {
					"type": "utlstringtoken",
					"params_name": "utlstringtoken_1",
					"description": "No Description Set"
				}
			}
		},
		"SolidCone": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "SolidCone",
			"return": "void",
			"description": "Draws a solid cone. Specify endpoint and direction in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"bool_9": {
					"type": "bool",
					"params_name": "bool_9",
					"description": "No Description Set"
				},
				"float_10": {
					"type": "float",
					"params_name": "float_10",
					"description": "No Description Set"
				}
			}
		},
		"Sphere": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Sphere",
			"return": "void",
			"description": "Draws a wireframe sphere. Specify center in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"int_3": {
					"type": "int",
					"params_name": "int_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bool_7",
					"description": "No Description Set"
				},
				"float_8": {
					"type": "float",
					"params_name": "float_8",
					"description": "No Description Set"
				}
			}
		},
		"SweptBox": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "SweptBox",
			"return": "void",
			"description": "Draws a swept box. Specify endpoints in world space and the bounds in local space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"Vector_4": {
					"type": "Vector",
					"params_name": "Vector_4",
					"description": "No Description Set"
				},
				"Quaternion_5": {
					"type": "Quaternion",
					"params_name": "Quaternion_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"int_9": {
					"type": "int",
					"params_name": "int_9",
					"description": "No Description Set"
				},
				"float_10": {
					"type": "float",
					"params_name": "float_10",
					"description": "No Description Set"
				}
			}
		},
		"Text": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Text",
			"return": "void",
			"description": "Draws 2D text. Specify origin in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				}
			}
		},
		"Texture": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Texture",
			"return": "void",
			"description": "Draws a screen-space texture. Coordinates are in pixels.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector2D_2": {
					"type": "Vector2D",
					"params_name": "Vector2D_2",
					"description": "No Description Set"
				},
				"Vector2D_3": {
					"type": "Vector2D",
					"params_name": "Vector2D_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"Vector2D_8": {
					"type": "Vector2D",
					"params_name": "Vector2D_8",
					"description": "No Description Set"
				},
				"Vector2D_9": {
					"type": "Vector2D",
					"params_name": "Vector2D_9",
					"description": "No Description Set"
				},
				"float_10": {
					"type": "float",
					"params_name": "float_10",
					"description": "No Description Set"
				}
			}
		},
		"Triangle": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "Triangle",
			"return": "void",
			"description": "Draws a filled triangle. Specify vertices in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"bool_8": {
					"type": "bool",
					"params_name": "bool_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				}
			}
		},
		"VectorText3D": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "VectorText3D",
			"return": "void",
			"description": "Draws 3D text. Specify origin + orientation in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Quaternion_2": {
					"type": "Quaternion",
					"params_name": "Quaternion_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"bool_8": {
					"type": "bool",
					"params_name": "bool_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				}
			}
		},
		"VertArrow": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "VertArrow",
			"return": "void",
			"description": "Draws a vertical arrow. Specify endpoints in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"bool_8": {
					"type": "bool",
					"params_name": "bool_8",
					"description": "No Description Set"
				},
				"float_9": {
					"type": "float",
					"params_name": "float_9",
					"description": "No Description Set"
				}
			}
		},
		"YawArrow": {
			"class": "CDebugOverlayScriptHelper",
			"class_cl": "CDebugOverlayScriptHelper",
			"function": "YawArrow",
			"return": "void",
			"description": "Draws a arrow associated with a specific yaw. Specify endpoints in world space.",
			"server": true,
			"client": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				},
				"int_5": {
					"type": "int",
					"params_name": "int_5",
					"description": "No Description Set"
				},
				"int_6": {
					"type": "int",
					"params_name": "int_6",
					"description": "No Description Set"
				},
				"int_7": {
					"type": "int",
					"params_name": "int_7",
					"description": "No Description Set"
				},
				"int_8": {
					"type": "int",
					"params_name": "int_8",
					"description": "No Description Set"
				},
				"bool_9": {
					"type": "bool",
					"params_name": "bool_9",
					"description": "No Description Set"
				},
				"float_10": {
					"type": "float",
					"params_name": "float_10",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDotaQuest": {
		"description": "extends CBaseEntity",
		"AddSubquest": {
			"class": "CDotaQuest",
			"function": "AddSubquest",
			"return": "void",
			"description": "Add a subquest to this quest",
			"server": true,
			"params": {
				"hSubquest": {
					"type": "handle",
					"params_name": "hSubquest",
					"description": "No Description Set"
				}
			}
		},
		"CompleteQuest": {
			"class": "CDotaQuest",
			"function": "CompleteQuest",
			"return": "void",
			"description": "Mark this quest complete",
			"server": true,
			"params": {}
		},
		"GetSubquest": {
			"class": "CDotaQuest",
			"function": "GetSubquest",
			"return": "handle",
			"description": "Finds a subquest from this quest by index",
			"server": true,
			"params": {
				"nIndex": {
					"type": "int",
					"params_name": "nIndex",
					"description": "No Description Set"
				}
			}
		},
		"GetSubquestByName": {
			"class": "CDotaQuest",
			"function": "GetSubquestByName",
			"return": "handle",
			"description": "Finds a subquest from this quest by name",
			"server": true,
			"params": {
				"pszName": {
					"type": "string",
					"params_name": "pszName",
					"description": "No Description Set"
				}
			}
		},
		"RemoveSubquest": {
			"class": "CDotaQuest",
			"function": "RemoveSubquest",
			"return": "void",
			"description": "Remove a subquest from this quest",
			"server": true,
			"params": {
				"hSubquest": {
					"type": "handle",
					"params_name": "hSubquest",
					"description": "No Description Set"
				}
			}
		},
		"SetTextReplaceString": {
			"class": "CDotaQuest",
			"function": "SetTextReplaceString",
			"return": "void",
			"description": "Set the text replace string for this quest",
			"server": true,
			"params": {
				"pszString": {
					"type": "string",
					"params_name": "pszString",
					"description": "No Description Set"
				}
			}
		},
		"SetTextReplaceValue": {
			"class": "CDotaQuest",
			"function": "SetTextReplaceValue",
			"return": "void",
			"description": "Set a quest value",
			"server": true,
			"params": {
				"valueSlot": {
					"type": "int",
					"params_name": "valueSlot",
					"description": "No Description Set"
				},
				"value": {
					"type": "int",
					"params_name": "value",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CDotaSubquestBase": {
		"description": "extends CBaseEntity",
		"CompleteSubquest": {
			"class": "CDotaSubquestBase",
			"function": "CompleteSubquest",
			"return": "void",
			"description": "Mark this subquest complete",
			"server": true,
			"params": {}
		},
		"SetTextReplaceString": {
			"class": "CDotaSubquestBase",
			"function": "SetTextReplaceString",
			"return": "void",
			"description": "Set the text replace string for this subquest",
			"server": true,
			"params": {
				"pszString": {
					"type": "string",
					"params_name": "pszString",
					"description": "No Description Set"
				}
			}
		},
		"SetTextReplaceValue": {
			"class": "CDotaSubquestBase",
			"function": "SetTextReplaceValue",
			"return": "void",
			"description": "Set a subquest value",
			"server": true,
			"params": {
				"valueSlot": {
					"type": "int",
					"params_name": "valueSlot",
					"description": "No Description Set"
				},
				"value": {
					"type": "int",
					"params_name": "value",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CEntities": {
		"description": "全局访问变量：Entities",
		"CreateByClassname": {
			"class": "CEntities",
			"function": "CreateByClassname",
			"return": "handle",
			"description": "Creates an entity by classname",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"FindAllByClassname": {
			"class": "CEntities",
			"function": "FindAllByClassname",
			"return": "table",
			"description": "Finds all entities by class name. Returns an array containing all the found entities.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"FindAllByClassnameWithin": {
			"class": "CEntities",
			"function": "FindAllByClassnameWithin",
			"return": "table",
			"description": "Find entities by class name within a radius.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"FindAllByModel": {
			"class": "CEntities",
			"function": "FindAllByModel",
			"return": "table",
			"description": "Find entities by model name.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"FindAllByName": {
			"class": "CEntities",
			"function": "FindAllByName",
			"return": "table",
			"description": "Find all entities by name. Returns an array containing all the found entities in it.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"FindAllByNameWithin": {
			"class": "CEntities",
			"function": "FindAllByNameWithin",
			"return": "table",
			"description": "Find entities by name within a radius.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"FindAllByTarget": {
			"class": "CEntities",
			"function": "FindAllByTarget",
			"return": "table",
			"description": "Find entities by targetname.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"FindAllInSphere": {
			"class": "CEntities",
			"function": "FindAllInSphere",
			"return": "table",
			"description": "Find entities within a radius.",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"FindByClassname": {
			"class": "CEntities",
			"function": "FindByClassname",
			"return": "handle",
			"description": "Find entities by class name. Pass `null` to start an iteration, or reference to a previously found entity to continue a search",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"FindByClassnameNearest": {
			"class": "CEntities",
			"function": "FindByClassnameNearest",
			"return": "handle",
			"description": "Find entities by class name nearest to a point.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"FindByClassnameWithin": {
			"class": "CEntities",
			"function": "FindByClassnameWithin",
			"return": "handle",
			"description": "Find entities by class name within a radius. Pass `null` to start an iteration, or reference to a previously found entity to continue a search",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				}
			}
		},
		"FindByModel": {
			"class": "CEntities",
			"function": "FindByModel",
			"return": "handle",
			"description": "Find entities by model name. Pass `null` to start an iteration, or reference to a previously found entity to continue a search",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"FindByModelWithin": {
			"class": "CEntities",
			"function": "FindByModelWithin",
			"return": "handle",
			"description": "Find entities by model name within a radius. Pass `null` to start an iteration, or reference to a previously found entity to continue a search",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				}
			}
		},
		"FindByName": {
			"class": "CEntities",
			"function": "FindByName",
			"return": "handle",
			"description": "Find entities by name. Pass `null` to start an iteration, or reference to a previously found entity to continue a search",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"FindByNameNearest": {
			"class": "CEntities",
			"function": "FindByNameNearest",
			"return": "handle",
			"description": "Find entities by name nearest to a point.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"FindByNameWithin": {
			"class": "CEntities",
			"function": "FindByNameWithin",
			"return": "handle",
			"description": "Find entities by name within a radius. Pass `null` to start an iteration, or reference to a previously found entity to continue a search",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"float_4": {
					"type": "float",
					"params_name": "float_4",
					"description": "No Description Set"
				}
			}
		},
		"FindByTarget": {
			"class": "CEntities",
			"function": "FindByTarget",
			"return": "handle",
			"description": "Find entities by targetname. Pass `null` to start an iteration, or reference to a previously found entity to continue a search",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"FindInSphere": {
			"class": "CEntities",
			"function": "FindInSphere",
			"return": "handle",
			"description": "Find entities within a radius. Pass `null` to start an iteration, or reference to a previously found entity to continue a search",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"First": {
			"class": "CEntities",
			"class_cl": "CEntities",
			"function": "First",
			"return": "handle",
			"description": "Begin an iteration over the list of entities",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetLocalPlayer": {
			"class": "CEntities",
			"function": "GetLocalPlayer",
			"return": "handle",
			"description": "Get the local player.",
			"server": true,
			"params": {}
		},
		"Next": {
			"class": "CEntities",
			"class_cl": "CEntities",
			"function": "Next",
			"return": "handle",
			"description": "Continue an iteration over the list of entities, providing reference to a previously found entity",
			"server": true,
			"client": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": "Entities"
	},
	"CEntityInstance": {
		"description": "No Description Set",
		"ConnectOutput": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "ConnectOutput",
			"return": "void",
			"description": "Adds an I/O connection that will call the named function on this entity when the specified output fires.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"Destroy": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "Destroy",
			"return": "void",
			"server": true,
			"client": true,
			"params": {}
		},
		"DisconnectOutput": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "DisconnectOutput",
			"return": "void",
			"description": "Removes a connected script function from an I/O event on this entity.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"DisconnectRedirectedOutput": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "DisconnectRedirectedOutput",
			"return": "void",
			"description": "Removes a connected script function from an I/O event on the passed entity.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"FireOutput": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "FireOutput",
			"return": "void",
			"description": "触发实体的output，需要在hammer中配置ouptput。",
			"server": true,
			"client": true,
			"example": "self:FireOutput(\"OnUser1\", hActivator, hCaller, nil, 0.5)\nself:FireOutput(\"OnUser2\", nil, nil, nil, 0.5)",
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "sOutputName",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "hActivator",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "hCaller",
					"description": "No Description Set"
				},
				"table_4": {
					"type": "table",
					"params_name": "table_4",
					"description": "No Description Set"
				},
				"float_5": {
					"type": "float",
					"params_name": "flDelay",
					"description": "延迟"
				}
			}
		},
		"GetClassname": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetClassname",
			"return": "string",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetDebugName": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetDebugName",
			"return": "string",
			"description": "Get the entity name w/help if not defined (i.e. classname/etc)",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetEntityHandle": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetEntityHandle",
			"return": "ehandle",
			"description": "Get the entity as an EHANDLE",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetEntityIndex": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetEntityIndex",
			"return": "int",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetIntAttr": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetIntAttr",
			"return": "int",
			"description": "Get Integer Attribute",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetName": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetName",
			"return": "string",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetOrCreatePrivateScriptScope": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetOrCreatePrivateScriptScope",
			"return": "handle",
			"description": "Retrieve, creating if necessary, the private per-instance script-side data associated with an entity",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetOrCreatePublicScriptScope": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetOrCreatePublicScriptScope",
			"return": "handle",
			"description": "Retrieve, creating if necessary, the public script-side data associated with an entity",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetPrivateScriptScope": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetPrivateScriptScope",
			"return": "handle",
			"description": "Retrieve the private per-instance script-side data associated with an entity",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetPublicScriptScope": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "GetPublicScriptScope",
			"return": "handle",
			"description": "Retrieve the public script-side data associated with an entity",
			"server": true,
			"client": true,
			"params": {}
		},
		"RedirectOutput": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "RedirectOutput",
			"return": "void",
			"description": "Adds an I/O connection that will call the named function on the passed entity when the specified output fires.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				}
			}
		},
		"RemoveSelf": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "RemoveSelf",
			"return": "void",
			"description": "Delete this entity",
			"server": true,
			"client": true,
			"params": {}
		},
		"SetIntAttr": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "SetIntAttr",
			"return": "void",
			"description": "Set Integer Attribute",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"entindex": {
			"class": "CEntityInstance",
			"class_cl": "CEntityInstance",
			"function": "entindex",
			"return": "int",
			"server": true,
			"client": true,
			"params": {}
		},
		"extends": "",
		"variable": ""
	},
	"CEntityScriptFramework": {
		"description": "No Description Set"
	},
	"CEnvEntityMaker": {
		"description": "extends CBaseEntity",
		"SpawnEntity": {
			"class": "CEnvEntityMaker",
			"function": "SpawnEntity",
			"return": "void",
			"description": "Create an entity at the location of the maker",
			"server": true,
			"params": {}
		},
		"SpawnEntityAtEntityOrigin": {
			"class": "CEnvEntityMaker",
			"function": "SpawnEntityAtEntityOrigin",
			"return": "void",
			"description": "Create an entity at the location of a specified entity instance",
			"server": true,
			"params": {
				"hEntity": {
					"type": "handle",
					"params_name": "hEntity",
					"description": "No Description Set"
				}
			}
		},
		"SpawnEntityAtLocation": {
			"class": "CEnvEntityMaker",
			"function": "SpawnEntityAtLocation",
			"return": "void",
			"description": "Create an entity at a specified location and orientaton, orientation is Euler angle in degrees (pitch, yaw, roll)",
			"server": true,
			"params": {
				"vecAlternateOrigin": {
					"type": "Vector",
					"params_name": "vecAlternateOrigin",
					"description": "No Description Set"
				},
				"vecAlternateAngles": {
					"type": "Vector",
					"params_name": "vecAlternateAngles",
					"description": "No Description Set"
				}
			}
		},
		"SpawnEntityAtNamedEntityOrigin": {
			"class": "CEnvEntityMaker",
			"function": "SpawnEntityAtNamedEntityOrigin",
			"return": "void",
			"description": "Create an entity at the location of a named entity",
			"server": true,
			"params": {
				"pszName": {
					"type": "string",
					"params_name": "pszName",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CEnvProjectedTexture": {
		"description": "extends CBaseEntity",
		"SetFarRange": {
			"class": "CEnvProjectedTexture",
			"function": "SetFarRange",
			"return": "void",
			"description": "Set light maximum range",
			"server": true,
			"params": {
				"flRange": {
					"type": "float",
					"params_name": "flRange",
					"description": "No Description Set"
				}
			}
		},
		"SetLinearAttenuation": {
			"class": "CEnvProjectedTexture",
			"function": "SetLinearAttenuation",
			"return": "void",
			"description": "Set light linear attenuation value",
			"server": true,
			"params": {
				"flAtten": {
					"type": "float",
					"params_name": "flAtten",
					"description": "No Description Set"
				}
			}
		},
		"SetNearRange": {
			"class": "CEnvProjectedTexture",
			"function": "SetNearRange",
			"return": "void",
			"description": "Set light minimum range",
			"server": true,
			"params": {
				"flRange": {
					"type": "float",
					"params_name": "flRange",
					"description": "No Description Set"
				}
			}
		},
		"SetQuadraticAttenuation": {
			"class": "CEnvProjectedTexture",
			"function": "SetQuadraticAttenuation",
			"return": "void",
			"description": "Set light quadratic attenuation value",
			"server": true,
			"params": {
				"flAtten": {
					"type": "float",
					"params_name": "flAtten",
					"description": "No Description Set"
				}
			}
		},
		"SetVolumetrics": {
			"class": "CEnvProjectedTexture",
			"function": "SetVolumetrics",
			"return": "void",
			"description": "Turn on/off light volumetrics: bool bOn, float flIntensity, float flNoise, int nPlanes, float flPlaneOffset",
			"server": true,
			"params": {
				"bOn": {
					"type": "bool",
					"params_name": "bOn",
					"description": "No Description Set"
				},
				"flIntensity": {
					"type": "float",
					"params_name": "flIntensity",
					"description": "No Description Set"
				},
				"flNoise": {
					"type": "float",
					"params_name": "flNoise",
					"description": "No Description Set"
				},
				"nPlanes": {
					"type": "int",
					"params_name": "nPlanes",
					"description": "No Description Set"
				},
				"flPlaneOffset": {
					"type": "float",
					"params_name": "flPlaneOffset",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CInfoData": {
		"description": "extends CBaseEntity",
		"QueryColor": {
			"class": "CInfoData",
			"function": "QueryColor",
			"return": "Vector",
			"description": "Query color data for this key",
			"server": true,
			"params": {
				"tok": {
					"type": "utlstringtoken",
					"params_name": "tok",
					"description": "No Description Set"
				},
				"vDefault": {
					"type": "Vector",
					"params_name": "vDefault",
					"description": "No Description Set"
				}
			}
		},
		"QueryFloat": {
			"class": "CInfoData",
			"function": "QueryFloat",
			"return": "float",
			"description": "Query float data for this key",
			"server": true,
			"params": {
				"tok": {
					"type": "utlstringtoken",
					"params_name": "tok",
					"description": "No Description Set"
				},
				"flDefault": {
					"type": "float",
					"params_name": "flDefault",
					"description": "No Description Set"
				}
			}
		},
		"QueryInt": {
			"class": "CInfoData",
			"function": "QueryInt",
			"return": "int",
			"description": "Query int data for this key",
			"server": true,
			"params": {
				"tok": {
					"type": "utlstringtoken",
					"params_name": "tok",
					"description": "No Description Set"
				},
				"nDefault": {
					"type": "int",
					"params_name": "nDefault",
					"description": "No Description Set"
				}
			}
		},
		"QueryNumber": {
			"class": "CInfoData",
			"function": "QueryNumber",
			"return": "float",
			"description": "Query number data for this key",
			"server": true,
			"params": {
				"tok": {
					"type": "utlstringtoken",
					"params_name": "tok",
					"description": "No Description Set"
				},
				"flDefault": {
					"type": "float",
					"params_name": "flDefault",
					"description": "No Description Set"
				}
			}
		},
		"QueryString": {
			"class": "CInfoData",
			"function": "QueryString",
			"return": "string",
			"description": "Query string data for this key",
			"server": true,
			"params": {
				"tok": {
					"type": "utlstringtoken",
					"params_name": "tok",
					"description": "No Description Set"
				},
				"pDefault": {
					"type": "string",
					"params_name": "pDefault",
					"description": "No Description Set"
				}
			}
		},
		"QueryVector": {
			"class": "CInfoData",
			"function": "QueryVector",
			"return": "Vector",
			"description": "Query vector data for this key",
			"server": true,
			"params": {
				"tok": {
					"type": "utlstringtoken",
					"params_name": "tok",
					"description": "No Description Set"
				},
				"vDefault": {
					"type": "Vector",
					"params_name": "vDefault",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CInfoWorldLayer": {
		"description": "extends CBaseEntity",
		"HideWorldLayer": {
			"class": "CInfoWorldLayer",
			"class_cl": "CInfoWorldLayer",
			"function": "HideWorldLayer",
			"return": "void",
			"description": "Hides this layer",
			"server": true,
			"client": true,
			"params": {}
		},
		"ShowWorldLayer": {
			"class": "CInfoWorldLayer",
			"class_cl": "CInfoWorldLayer",
			"function": "ShowWorldLayer",
			"return": "void",
			"description": "Shows this layer",
			"server": true,
			"client": true,
			"params": {}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CLogicScript": {
		"description": "extends CBaseEntity"
	},
	"CMarkupVolumeTagged": {
		"description": "extends CBaseEntity",
		"HasTag": {
			"class": "CMarkupVolumeTagged",
			"function": "HasTag",
			"return": "bool",
			"description": "Does this volume have the given tag.",
			"server": true,
			"params": {
				"pszTagName": {
					"type": "string",
					"params_name": "pszTagName",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CNativeOutputs": {
		"description": "No Description Set",
		"AddOutput": {
			"class": "CNativeOutputs",
			"class_cl": "CNativeOutputs",
			"function": "AddOutput",
			"return": "void",
			"description": "Add an output",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"Init": {
			"class": "CNativeOutputs",
			"class_cl": "CNativeOutputs",
			"function": "Init",
			"return": "void",
			"description": "Initialize with number of outputs",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CParticleSystem": {
		"description": "extends CBaseModelEntity"
	},
	"CPhysicsProp": {
		"description": "extends CBaseAnimating",
		"DisableMotion": {
			"class": "CPhysicsProp",
			"function": "DisableMotion",
			"return": "void",
			"description": "Disable motion for the prop",
			"server": true,
			"params": {}
		},
		"EnableMotion": {
			"class": "CPhysicsProp",
			"function": "EnableMotion",
			"return": "void",
			"description": "Enable motion for the prop",
			"server": true,
			"params": {}
		},
		"SetDynamicVsDynamicContinuous": {
			"class": "CPhysicsProp",
			"function": "SetDynamicVsDynamicContinuous",
			"return": "void",
			"description": "Enable/disable dynamic vs dynamic continuous collision traces",
			"server": true,
			"params": {
				"bIsDynamicVsDynamicContinuousEnabled": {
					"type": "bool",
					"params_name": "bIsDynamicVsDynamicContinuousEnabled",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseAnimating",
		"variable": ""
	},
	"CPointClientUIWorldPanel": {
		"description": "extends CBaseModelEntity",
		"AcceptUserInput": {
			"class": "CPointClientUIWorldPanel",
			"function": "AcceptUserInput",
			"return": "void",
			"description": "Tells the panel to accept user input.",
			"server": true,
			"params": {}
		},
		"AddCSSClasses": {
			"class": "CPointClientUIWorldPanel",
			"function": "AddCSSClasses",
			"return": "void",
			"description": "Adds CSS class(es) to the panel",
			"server": true,
			"params": {
				"pszClasses": {
					"type": "string",
					"params_name": "pszClasses",
					"description": "No Description Set"
				}
			}
		},
		"IgnoreUserInput": {
			"class": "CPointClientUIWorldPanel",
			"function": "IgnoreUserInput",
			"return": "void",
			"description": "Tells the panel to ignore user input.",
			"server": true,
			"params": {}
		},
		"IsGrabbable": {
			"class": "CPointClientUIWorldPanel",
			"function": "IsGrabbable",
			"return": "bool",
			"description": "Returns whether this entity is grabbable.",
			"server": true,
			"params": {}
		},
		"RemoveCSSClasses": {
			"class": "CPointClientUIWorldPanel",
			"function": "RemoveCSSClasses",
			"return": "void",
			"description": "Remove CSS class(es) from the panel",
			"server": true,
			"params": {
				"pszClasses": {
					"type": "string",
					"params_name": "pszClasses",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseModelEntity",
		"variable": ""
	},
	"CPointTemplate": {
		"description": "extends CBaseEntity",
		"DeleteCreatedSpawnGroups": {
			"class": "CPointTemplate",
			"function": "DeleteCreatedSpawnGroups",
			"return": "void",
			"description": "DeleteCreatedSpawnGroups() : Deletes any spawn groups that this point_template has spawned. Note: The point_template will not be deleted by this.",
			"server": true,
			"params": {}
		},
		"ForceSpawn": {
			"class": "CPointTemplate",
			"function": "ForceSpawn",
			"return": "void",
			"description": "ForceSpawn() : Spawns all of the entities the point_template is pointing at.",
			"server": true,
			"params": {}
		},
		"GetSpawnedEntities": {
			"class": "CPointTemplate",
			"function": "GetSpawnedEntities",
			"return": "handle",
			"description": "GetSpawnedEntities() : Get the list of the most recent spawned entities",
			"server": true,
			"params": {}
		},
		"SetSpawnCallback": {
			"class": "CPointTemplate",
			"function": "SetSpawnCallback",
			"return": "void",
			"description": "SetSpawnCallback( hCallbackFunc, hCallbackScope, hCallbackData ) : Set a callback for when the template spawns entities. The spawned entities will be passed in as an array.",
			"server": true,
			"params": {
				"hCallbackFunc": {
					"type": "handle",
					"params_name": "hCallbackFunc",
					"description": "No Description Set"
				},
				"hCallbackScope": {
					"type": "handle",
					"params_name": "hCallbackScope",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CPointWorldText": {
		"description": "extends CBaseModelEntity",
		"SetMessage": {
			"class": "CPointWorldText",
			"class_cl": "C_PointWorldText",
			"function": "SetMessage",
			"return": "void",
			"description": "Set the message on this entity.",
			"server": true,
			"client": true,
			"params": {
				"pMessage": {
					"type": "string",
					"params_name": "pMessage",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseModelEntity",
		"variable": ""
	},
	"CPropHMDAvatar": {
		"description": "extends CBaseAnimating"
	},
	"CPropVRHand": {
		"description": "extends CBaseAnimating"
	},
	"CSceneEntity": {
		"description": "extends CBaseEntity",
		"AddBroadcastTeamTarget": {
			"class": "CSceneEntity",
			"function": "AddBroadcastTeamTarget",
			"return": "void",
			"description": "Adds a team (by index) to the broadcast list",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"Cancel": {
			"class": "CSceneEntity",
			"function": "Cancel",
			"return": "void",
			"description": "Cancel scene playback",
			"server": true,
			"params": {}
		},
		"EstimateLength": {
			"class": "CSceneEntity",
			"function": "EstimateLength",
			"return": "float",
			"description": "Returns length of this scene in seconds.",
			"server": true,
			"params": {}
		},
		"FindCamera": {
			"class": "CSceneEntity",
			"function": "FindCamera",
			"return": "handle",
			"description": "Get the camera",
			"server": true,
			"params": {}
		},
		"FindNamedEntity": {
			"class": "CSceneEntity",
			"function": "FindNamedEntity",
			"return": "handle",
			"description": "given an entity reference, such as !target, get actual entity from scene object",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"IsPaused": {
			"class": "CSceneEntity",
			"function": "IsPaused",
			"return": "bool",
			"description": "If this scene is currently paused.",
			"server": true,
			"params": {}
		},
		"IsPlayingBack": {
			"class": "CSceneEntity",
			"function": "IsPlayingBack",
			"return": "bool",
			"description": "If this scene is currently playing.",
			"server": true,
			"params": {}
		},
		"LoadSceneFromString": {
			"class": "CSceneEntity",
			"function": "LoadSceneFromString",
			"return": "bool",
			"description": "given a dummy scene name and a vcd string, load the scene",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"RemoveBroadcastTeamTarget": {
			"class": "CSceneEntity",
			"function": "RemoveBroadcastTeamTarget",
			"return": "void",
			"description": "Removes a team (by index) from the broadcast list",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"Start": {
			"class": "CSceneEntity",
			"function": "Start",
			"return": "void",
			"description": "Start scene playback, takes activatorEntity as param",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "CBaseEntity",
		"variable": ""
	},
	"CScriptHeroList": {
		"description": "全局访问变量：HeroList",
		"GetAllHeroes": {
			"class": "CScriptHeroList",
			"function": "GetAllHeroes",
			"return": "table",
			"description": "Returns all the heroes in the world",
			"server": true,
			"params": {}
		},
		"GetHero": {
			"class": "CScriptHeroList",
			"function": "GetHero",
			"return": "handle",
			"description": "Get the Nth hero in the Hero List",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetHeroCount": {
			"class": "CScriptHeroList",
			"function": "GetHeroCount",
			"return": "int",
			"description": "Returns the number of heroes in the world",
			"server": true,
			"params": {}
		},
		"extends": "",
		"variable": "HeroList"
	},
	"CScriptKeyValues": {
		"description": "No Description Set",
		"GetValue": {
			"class": "CScriptKeyValues",
			"class_cl": "CScriptKeyValues",
			"function": "GetValue",
			"return": "table",
			"description": "Reads a spawn key",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CScriptParticleManager": {
		"description": "全局访问变量：ParticleManager",
		"ReleaseParticleIndex": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "ReleaseParticleIndex",
			"return": "void",
			"description": "施放一个特效的索引ID，施放后无法在控制该特效，请保证特效会自己销毁的情况下使用。",
			"server": true,
			"client": true,
			"example": "undefined",
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "iParticleID",
					"description": "特效ID"
				}
			}
		},
		"SetParticleFoWProperties": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleFoWProperties",
			"return": "void",
			"description": "设置粒子特效在战争迷雾中的属性。控制点为中心半径为flRadius的圆处于战争迷雾外，该特效即对敌人可见。如果填两个控制点则两点间的宽度为flRadius的矩形范围也计算。不填为-1。",
			"server": true,
			"client": true,
			"example": "-- 风暴之灵超负荷特效\nlocal iParticleID = ParticleManager:CreateParticle(ParticleManager:GetParticleReplacement(\"particles/units/heroes/hero_stormspirit/stormspirit_overload_discharge.vpcf\", params.attacker), PATTACH_WORLDORIGIN, nil)\nParticleManager:SetParticleControl(iParticleID, 0, params.target:GetAbsOrigin())\nParticleManager:SetParticleFoWProperties(iParticleID, 0, -1, self.overload_aoe)\nParticleManager:ReleaseParticleIndex(iParticleID)",
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "iParticleID",
					"description": "特效ID"
				},
				"int_2": {
					"type": "int",
					"params_name": "iControlPoint",
					"description": "第一个控制点"
				},
				"int_3": {
					"type": "int",
					"params_name": "iControlPoint2",
					"description": "第二个控制点"
				},
				"float_4": {
					"type": "float",
					"params_name": "flRadius",
					"description": "半径"
				}
			}
		},
		"CreateParticle": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "CreateParticle",
			"return": "int",
			"description": "创建一个粒子特效，返回特效ID",
			"server": true,
			"client": true,
			"example": "undefined",
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "sParticleName",
					"description": "特效完整路径名字"
				},
				"int_2": {
					"type": "int",
					"params_name": "iAttachment",
					"description": "特效附着方式"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "hOwner",
					"description": "附着单位"
				}
			}
		},
		"DestroyParticle": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "DestroyParticle",
			"return": "void",
			"description": "删除一个粒子特效。如果选择立即删除，将不会播放粒子的结束特效。",
			"server": true,
			"client": true,
			"example": "undefined",
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "iIndex",
					"description": "特效ID"
				},
				"bool_2": {
					"type": "bool",
					"params_name": "bDestroyImmediately",
					"description": "是否立即删除"
				}
			}
		},
		"GetParticleReplacement": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "GetParticleReplacement",
			"return": "string",
			"description": "获得该粒子特效在该单位身上的替换版本",
			"server": true,
			"client": true,
			"example": "ParticleManager:GetParticleReplacement(\"particles/units/heroes/hero_night_stalker/nightstalker_ulti.vpcf\", hCaster)",
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "sParticleName",
					"description": "特效完整路径名字"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "hCaster",
					"description": "单位"
				}
			}
		},
		"CreateParticleForPlayer": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "CreateParticleForPlayer",
			"return": "int",
			"description": "Creates a new particle effect that only plays for the specified player",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				},
				"handle_4": {
					"type": "handle",
					"params_name": "handle_4",
					"description": "No Description Set"
				}
			}
		},
		"CreateParticleForTeam": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "CreateParticleForTeam",
			"return": "int",
			"description": "Creates a new particle effect that only plays for the specified team",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				}
			}
		},
		"SetParticleAlwaysSimulate": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleAlwaysSimulate",
			"return": "void",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"SetParticleControl": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleControl",
			"return": "void",
			"description": "Set the control point data for a control on a particle effect",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				}
			}
		},
		"SetParticleControlEnt": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleControlEnt",
			"return": "void",
			"description": "将特效（iParticleID）的控制点（iCP）绑定到单位（handle_3）上，该控制点的数据会随着单位的移动而移动",
			"server": true,
			"client": true,
			"example": "local hParent = self:GetParent()\nlocal iParticleID = ParticleManager:CreateParticle(\"particles/units/enemies/awaken.vpcf\", PATTACH_ABSORIGIN_FOLLOW, hParent)\nParticleManager:SetParticleControlEnt(iParticleID, 1, hParent, PATTACH_ABSORIGIN_FOLLOW, nil, hParent:GetAbsOrigin(), true)",
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "iParticleID",
					"description": "粒子句柄"
				},
				"int_2": {
					"type": "int",
					"params_name": "iCP",
					"description": "控制点ID"
				},
				"handle_3": {
					"type": "handle",
					"params_name": "handle_3",
					"description": "附着对象"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "附着方式"
				},
				"string_5": {
					"type": "string",
					"params_name": "string_5",
					"description": "附着点位"
				},
				"Vector_6": {
					"type": "Vector",
					"params_name": "Vector_6",
					"description": "附着坐标"
				},
				"bool_7": {
					"type": "bool",
					"params_name": "bool_7",
					"description": "No Description Set"
				}
			}
		},
		"SetParticleControlFallback": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleControlFallback",
			"return": "void",
			"description": "(int iIndex, int iPoint, Vector vecPosition)",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				}
			}
		},
		"SetParticleControlForward": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleControlForward",
			"return": "void",
			"description": "(int nFXIndex, int nPoint, vForward)",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				}
			}
		},
		"SetParticleControlOrientation": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleControlOrientation",
			"return": "void",
			"description": "(int nFXIndex, int nPoint, vForward, vRight, vUp) - Set the orientation for a control on a particle effect (NOTE: This is left handed -- bad!!)",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"Vector_4": {
					"type": "Vector",
					"params_name": "Vector_4",
					"description": "No Description Set"
				},
				"Vector_5": {
					"type": "Vector",
					"params_name": "Vector_5",
					"description": "No Description Set"
				}
			}
		},
		"SetParticleControlOrientationFLU": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleControlOrientationFLU",
			"return": "void",
			"description": "(int nFXIndex, int nPoint, Vector vecForward, Vector vecLeft, Vector vecUp) - Set the orientation for a control on a particle effect",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				},
				"Vector_3": {
					"type": "Vector",
					"params_name": "Vector_3",
					"description": "No Description Set"
				},
				"Vector_4": {
					"type": "Vector",
					"params_name": "Vector_4",
					"description": "No Description Set"
				},
				"Vector_5": {
					"type": "Vector",
					"params_name": "Vector_5",
					"description": "No Description Set"
				}
			}
		},
		"SetParticleShouldCheckFoW": {
			"class": "CScriptParticleManager",
			"class_cl": "CScriptParticleManager",
			"function": "SetParticleShouldCheckFoW",
			"return": "bool",
			"description": "int nfxindex, bool bCheckFoW",
			"server": true,
			"client": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"bool_2": {
					"type": "bool",
					"params_name": "bool_2",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": "ParticleManager"
	},
	"CScriptPrecacheContext": {
		"description": "No Description Set",
		"AddResource": {
			"class": "CScriptPrecacheContext",
			"class_cl": "CScriptPrecacheContext",
			"function": "AddResource",
			"return": "void",
			"description": "Precaches a specific resource",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetValue": {
			"class": "CScriptPrecacheContext",
			"class_cl": "CScriptPrecacheContext",
			"function": "GetValue",
			"return": "table",
			"description": "Reads a spawn key",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"Convars": {
		"description": "extends Convars\n全局访问变量：ConVars",
		"GetBool": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "GetBool",
			"return": "table",
			"description": "GetBool(name) : returns the convar as a boolean flag.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetCommandClient": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "GetCommandClient",
			"return": "handle",
			"description": "GetCommandClient() : returns the player who issued this console command.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetDOTACommandClient": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "GetDOTACommandClient",
			"return": "handle",
			"description": "GetDOTACommandClient() : returns the DOTA player who issued this console command.",
			"server": true,
			"client": true,
			"params": {}
		},
		"GetFloat": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "GetFloat",
			"return": "table",
			"description": "GetFloat(name) : returns the convar as a float. May return null if no such convar.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetInt": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "GetInt",
			"return": "table",
			"description": "GetInt(name) : returns the convar as an int. May return null if no such convar.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"GetStr": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "GetStr",
			"return": "table",
			"description": "GetStr(name) : returns the convar as a string. May return null if no such convar.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"RegisterCommand": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "RegisterCommand",
			"return": "void",
			"description": "RegisterCommand(name, fn, helpString, flags) : register a console command.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"handle_2": {
					"type": "handle",
					"params_name": "handle_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				}
			}
		},
		"RegisterConvar": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "RegisterConvar",
			"return": "void",
			"description": "RegisterConvar(name, defaultValue, helpString, flags): register a new console variable.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				},
				"string_3": {
					"type": "string",
					"params_name": "string_3",
					"description": "No Description Set"
				},
				"int_4": {
					"type": "int",
					"params_name": "int_4",
					"description": "No Description Set"
				}
			}
		},
		"SetBool": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "SetBool",
			"return": "void",
			"description": "SetBool(name, val) : sets the value of the convar to the bool.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"bool_2": {
					"type": "bool",
					"params_name": "bool_2",
					"description": "No Description Set"
				}
			}
		},
		"SetFloat": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "SetFloat",
			"return": "void",
			"description": "SetFloat(name, val) : sets the value of the convar to the float.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"SetInt": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "SetInt",
			"return": "void",
			"description": "SetInt(name, val) : sets the value of the convar to the int.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"SetStr": {
			"class": "Convars",
			"class_cl": "Convars",
			"function": "SetStr",
			"return": "void",
			"description": "SetStr(name, val) : sets the value of the convar to the string.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"extends": "Convars",
		"variable": "ConVars"
	},
	"GlobalSys": {
		"description": "extends GlobalSys",
		"CommandLineCheck": {
			"class": "GlobalSys",
			"class_cl": "GlobalSys",
			"function": "CommandLineCheck",
			"return": "table",
			"description": "CommandLineCheck(name) : returns true if the command line param was used, otherwise false.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				}
			}
		},
		"CommandLineFloat": {
			"class": "GlobalSys",
			"class_cl": "GlobalSys",
			"function": "CommandLineFloat",
			"return": "table",
			"description": "CommandLineFloat(name) : returns the command line param as a float.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				}
			}
		},
		"CommandLineInt": {
			"class": "GlobalSys",
			"class_cl": "GlobalSys",
			"function": "CommandLineInt",
			"return": "table",
			"description": "CommandLineInt(name) : returns the command line param as an int.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"CommandLineStr": {
			"class": "GlobalSys",
			"class_cl": "GlobalSys",
			"function": "CommandLineStr",
			"return": "table",
			"description": "CommandLineStr(name) : returns the command line param as a string.",
			"server": true,
			"client": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"extends": "GlobalSys",
		"variable": ""
	},
	"GridNav": {
		"description": "extends GridNav",
		"CanFindPath": {
			"class": "GridNav",
			"function": "CanFindPath",
			"return": "bool",
			"description": "Determine if it is possible to reach the specified end point from the specified start point. bool (vStart, vEnd)",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"DestroyTreesAroundPoint": {
			"class": "GridNav",
			"function": "DestroyTreesAroundPoint",
			"return": "void",
			"description": "Destroy all trees in the area(vPosition, flRadius, bFullCollision",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				}
			}
		},
		"FindPathLength": {
			"class": "GridNav",
			"function": "FindPathLength",
			"return": "float",
			"description": "Find a path between the two points an return the length of the path. If there is not a path between the points the returned value will be -1. float (vStart, vEnd )",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				}
			}
		},
		"GetAllTreesAroundPoint": {
			"class": "GridNav",
			"function": "GetAllTreesAroundPoint",
			"return": "table",
			"description": "Returns a table full of tree HSCRIPTS (vPosition, flRadius, bFullCollision).",
			"server": true,
			"example": "GridNav:GetAllTreesAroundPoint( self.location, self.radius, false )",
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				}
			}
		},
		"GridPosToWorldCenterX": {
			"class": "GridNav",
			"function": "GridPosToWorldCenterX",
			"return": "float",
			"description": "Get the X position of the center of a given X index",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GridPosToWorldCenterY": {
			"class": "GridNav",
			"function": "GridPosToWorldCenterY",
			"return": "float",
			"description": "Get the Y position of the center of a given Y index",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"IsBlocked": {
			"class": "GridNav",
			"function": "IsBlocked",
			"return": "bool",
			"description": "Checks whether the given position is blocked",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				}
			}
		},
		"IsNearbyTree": {
			"class": "GridNav",
			"function": "IsNearbyTree",
			"return": "bool",
			"description": "(position, radius, checkFullTreeRadius?) Checks whether there are any trees overlapping the given point",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "No Description Set"
				},
				"float_2": {
					"type": "float",
					"params_name": "float_2",
					"description": "No Description Set"
				},
				"bool_3": {
					"type": "bool",
					"params_name": "bool_3",
					"description": "No Description Set"
				}
			}
		},
		"IsTraversable": {
			"class": "GridNav",
			"function": "IsTraversable",
			"return": "bool",
			"description": "判断目标位置是否可通行",
			"server": true,
			"params": {
				"Vector_1": {
					"type": "Vector",
					"params_name": "Vector_1",
					"description": "目标位置坐标"
				}
			}
		},
		"RegrowAllTrees": {
			"class": "GridNav",
			"function": "RegrowAllTrees",
			"return": "void",
			"description": "Causes all trees in the map to regrow",
			"server": true,
			"params": {}
		},
		"WorldToGridPosX": {
			"class": "GridNav",
			"function": "WorldToGridPosX",
			"return": "int",
			"description": "Get the X index of a given world X position",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"WorldToGridPosY": {
			"class": "GridNav",
			"function": "WorldToGridPosY",
			"return": "int",
			"description": "Get the Y index of a given world Y position",
			"server": true,
			"params": {
				"float_1": {
					"type": "float",
					"params_name": "float_1",
					"description": "No Description Set"
				}
			}
		},
		"extends": "GridNav",
		"variable": ""
	},
	"ProjectileManager": {
		"description": "extends ProjectileManager",
		"CreateLinearProjectile": {
			"class": "ProjectileManager",
			"function": "CreateLinearProjectile",
			"return": "int",
			"description": "创建一个线性投射物，返回投射物ID。参数: Ability, Source, vSpawnOrigin, vVelocity, vAcceleration, fDistance, fStartRadius, fEndRadius, bHasFrontalCone, iUnitTargetTeam, iUnitTargetType, iUnitTargetFlags, bProvidesVision, iVisionTeamNumber, iVisionRadius, bDrawsOnMinimap, bVisibleToEnemies, bIgnoreSource,fExpireTime, fMaxSpeed",
			"server": true,
			"example": "-- 创建一个月神箭\nfunction mirana_arrow:OnSpellStart()\n\tlocal hCaster = self:GetCaster()\n\tlocal vPosition = self:GetCursorPosition()\n\tlocal iSpeed = 1800\n\tlocal tInfo = \n\t{\n\t\tAbility = self, -- 技能\n        \tEffectName = \"particles/units/heroes/hero_mirana/mirana_spell_arrow.vpcf\", -- 投射物特效\n        \tvSpawnOrigin = hCaster:GetAttachmentOrigin(hCaster:ScriptLookupAttachment(\"attach_attack1\")), -- 投射物起点\n        \tfDistance = 2000, -- 最大距离\n        \tfStartRadius = 64, -- 起始半径\n        \tfEndRadius = 64, -- 终点半径\n        \tSource = hCaster, -- 来源单位\n        \tbHasFrontalCone = false, -- 是否有前椎体\n        \tbReplaceExisting = false, -- 替换已经存在的投射物\n        \tiUnitTargetTeam = DOTA_UNIT_TARGET_TEAM_ENEMY, -- 目标队伍\n        \tiUnitTargetFlags = DOTA_UNIT_TARGET_FLAG_NONE, -- 目标标记\n        \tiUnitTargetType = DOTA_UNIT_TARGET_HERO + DOTA_UNIT_TARGET_BASIC, -- 目标类型\n        \tfExpireTime = GameRules:GetGameTime() + 10.0, -- 销毁时间\n\t\tbDeleteOnHit = true, -- 击中后是否销毁\n\t\tvVelocity = (vPosition - hCaster:GetAbsOrigin()):Normalized() * iSpeed, -- 速度\n\t\tbProvidesVision = true, -- 是否提供视野\n\t\tiVisionRadius = 1000, -- 视野半径\n\t\tiVisionTeamNumber = hCaster:GetTeamNumber(), -- 视野队伍\n\t\tExtraData = \n\t\t{\n\t\t\tflDamage = 360,\n\t\t},\n\t}\n\tprojectile = ProjectileManager:CreateLinearProjectile(tInfo)\nend",
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "tInfo",
					"description": "投射物参数"
				}
			}
		},
		"ChangeTrackingProjectileSpeed": {
			"class": "ProjectileManager",
			"function": "ChangeTrackingProjectileSpeed",
			"return": "void",
			"description": "Update speed",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				},
				"int_2": {
					"type": "int",
					"params_name": "int_2",
					"description": "No Description Set"
				}
			}
		},
		"CreateTrackingProjectile": {
			"class": "ProjectileManager",
			"function": "CreateTrackingProjectile",
			"return": "int",
			"description": "Creates a tracking projectile",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"DestroyLinearProjectile": {
			"class": "ProjectileManager",
			"function": "DestroyLinearProjectile",
			"return": "void",
			"description": "Destroys the linear projectile matching the argument ID",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"DestroyTrackingProjectile": {
			"class": "ProjectileManager",
			"function": "DestroyTrackingProjectile",
			"return": "void",
			"description": "Destroy a tracking projectile early",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetLinearProjectileLocation": {
			"class": "ProjectileManager",
			"function": "GetLinearProjectileLocation",
			"return": "Vector",
			"description": "Returns current location of projectile",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetLinearProjectileRadius": {
			"class": "ProjectileManager",
			"function": "GetLinearProjectileRadius",
			"return": "float",
			"description": "Returns current radius of projectile",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetLinearProjectileVelocity": {
			"class": "ProjectileManager",
			"function": "GetLinearProjectileVelocity",
			"return": "Vector",
			"description": "Returns a vector representing the current velocity of the projectile.",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"GetTrackingProjectileLocation": {
			"class": "ProjectileManager",
			"function": "GetTrackingProjectileLocation",
			"return": "Vector",
			"description": "Returns current location of projectile",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"IsValidProjectile": {
			"class": "ProjectileManager",
			"function": "IsValidProjectile",
			"return": "bool",
			"description": "Is this a valid projectile?",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				}
			}
		},
		"ProjectileDodge": {
			"class": "ProjectileManager",
			"function": "ProjectileDodge",
			"return": "void",
			"description": "Makes the specified unit dodge projectiles",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"UpdateLinearProjectileDirection": {
			"class": "ProjectileManager",
			"function": "UpdateLinearProjectileDirection",
			"return": "void",
			"description": "Update velocity",
			"server": true,
			"params": {
				"int_1": {
					"type": "int",
					"params_name": "int_1",
					"description": "No Description Set"
				},
				"Vector_2": {
					"type": "Vector",
					"params_name": "Vector_2",
					"description": "No Description Set"
				},
				"float_3": {
					"type": "float",
					"params_name": "float_3",
					"description": "No Description Set"
				}
			}
		},
		"extends": "ProjectileManager",
		"variable": ""
	},
	"SteamInfo": {
		"description": "extends SteamInfo",
		"IsPublicUniverse": {
			"class": "SteamInfo",
			"function": "IsPublicUniverse",
			"return": "bool",
			"description": "Is the script connected to the public Steam universe",
			"server": true,
			"params": {}
		},
		"extends": "SteamInfo",
		"variable": ""
	},
	"Vector": {
		"type": "custom_note",
		"description": "3D 向量类",
		"constructor": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "constructor",
			"return": "Vector",
			"description": "创建一个新的Vector，使用笛卡尔坐标系。成员变量x,y,z。",
			"server": true,
			"client": true,
			"example": "Vector(float x, float y, float z)",
			"params": {
				"x": {
					"type": "float",
					"params_name": "x",
					"description": "x"
				},
				"y": {
					"type": "float",
					"params_name": "y",
					"description": "y"
				},
				"z": {
					"type": "float",
					"params_name": "z",
					"description": "z"
				}
			}
		},
		"__add": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "__add",
			"return": "Vector",
			"description": "Overloaded +. Adds vectors together.",
			"server": true,
			"client": true,
			"example": "Vector __add(Vector a, Vector b)",
			"params": {
				"a": {
					"type": "Vector",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "Vector",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"__div": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "__div",
			"return": "Vector",
			"description": "Overloaded /. Divides vectors.",
			"server": true,
			"client": true,
			"example": "Vector __div(Vector a, Vector b)",
			"params": {
				"a": {
					"type": "Vector",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "Vector",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"__eq": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "__eq",
			"return": "bool",
			"description": "Overloaded ==. Tests for Equality.",
			"server": true,
			"client": true,
			"example": "bool __eq(Vector a, Vector b)",
			"params": {
				"a": {
					"type": "Vector",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "Vector",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"__len": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "__len",
			"return": "float",
			"description": "Overloaded # returns the length of the vector.",
			"server": true,
			"client": true,
			"example": "float __len()",
			"params": {}
		},
		"__mul": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "__mul",
			"return": "Vector",
			"description": "Overloaded * returns the vectors multiplied together. can also be used to multiply with scalars.",
			"server": true,
			"client": true,
			"example": "Vector __mul(Vector a, Vector b)",
			"params": {
				"a": {
					"type": "Vector",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "Vector",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"__sub": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "__sub",
			"return": "Vector",
			"description": "Overloaded -. Subtracts vectors",
			"server": true,
			"client": true,
			"example": "Vector __sub(Vector a, Vector b)",
			"params": {
				"a": {
					"type": "Vector",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "Vector",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"__tostring": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "__tostring",
			"return": "string",
			"description": "Overloaded .. Converts vectors to strings",
			"server": true,
			"client": true,
			"example": "string __tostring()",
			"params": {}
		},
		"__unm": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "__unm",
			"return": "Vector",
			"description": "Overloaded unary - operator. Reverses the vector.",
			"server": true,
			"client": true,
			"example": "Vector __unm()",
			"params": {}
		},
		"Cross": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "Cross",
			"return": "Vector",
			"description": "Cross product of two vectors.",
			"server": true,
			"client": true,
			"example": "Vector Cross(Vector a, Vector b)",
			"params": {
				"a": {
					"type": "Vector",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "Vector",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"Dot": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "Dot",
			"return": "float",
			"description": "Dot product of two vectors.",
			"server": true,
			"client": true,
			"example": "float Dot(Vector a, Vector b)",
			"params": {
				"a": {
					"type": "Vector",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "Vector",
					"params_name": "b",
					"description": "b"
				}
			}
		},
		"Length": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "Length",
			"return": "float",
			"description": "Length of the Vector.",
			"server": true,
			"client": true,
			"example": "float Length()",
			"params": {}
		},
		"Length2D": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "Length2D",
			"return": "float",
			"description": "Length of the Vector in the XY plane.",
			"server": true,
			"client": true,
			"example": "float Length2D()",
			"params": {}
		},
		"Lerp": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "Lerp",
			"return": "Vector",
			"description": "Linear interpolation between the vector and the passed in target over t = [0,1].",
			"server": true,
			"client": true,
			"example": "Vector Lerp(Vector target, float t)",
			"params": {
				"target": {
					"type": "Vector",
					"params_name": "target",
					"description": "target"
				},
				"t": {
					"type": "float",
					"params_name": "t",
					"description": "t"
				}
			}
		},
		"Normalized": {
			"class": "Vector",
			"class_cl": "Vector",
			"function": "Normalized",
			"return": "Vector",
			"description": "Returns the vector normalized.",
			"server": true,
			"client": true,
			"example": "Vector Normalized()",
			"params": {}
		},
		"extends": "",
		"variable": ""
	},
	"QAngle": {
		"type": "custom_note",
		"description": "Class for angles.",
		"constructor": {
			"class": "QAngle",
			"class_cl": "QAngle",
			"function": "constructor",
			"return": "QAngle",
			"description": "创建一个新的QAngle。成员变量x,y,z。",
			"server": true,
			"client": true,
			"example": "QAngle(float pitch, float yaw, float roll)",
			"params": {
				"pitch": {
					"type": "float",
					"params_name": "pitch",
					"description": "pitch"
				},
				"yaw": {
					"type": "float",
					"params_name": "yaw",
					"description": "yaw"
				},
				"roll": {
					"type": "float",
					"params_name": "roll",
					"description": "roll"
				}
			}
		},
		"__add": {
			"class": "QAngle",
			"class_cl": "QAngle",
			"function": "__add",
			"return": "QAngle",
			"description": "Overloaded +. Adds angles together.<br>Note: Use RotateOrientation() instead to properly rotate angles.",
			"server": true,
			"client": true,
			"example": "QAngle __add(QAngle a, QAngle b)",
			"params": {
				"a": {
					"type": "QAngle",
					"params_name": "a",
					"description": "QAngle a"
				},
				"b": {
					"type": "QAngle",
					"params_name": "b",
					"description": "QAngle b"
				}
			}
		},
		"__eq": {
			"class": "QAngle",
			"class_cl": "QAngle",
			"function": "__eq",
			"return": "QAngle",
			"description": "Overloaded ==. Tests for Equality",
			"server": true,
			"client": true,
			"example": "bool __eq(QAngle a, QAngle b)",
			"params": {
				"a": {
					"type": "QAngle",
					"params_name": "a",
					"description": "QAngle a"
				},
				"b": {
					"type": "QAngle",
					"params_name": "b",
					"description": "QAngle b"
				}
			}
		},
		"__tostring": {
			"class": "QAngle",
			"class_cl": "QAngle",
			"function": "__tostring",
			"return": "string",
			"description": "Overloaded .. Converts the QAngle to a human readable string.",
			"server": true,
			"client": true,
			"example": "string __tostring()",
			"params": {}
		},
		"Forward": {
			"class": "QAngle",
			"class_cl": "QAngle",
			"function": "Forward",
			"return": "Vector",
			"description": "Returns the forward vector.",
			"server": true,
			"client": true,
			"example": "Vector Forward()",
			"params": {}
		},
		"Left": {
			"class": "QAngle",
			"class_cl": "QAngle",
			"function": "Left",
			"return": "Vector",
			"description": "Returns the Left vector.",
			"server": true,
			"client": true,
			"example": "Vector Left()",
			"params": {}
		},
		"Up": {
			"class": "QAngle",
			"class_cl": "QAngle",
			"function": "Up",
			"return": "Vector",
			"description": "Returns the Up vector.",
			"server": true,
			"client": true,
			"example": "Vector Up()",
			"params": {}
		},
		"extends": "",
		"variable": ""
	},
	"utilsinit.lua": {
		"type": "custom_note",
		"description": "Functions automatically included from the utilsinit.lua core library.",
		"abs": {
			"class": "Global",
			"function": "abs",
			"return": "float",
			"server": true,
			"client": true,
			"description": "取绝对值",
			"example": "local a = abs(-1)",
			"params": {
				"val": {
					"type": "float",
					"params_name": "val",
					"description": "val"
				}
			},
			"class_cl": "Global"
		},
		"Clamp": {
			"class": "Global",
			"function": "Clamp",
			"return": "float",
			"server": true,
			"client": true,
			"description": "将传入值限制在最大值与最小值之间。",
			"example": "local a = Clamp(2, 4, 5) -- a = 4",
			"params": {
				"val": {
					"type": "float",
					"params_name": "val",
					"description": "val"
				},
				"min": {
					"type": "float",
					"params_name": "min",
					"description": "min"
				},
				"max": {
					"type": "float",
					"params_name": "max",
					"description": "max"
				}
			},
			"class_cl": "Global"
		},
		"Deg2Rad": {
			"class": "Global",
			"function": "Deg2Rad",
			"return": "float",
			"server": true,
			"client": true,
			"description": "将角度转换为弧度。",
			"example": "local rad = Deg2Rad(60)",
			"params": {
				"deg": {
					"type": "float",
					"params_name": "deg",
					"description": "角度"
				}
			},
			"class_cl": "Global"
		},
		"Rad2Deg": {
			"class": "Global",
			"function": "Rad2Deg",
			"return": "float",
			"server": true,
			"client": true,
			"description": "将弧度转换为角度。",
			"example": "local deg = Rad2Deg(3.14)",
			"params": {
				"rad": {
					"type": "float",
					"params_name": "rad",
					"description": "角度"
				}
			},
			"class_cl": "Global"
		},
		"Lerp": {
			"class": "Global",
			"function": "Lerp",
			"return": "float",
			"server": true,
			"client": true,
			"description": "线性插值。传入[0, 1]的值，返回[min, max]中的线性插值。",
			"example": "local val = Lerp(0.5, 0, 10) -- val = 5",
			"params": {
				"val": {
					"type": "float",
					"params_name": "val",
					"description": "val"
				},
				"min": {
					"type": "float",
					"params_name": "min",
					"description": "最小值"
				},
				"max": {
					"type": "float",
					"params_name": "max",
					"description": "最大值"
				}
			},
			"class_cl": "Global"
		},
		"max": {
			"class": "Global",
			"function": "max",
			"return": "float",
			"server": true,
			"client": true,
			"description": "返回其中的较大值。",
			"example": "local max = max(1, 2) -- max = 2",
			"params": {
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				}
			},
			"class_cl": "Global"
		},
		"min": {
			"class": "Global",
			"function": "min",
			"return": "float",
			"server": true,
			"client": true,
			"description": "返回其中的较小值。",
			"example": "local min = min(1, 2) -- min = 1",
			"params": {
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				}
			},
			"class_cl": "Global"
		},
		"Merge": {
			"class": "Global",
			"function": "Merge",
			"return": "table",
			"server": true,
			"client": true,
			"description": "将两个表合并为第三个表，覆盖所有匹配键（t1覆盖t2）。",
			"example": "local t3 = Merge(t1, t2)",
			"params": {
				"t1": {
					"type": "table",
					"params_name": "t1",
					"description": "t1"
				},
				"t2": {
					"type": "table",
					"params_name": "t2",
					"description": "t2"
				}
			},
			"class_cl": "Global"
		},
		"RemapVal": {
			"class": "Global",
			"function": "RemapVal",
			"return": "float",
			"server": true,
			"client": true,
			"description": "将传入值从范围[a, b]映射到范围[c, d]。返回值有可能超过范围[c, d]。",
			"example": "local val = RemapVal(0.5, 0, 1, 10, 20) -- val = 15",
			"params": {
				"input": {
					"type": "float",
					"params_name": "input",
					"description": "input"
				},
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				},
				"c": {
					"type": "float",
					"params_name": "c",
					"description": "c"
				},
				"d": {
					"type": "float",
					"params_name": "d",
					"description": "d"
				}
			},
			"class_cl": "Global"
		},
		"RemapValClamped": {
			"class": "Global",
			"function": "RemapValClamped",
			"return": "float",
			"server": true,
			"client": true,
			"description": "将传入值从范围[a, b]映射到范围[c, d]。并且将返回值限制在范围[c, d]。",
			"example": "local val = RemapValClamped(0.5, 0, 1, 10, 20) -- val = 15",
			"params": {
				"input": {
					"type": "float",
					"params_name": "input",
					"description": "input"
				},
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				},
				"c": {
					"type": "float",
					"params_name": "c",
					"description": "c"
				},
				"d": {
					"type": "float",
					"params_name": "d",
					"description": "d"
				}
			},
			"class_cl": "Global"
		},
		"VectorDistanceSq": {
			"class": "Global",
			"function": "VectorDistanceSq",
			"return": "float",
			"server": true,
			"client": true,
			"description": "两个矢量之间的距离平方(比计算平面距离快)<br>return (v1.x - v2.x) * (v1.x - v2.x) + (v1.y - v2.y) * (v1.y - v2.y) + (v1.z - v2.z) * (v1.z - v2.z)",
			"example": "local val = VectorDistanceSq(v1, v2)",
			"params": {
				"v1": {
					"type": "Vector",
					"params_name": "v1",
					"description": "v1"
				},
				"v2": {
					"type": "Vector",
					"params_name": "v2",
					"description": "v2"
				}
			},
			"class_cl": "Global"
		},
		"VectorDistance": {
			"class": "Global",
			"function": "VectorDistance",
			"return": "float",
			"server": true,
			"client": true,
			"description": "两个矢量之间的距离<br>return math.sqrt(VectorDistanceSq(v1, v2))",
			"example": "local val = VectorDistance(v1, v2)",
			"params": {
				"v1": {
					"type": "Vector",
					"params_name": "v1",
					"description": "v1"
				},
				"v2": {
					"type": "Vector",
					"params_name": "v2",
					"description": "v2"
				}
			},
			"class_cl": "Global"
		},
		"VectorLerp": {
			"class": "Global",
			"function": "VectorLerp",
			"return": "Vector",
			"server": true,
			"client": true,
			"description": "向量值在[0，1]上的线性插值。跟另一个全局函数LerpVectors功能一样。<br>return Vector(Lerp(t, a.x, b.x), Lerp(t, a.y, b.y), Lerp(t, a.z, b.z))",
			"example": "local val = VectorLerp(t, v1, v2)",
			"params": {
				"t": {
					"type": "Vector",
					"params_name": "t",
					"description": "t"
				},
				"v1": {
					"type": "Vector",
					"params_name": "v1",
					"description": "v1"
				},
				"v2": {
					"type": "Vector",
					"params_name": "v2",
					"description": "v2"
				}
			},
			"class_cl": "Global"
		},
		"VectorIsZero": {
			"class": "Global",
			"function": "VectorIsZero",
			"return": "bool",
			"server": true,
			"client": true,
			"description": "检查向量是否为零向量。<br>return (v.x == 0.0) and (v.y == 0.0) and (v.z == 0.0)",
			"example": "local val = VectorIsZero(v)",
			"params": {
				"v": {
					"type": "Vector",
					"params_name": "v",
					"description": "v"
				}
			},
			"class_cl": "Global"
		},
		"extends": "",
		"variable": ""
	},
	"VLua": {
		"type": "custom_note",
		"description": "Functions automatically included from the library.lua core library. Located in the vlua table rather than directly in the global scope. \nLibrary functions to support Lua code generated by Sq2Lua.exe",
		"vlua.clear": {
			"class": "Global",
			"function": "vlua.clear",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel clear table method.",
			"example": "table vlua.clear(table t)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				}
			},
			"class_cl": "Global"
		},
		"vlua.compare": {
			"class": "Global",
			"function": "vlua.compare",
			"return": "int",
			"server": true,
			"client": true,
			"description": "Implements Squirrel three way compare operator ( <=> ).",
			"example": "int vlua.compare(float a, float b)",
			"params": {
				"a": {
					"type": "float",
					"params_name": "a",
					"description": "a"
				},
				"b": {
					"type": "float",
					"params_name": "b",
					"description": "b"
				}
			},
			"class_cl": "Global"
		},
		"vlua.contains": {
			"class": "Global",
			"function": "vlua.contains",
			"return": "bool",
			"server": true,
			"client": true,
			"description": "Implements Squirrel in operator.",
			"example": "bool vlua.contains(table t, variable key)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				},
				"key": {
					"type": "variable",
					"params_name": "key",
					"description": "key"
				}
			},
			"class_cl": "Global"
		},
		"vlua.delete": {
			"class": "Global",
			"function": "vlua.delete",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel slot delete operator.",
			"example": "table vlua.delete(table t, variable key)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				},
				"key": {
					"type": "variable",
					"params_name": "key",
					"description": "key"
				}
			},
			"class_cl": "Global"
		},
		"vlua.clone": {
			"class": "Global",
			"function": "vlua.clone",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel clone operator.",
			"example": "table vlua.clone(table t)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				}
			},
			"class_cl": "Global"
		},
		"vlua.rawdelete": {
			"class": "Global",
			"function": "vlua.rawdelete",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel rawdelete library function.",
			"example": "table vlua.rawdelete(table t, variable key)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				},
				"key": {
					"type": "variable",
					"params_name": "key",
					"description": "key"
				}
			},
			"class_cl": "Global"
		},
		"vlua.rawin": {
			"class": "Global",
			"function": "vlua.rawin",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel rawin library function.",
			"example": "table vlua.rawin(table t, variable key)",
			"params": {
				"t": {
					"type": "table",
					"params_name": "t",
					"description": "t"
				},
				"key": {
					"type": "variable",
					"params_name": "key",
					"description": "key"
				}
			},
			"class_cl": "Global"
		},
		"vlua.find": {
			"class": "Global",
			"function": "vlua.find",
			"return": "variable",
			"server": true,
			"client": true,
			"description": "Implements Squirrel find method for tables and strings. (o, substr, [startidx]) for strings, (o, value) for tables",
			"example": "variable vlua.find([table/string] o, variable value, [int startIndex])",
			"params": {
				"o": {
					"type": "[table/string]",
					"params_name": "o",
					"description": "o"
				},
				"value": {
					"type": "variable",
					"params_name": "value",
					"description": "value"
				},
				"startIndex": {
					"type": "int",
					"params_name": "startIndex",
					"description": "startIndex"
				}
			},
			"class_cl": "Global"
		},
		"vlua.slice": {
			"class": "Global",
			"function": "vlua.slice",
			"return": "variable",
			"server": true,
			"client": true,
			"description": "Implements Squirrel slice method for tables and strings.",
			"example": "variable vlua.slice([table/string] o, int startIndex, [int endIndex])",
			"params": {
				"o": {
					"type": "[table/string]",
					"params_name": "o",
					"description": "o"
				},
				"startIndex": {
					"type": "int",
					"params_name": "startIndex",
					"description": "startIndex"
				},
				"endIndex": {
					"type": "int",
					"params_name": "endIndex",
					"description": "endIndex"
				}
			},
			"class_cl": "Global"
		},
		"vlua.reverse": {
			"class": "Global",
			"function": "vlua.reverse",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel reverse method for tables.",
			"example": "table vlua.reverse(table o)",
			"params": {
				"o": {
					"type": "table",
					"params_name": "o",
					"description": "o"
				}
			},
			"class_cl": "Global"
		},
		"vlua.resize": {
			"class": "Global",
			"function": "vlua.resize",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel resize method for tables.",
			"example": "table vlua.resize(string o, int size, [variable fill])",
			"params": {
				"o": {
					"type": "string",
					"params_name": "o",
					"description": "o"
				},
				"size": {
					"type": "int",
					"params_name": "size",
					"description": "size"
				},
				"fill": {
					"type": "variable",
					"params_name": "fill",
					"description": "fill"
				}
			},
			"class_cl": "Global"
		},
		"vlua.extend": {
			"class": "Global",
			"function": "vlua.extend",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel extend method for tables.",
			"example": "table vlua.extend(table o, array array)",
			"params": {
				"o": {
					"type": "table",
					"params_name": "o",
					"description": "o"
				},
				"array": {
					"type": "array",
					"params_name": "array",
					"description": "array"
				}
			},
			"class_cl": "Global"
		},
		"vlua.map": {
			"class": "Global",
			"function": "vlua.map",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel map method for tables.",
			"example": "table vlua.map(table o, function mapFunc)",
			"params": {
				"o": {
					"type": "table",
					"params_name": "o",
					"description": "o"
				},
				"mapFunc": {
					"type": "function",
					"params_name": "mapFunc",
					"description": "mapFunc"
				}
			},
			"class_cl": "Global"
		},
		"vlua.reduce": {
			"class": "Global",
			"function": "vlua.reduce",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel reduce method for tables.",
			"example": "table vlua.reduce(table o, function reduceFunc)",
			"params": {
				"o": {
					"type": "table",
					"params_name": "o",
					"description": "o"
				},
				"reduceFunc": {
					"type": "function",
					"params_name": "reduceFunc",
					"description": "reduceFunc"
				}
			},
			"class_cl": "Global"
		},
		"vlua.tableadd": {
			"class": "Global",
			"function": "vlua.tableadd",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements tableadd function to support += paradigm used in Squirrel.",
			"example": "table vlua.tableadd (table t1, table t2)",
			"params": {
				"t1": {
					"type": "table",
					"params_name": "t1",
					"description": "t1"
				},
				"t2": {
					"type": "table",
					"params_name": "t2",
					"description": "t2"
				}
			},
			"class_cl": "Global"
		},
		"vlua.split": {
			"class": "Global",
			"function": "vlua.split",
			"return": "table",
			"server": true,
			"client": true,
			"description": "Implements Squirrel split function for strings.",
			"example": "table vlua.split(string input, string separator)",
			"params": {
				"input": {
					"type": "string",
					"params_name": "input",
					"description": "input"
				},
				"separator": {
					"type": "string",
					"params_name": "separator",
					"description": "separator"
				}
			},
			"class_cl": "Global"
		},
		"vlua.select": {
			"class": "Global",
			"function": "vlua.select",
			"return": "variable",
			"server": true,
			"client": true,
			"description": "Safe Ternary operator. The Lua version will return the wrong value if the value if true is nil.",
			"example": "variable vlua.select(bool conditional, variable valueIfTrue, variable valueIfFalse)",
			"params": {
				"conditional": {
					"type": "bool",
					"params_name": "conditional",
					"description": "conditional"
				},
				"valueIfTrue": {
					"type": "variable",
					"params_name": "valueIfTrue",
					"description": "valueIfTrue"
				},
				"valueIfFalse": {
					"type": "variable",
					"params_name": "valueIfFalse",
					"description": "valueIfFalse"
				}
			},
			"class_cl": "Global"
		},
		"extends": "",
		"variable": ""
	},
	"ABILITY_TYPES": {
		"description_lite": "技能类型",
		"description": "no description",
		"ABILITY_TYPE_ATTRIBUTES": {
			"class": "ABILITY_TYPES",
			"name": "ABILITY_TYPE_ATTRIBUTES",
			"value": 2,
			"description_lite": "一般视为天赋技能类型"
		},
		"ABILITY_TYPE_BASIC": {
			"class": "ABILITY_TYPES",
			"name": "ABILITY_TYPE_BASIC",
			"value": 0,
			"description_lite": "基础技能类型"
		},
		"ABILITY_TYPE_HIDDEN": {
			"class": "ABILITY_TYPES",
			"name": "ABILITY_TYPE_HIDDEN",
			"value": 3,
			"description_lite": "隐藏技能，无效，使用DOTA_ABILITY_BEHAVIOR中的DOTA_ABILITY_BEHAVIOR_HIDDEN"
		},
		"ABILITY_TYPE_ULTIMATE": {
			"class": "ABILITY_TYPES",
			"name": "ABILITY_TYPE_ULTIMATE",
			"value": 1,
			"description_lite": "终极技能类型，拥有默认快捷键"
		}
	},
	"AbilityLearnResult_t": {
		"description_lite": "技能可升级类型",
		"description": "no description",
		"ABILITY_CANNOT_BE_UPGRADED_AT_MAX": {
			"class": "AbilityLearnResult_t",
			"name": "ABILITY_CANNOT_BE_UPGRADED_AT_MAX",
			"value": 2,
			"description": "技能不能升级，因为已达到最大等级",
			"description_lite": "技能已达到最大等级",
			"example": "No Example Set"
		},
		"ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE": {
			"class": "AbilityLearnResult_t",
			"name": "ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL": {
			"class": "AbilityLearnResult_t",
			"name": "ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "单位未达到需求等级",
			"example": "No Example Set"
		},
		"ABILITY_CAN_BE_UPGRADED": {
			"class": "AbilityLearnResult_t",
			"name": "ABILITY_CAN_BE_UPGRADED",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "技能可被升级",
			"example": "No Example Set"
		},
		"ABILITY_NOT_LEARNABLE": {
			"class": "AbilityLearnResult_t",
			"name": "ABILITY_NOT_LEARNABLE",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "不能学习的技能类型",
			"example": "No Example Set"
		}
	},
	"ABILITY_TYPE_ATTRIBUTES": {
		"description_lite": "一般视为天赋技能类型"
	},
	"ABILITY_TYPE_BASIC": {
		"description_lite": "基础技能类型"
	},
	"ABILITY_TYPE_HIDDEN": {
		"description_lite": "隐藏技能，无效，使用DOTA_ABILITY_BEHAVIOR中的DOTA_ABILITY_BEHAVIOR_HIDDEN"
	},
	"ABILITY_TYPE_ULTIMATE": {
		"description_lite": "终极技能类型，拥有默认快捷键"
	},
	"DOTA_ATTRIBUTE_AGILITY": {
		"description_lite": "敏捷属性"
	},
	"DOTA_ATTRIBUTE_INTELLECT": {
		"description_lite": "智力属性"
	},
	"DOTA_ATTRIBUTE_STRENGTH": {
		"description_lite": "力量属性"
	},
	"DAMAGE_TYPE_PURE": {
		"description_lite": "纯粹伤害，不计算护甲与魔抗，无视伤害格挡。",
		"description": "神圣伤害，纯粹伤害，"
	},
	"DAMAGE_TYPE_PHYSICAL": {
		"description_lite": "物理伤害，受到护甲与伤害格挡影响，跟魔法抗性无关且不能影响虚无单位。"
	},
	"DAMAGE_TYPE_MAGICAL": {
		"description_lite": "魔法伤害，受到魔法抗性的影响。"
	},
	"DOTA_TEAM_BADGUYS": {
		"description_lite": "夜魇"
	},
	"DOTA_TEAM_GOODGUYS": {
		"description_lite": "天辉"
	},
	"DOTA_TEAM_NEUTRALS": {
		"description_lite": "中立"
	},
	"DOTA_UNIT_CAP_MOVE_FLY": {
		"description_lite": "飞行移动能力"
	},
	"DOTA_UNIT_CAP_MOVE_GROUND": {
		"description_lite": "地面移动能力"
	},
	"DOTA_UNIT_CAP_MOVE_NONE": {
		"description_lite": "没有移动能力"
	},
	"DOTA_DAMAGE_FLAG_HPLOSS": {
		"description_lite": "生命移除"
	},
	"DOTA_DAMAGE_FLAG_NON_LETHAL": {
		"description_lite": "不致死"
	},
	"DOTA_DAMAGE_FLAG_REFLECTION": {
		"description_lite": "不反弹"
	},
	"DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL": {
		"description_lite": "没有技能吸血"
	},
	"DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION": {
		"description_lite": "没有技能增强"
	},
	"DOTA_DAMAGE_FLAG_NONE": {
		"description_lite": "没有"
	},
	"DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR": {
		"description_lite": "无视魔抗"
	},
	"DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR": {
		"description_lite": "无视护甲"
	},
	"DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR": {
		"description_lite": "无视基础护甲"
	},
	"DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN": {
		"description_lite": "当伤害来源不可见时，不显示造成的伤害。"
	},
	"DOTA_DAMAGE_FLAG_BYPASSES_BLOCK": {
		"description_lite": "绕过伤害格挡"
	},
	"DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY": {
		"description_lite": "绕过无敌"
	},
	"DOTA_DAMAGE_FLAG_PROPERTY_FIRE": {
		"description_lite": "火焰属性"
	},
	"DOTA_RUNE_ARCANE": {
		"description_lite": "奥术神符"
	},
	"DOTA_RUNE_BOUNTY": {
		"description_lite": "赏金神符"
	},
	"DOTA_RUNE_DOUBLEDAMAGE": {
		"description_lite": "双倍神符"
	},
	"DOTA_RUNE_HASTE": {
		"description_lite": "急速神符"
	},
	"DOTA_RUNE_ILLUSION": {
		"description_lite": "幻象神符"
	},
	"DOTA_RUNE_INVISIBILITY": {
		"description_lite": "隐身神符"
	},
	"DOTA_RUNE_REGENERATION": {
		"description_lite": "恢复神符"
	},
	"DOTA_ABILITY_BEHAVIOR_AOE": {
		"description_lite": "范围型技能"
	},
	"DOTA_ABILITY_BEHAVIOR_AURA": {
		"description_lite": "光环"
	},
	"DOTA_ABILITY_BEHAVIOR_AUTOCAST": {
		"description_lite": "自动施法"
	},
	"DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST": {
		"description_lite": "不能对自己施放，仅做显示用。"
	},
	"DOTA_ABILITY_BEHAVIOR_CHANNELLED": {
		"description_lite": "持续施法"
	},
	"DOTA_ABILITY_BEHAVIOR_HIDDEN": {
		"description_lite": "隐藏"
	},
	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING": {
		"description_lite": "无视后摇"
	},
	"DOTA_ABILITY_BEHAVIOR_IMMEDIATE": {
		"description_lite": "立即"
	},
	"DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE": {
		"description_lite": "不能学习"
	},
	"DOTA_ABILITY_BEHAVIOR_NO_TARGET": {
		"description_lite": "无目标"
	},
	"DOTA_ABILITY_BEHAVIOR_PASSIVE": {
		"description_lite": "被动"
	},
	"DOTA_ABILITY_BEHAVIOR_POINT": {
		"description_lite": "点目标"
	},
	"DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES": {
		"description_lite": "缠绕时不可用"
	},
	"DOTA_ABILITY_BEHAVIOR_RUNE_TARGET": {
		"description_lite": "可选神符目标"
	},
	"DOTA_ABILITY_BEHAVIOR_TOGGLE": {
		"description_lite": "开关型"
	},
	"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET": {
		"description_lite": "单位目标"
	},
	"DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING": {
		"description_lite": "矢量技能"
	},
	"UF_FAIL_ANCIENT": {
		"description_lite": "无法对远古单位施放"
	},
	"UF_FAIL_ATTACK_IMMUNE": {
		"description_lite": "目标无法被攻击"
	},
	"UF_FAIL_BUILDING": {
		"description_lite": "无法对建筑物施放"
	},
	"UF_FAIL_CONSIDERED_HERO": {
		"description_lite": "技能不能以此英雄为目标"
	},
	"UF_FAIL_COURIER": {
		"description_lite": "无法对信使施放"
	},
	"UF_FAIL_CREEP": {
		"description_lite": "无法对普通单位施放"
	},
	"UF_FAIL_CUSTOM": {
		"description_lite": "自定义"
	},
	"UF_FAIL_DEAD": {
		"description_lite": "死亡"
	},
	"UF_FAIL_DISABLE_HELP": {
		"description_lite": "目标设置了禁用帮助"
	},
	"UF_FAIL_DOMINATED": {
		"description_lite": "无法对被支配单位施放"
	},
	"UF_FAIL_ENEMY": {
		"description_lite": "无法对敌军施放"
	},
	"UF_FAIL_FRIENDLY": {
		"description_lite": "无法对友军施放"
	},
	"UF_FAIL_HERO": {
		"description_lite": "无法对英雄施放"
	},
	"UF_FAIL_ILLUSION": {
		"description_lite": "技能无法以幻象为目标"
	},
	"UF_FAIL_INVALID_LOCATION": {
		"description_lite": "无效目标"
	},
	"DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP": {
		"description_lite": "检查是否禁用帮助"
	},
	"DOTA_UNIT_TARGET_FLAG_DEAD": {
		"description_lite": "死亡单位"
	},
	"DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE": {
		"description_lite": "迷雾可见"
	},
	"DOTA_UNIT_TARGET_FLAG_INVULNERABLE": {
		"description_lite": "无敌"
	},
	"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES": {
		"description_lite": "魔法免疫的敌人"
	},
	"DOTA_UNIT_TARGET_FLAG_MANA_ONLY": {
		"description_lite": "拥有魔法"
	},
	"DOTA_UNIT_TARGET_FLAG_MELEE_ONLY": {
		"description_lite": "只有近战"
	},
	"DOTA_UNIT_TARGET_FLAG_NONE": {
		"description_lite": "没有标记"
	},
	"DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS": {
		"description_lite": "没有远古单位"
	},
	"DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE": {
		"description_lite": "没有攻击免疫单位"
	},
	"DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED": {
		"description_lite": "没有被支配的单位"
	},
	"DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO": {
		"description_lite": "没有英雄级普通单位"
	},
	"DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS": {
		"description_lite": "没有幻象"
	},
	"DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES": {
		"description_lite": "没有魔法免疫的单位"
	},
	"DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED": {
		"description_lite": "没有噩梦状态单位"
	},
	"DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED": {
		"description_lite": "没有召唤物"
	},
	"DOTA_UNIT_TARGET_FLAG_NO_INVIS": {
		"description_lite": "没有隐身单位"
	},
	"DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD": {
		"description_lite": "不在游戏中的单位"
	},
	"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED": {
		"description_lite": "玩家控制的单位"
	},
	"DOTA_UNIT_TARGET_FLAG_RANGED_ONLY": {
		"description_lite": "只有远程"
	},
	"DOTA_UNIT_TARGET_TEAM_ENEMY": {
		"description_lite": "敌方队伍"
	},
	"DOTA_UNIT_TARGET_TEAM_FRIENDLY": {
		"description_lite": "友方队伍"
	},
	"DOTA_UNIT_TARGET_TEAM_BOTH": {
		"description_lite": "双方队伍"
	},
	"DOTA_UNIT_TARGET_TEAM_NONE": {
		"description_lite": "没有队伍"
	},
	"DOTA_UNIT_TARGET_NONE": {
		"description_lite": "没有目标"
	},
	"DOTA_UNIT_TARGET_HERO": {
		"description_lite": "英雄目标"
	},
	"DOTA_UNIT_TARGET_TREE": {
		"description_lite": "以树为目标"
	},
	"DOTA_UNIT_TARGET_CREEP": {
		"description_lite": "普通单位目标"
	},
	"DOTA_UNIT_TARGET_COURIER": {
		"description_lite": "信使目标"
	},
	"DOTA_UNIT_TARGET_BUILDING": {
		"description_lite": "以防御塔为目标"
	},
	"DOTA_UNIT_TARGET_BASIC": {
		"description_lite": "DOTA_UNIT_TARGET_COURIER + DOTA_UNIT_TARGET_CREEP"
	},
	"MODIFIER_STATE_ATTACK_IMMUNE": {
		"description_lite": "攻击免疫"
	},
	"MODIFIER_STATE_BLOCK_DISABLED": {
		"description_lite": "禁用格挡"
	},
	"MODIFIER_STATE_COMMAND_RESTRICTED": {
		"description_lite": "无法执行命令"
	},
	"MODIFIER_STATE_DISARMED": {
		"description_lite": "缴械"
	},
	"MODIFIER_STATE_DOMINATED": {
		"description_lite": "支配，可用于过滤是否是支配单位"
	},
	"MODIFIER_STATE_EVADE_DISABLED": {
		"description_lite": "无法闪避"
	},
	"MODIFIER_STATE_CANNOT_MISS": {
		"description_lite": "不会丢失，无视闪避"
	},
	"MODIFIER_STATE_FLYING": {
		"description_lite": "飞行"
	},
	"MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY": {
		"description_lite": "贴地飞行"
	},
	"MODIFIER_STATE_FROZEN": {
		"description_lite": "冰冻，动作会暂停"
	},
	"MODIFIER_STATE_HEXED": {
		"description_lite": "妖术，头顶会有妖术进度条"
	},
	"MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS": {
		"description_lite": "禁用移动与攻击指令"
	},
	"MODIFIER_STATE_IGNORING_STOP_ORDERS": {
		"description_lite": "禁用停止指令"
	},
	"MODIFIER_STATE_INVISIBLE": {
		"description_lite": "隐身"
	},
	"MODIFIER_STATE_INVULNERABLE": {
		"description_lite": "无敌"
	},
	"MODIFIER_STATE_LOW_ATTACK_PRIORITY": {
		"description_lite": "低攻击优先级"
	},
	"MODIFIER_STATE_MAGIC_IMMUNE": {
		"description_lite": "魔法免疫"
	},
	"MODIFIER_STATE_NIGHTMARED": {
		"description_lite": "睡眠，头上会有睡眠进度条"
	},
	"MODIFIER_STATE_MUTED": {
		"description_lite": "锁闭，禁用物品，头上有锁闭进度条"
	},
	"MODIFIER_STATE_NOT_ON_MINIMAP": {
		"description_lite": "没有小地图图标"
	},
	"MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES": {
		"description_lite": "对敌人没有小地图图标"
	},
	"MODIFIER_STATE_NO_HEALTH_BAR": {
		"description_lite": "没有生命条"
	},
	"MODIFIER_STATE_NO_UNIT_COLLISION": {
		"description_lite": "没有碰撞体积"
	},
	"MODIFIER_STATE_OUT_OF_GAME": {
		"description_lite": "离开游戏"
	},
	"MODIFIER_STATE_PASSIVES_DISABLED": {
		"description_lite": "破坏，禁用被动，头上有破坏进度条"
	},
	"MODIFIER_STATE_PROVIDES_VISION": {
		"description_lite": "提供视野"
	},
	"MODIFIER_STATE_ROOTED": {
		"description_lite": "缠绕，无法移动，头上有缠绕进度条"
	},
	"MODIFIER_STATE_SILENCED": {
		"description_lite": "沉默，无法施法，头上有沉默进度条"
	},
	"MODIFIER_STATE_SPECIALLY_DENIABLE": {
		"description_lite": "可被反补"
	},
	"MODIFIER_STATE_STUNNED": {
		"description_lite": "晕眩，头上有晕眩进度条"
	},
	"MODIFIER_STATE_TETHERED": {
		"description_lite": "束缚，头上有束缚进度条"
	},
	"MODIFIER_STATE_TRUESIGHT_IMMUNE": {
		"description_lite": "真视免疫"
	},
	"MODIFIER_STATE_UNSELECTABLE": {
		"description_lite": "不可选择"
	},
	"MODIFIER_STATE_UNSLOWABLE": {
		"description_lite": "无法减速"
	},
	"MODIFIER_STATE_UNTARGETABLE": {
		"description_lite": "无法作为目标"
	},
	"MODIFIER_STATE_ALLOW_PATHING_TROUGH_TREES": {
		"description_lite": "允许在树木中通行"
	},
	"MODIFIER_STATE_BLIND": {
		"description_lite": "致盲，完全失去视野"
	},
	"MODIFIER_STATE_CANNOT_TARGET_ENEMIES": {
		"description_lite": "禁用单位目标命令"
	},
	"DOTA_DAMAGE_CATEGORY_ATTACK": {
		"description_lite": "攻击伤害类型"
	},
	"DOTA_DAMAGE_CATEGORY_SPELL": {
		"description_lite": "施法伤害类型"
	},
	"MODIFIER_PRIORITY_HIGH": {
		"description_lite": "高优先级"
	},
	"MODIFIER_PRIORITY_LOW": {
		"description_lite": "低优先级"
	},
	"MODIFIER_PRIORITY_NORMAL": {
		"description_lite": "普通优先级"
	},
	"MODIFIER_PRIORITY_SUPER_ULTRA": {
		"description_lite": "最高优先级"
	},
	"MODIFIER_PRIORITY_ULTRA": {
		"description_lite": "更高优先级"
	},
	"MODIFIER_EVENT_ON_ABILITY_END_CHANNEL": {
		"description_lite": "当持续施法结束",
		"example": "function modifier_silencer_last_word:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_EVENT_ON_ABILITY_END_CHANNEL,\n\t}\nend\nfunction modifier_silencer_last_word:OnAbilityEndChannel(params)\n\tif IsServer() then\n\t\tif params.unit==self:GetParent() and not params.ability:IsItem() then\n\t\t\tself:Destroy()\n\t\tend\n\tend\nend"
	},
	"MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE": {
		"description": "复活时间缩减百分比，最大值为1，即没有复活时间。",
		"description_lite": "复活时间缩减百分比",
		"example": "function modifier_respawntime_percent:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE\n\t}\nend\n\nfunction modifier_respawntime_percent:GetModifierPercentageRespawnTime(params)\n\treturn 1 - (0.5 + self:GetParent():GetLevel() / 100)\nend"
	},
	"MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE": {
		"description": "技能增强百分比，多个效果非线性叠加。",
		"description_lite": "技能增强百分比",
		"example": "-- 30%技能增强\nfunction modifier_item_bloodthorn:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE\n\t}\nend\nfunction modifier_item_bloodthorn:GetModifierSpellAmplify_Percentage(params)\n\treturn 30\nend"
	},
	"MODIFIER_EVENT_ON_HERO_KILLED": {
		"description": "击杀英雄事件。传进来的参数里attacker为玩家的主英雄，unit为实际凶手单位，target为死亡目标。",
		"description_lite": "击杀英雄事件",
		"example": "function modifier_phantom_assassin_blur_imba:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_EVENT_ON_HERO_KILLED,\n\t}\nend\nfunction modifier_phantom_assassin_blur_imba:OnHeroKilled(params)\n\t-- params.attacker\t玩家控制的主英雄\n\t-- params.unit\t\t实际凶手\n\t-- params.target\t死亡目标\n\tif params.unit == self:GetParent() then\n\t\tif params.unit:HasScepter() then\n\t\t\tfor i = 0, params.unit:GetAbilityCount()-1, 1 do\n\t\t\t\tlocal hAbility = params.unit:GetAbilityByIndex(i)\n\t\t\t\tif hAbility and hAbility:GetAbilityType() == ABILITY_TYPE_BASIC then\t-- 刷新基础技能\n\t\t\t\t\thAbility:EndCooldown()\n\t\t\t\t\thAbility:RefreshCharges()\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend"
	},
	"MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE": {
		"description": "重写攻击伤害，伤害效果无视格挡效果。",
		"description_lite": "重写攻击伤害",
		"example": "function modifier_razor_eye_of_the_storm_attack_effect_imba:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE,\n\t}\nend\nfunction modifier_razor_eye_of_the_storm_attack_effect_imba:GetModifierOverrideAttackDamage(params)\n\treturn self:GetAbilitySpecialValueFor(\"damage\")\nend"
	},
	"MODIFIER_EVENT_ON_ABILITY_EXECUTED": {
		"description": "当任意类型技能使用时触发",
		"description_lite": "当技能使用时",
		"example": "No Example Set"
	},
	"MODIFIER_EVENT_ON_ABILITY_FULLY_CAST": {
		"description": "当技能完成释放时触发，不会触发切换型技能，事件在MODIFIER_EVENT_ON_ABILITY_EXECUTED后触发。",
		"description_lite": "当技能完成释放",
		"example": "No Example Set"
	},
	"MODIFIER_EVENT_ON_ABILITY_START": {
		"description": "当技能开始抬手时就会触发，不会触发切换技能类型",
		"description_lite": "当技能开始时",
		"example": "No Example Set"
	},
	"MODIFIER_EVENT_ON_BREAK_INVISIBILITY": {
		"description": "No Description Set",
		"description_lite": "当打破隐身时（测试无效）",
		"example": "No Example Set"
	},
	"MODIFIER_EVENT_ON_BUILDING_KILLED": {
		"description": "No Description Set",
		"description_lite": "（测试无效）",
		"example": "No Example Set"
	},
	"ABILITY_CANNOT_BE_UPGRADED_AT_MAX": {
		"description": "技能不能升级，因为已达到最大等级",
		"description_lite": "技能已达到最大等级",
		"example": "No Example Set"
	},
	"ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL": {
		"description": "No Description Set",
		"description_lite": "单位未达到需求等级",
		"example": "No Example Set"
	},
	"ABILITY_CAN_BE_UPGRADED": {
		"description": "No Description Set",
		"description_lite": "技能可被升级",
		"example": "No Example Set"
	},
	"ABILITY_NOT_LEARNABLE": {
		"description": "No Description Set",
		"description_lite": "不能学习的技能类型",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_AGILITY_ARMOR": {
		"description": "No Description Set",
		"description_lite": "每点敏捷增加的护甲值",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_AGILITY_ATTACK_SPEED": {
		"description": "No Description Set",
		"description_lite": "每点敏捷增加的攻击速度",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_AGILITY_DAMAGE": {
		"description": "No Description Set",
		"description_lite": "每点主属性敏捷增加的攻击力",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_AGILITY_MOVE_SPEED_PERCENT": {
		"description": "No Description Set",
		"description_lite": "每点敏捷增加的移动速度百分比",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_INTELLIGENCE_DAMAGE": {
		"description": "No Description Set",
		"description_lite": "每点主属性智力增加的攻击力",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_INTELLIGENCE_MAGIC_RESISTANCE_PERCENT": {
		"description": "No Description Set",
		"description_lite": "每点智力增加的魔法抗性",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_INTELLIGENCE_MANA": {
		"description": "No Description Set",
		"description_lite": "每点智力增加的魔法值",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_INTELLIGENCE_MANA_REGEN": {
		"description": "No Description Set",
		"description_lite": "每点智力增加的魔法回复",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_INTELLIGENCE_SPELL_AMP_PERCENT": {
		"description": "No Description Set",
		"description_lite": "每点智力增加的技能增强",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_STRENGTH_DAMAGE": {
		"description": "No Description Set",
		"description_lite": "每点主属性力量增加的攻击力",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_STRENGTH_HP": {
		"description": "No Description Set",
		"description_lite": "每点力量增加的生命值",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_STRENGTH_HP_REGEN": {
		"description": "No Description Set",
		"description_lite": "每点力量增加的生命回复",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_STRENGTH_MAGIC_RESISTANCE_PERCENT": {
		"description": "No Description Set",
		"description_lite": "每点力量增加的魔法抗性",
		"example": "No Example Set"
	},
	"DOTA_ATTRIBUTE_STRENGTH_STATUS_RESISTANCE_PERCENT": {
		"description": "No Description Set",
		"description_lite": "每点力量增加的状态抗性",
		"example": "No Example Set"
	},
	"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE": {
		"description": "No Description Set",
		"description_lite": "无敌保持",
		"example": "No Example Set"
	},
	"MODIFIER_ATTRIBUTE_MULTIPLE": {
		"description": "No Description Set",
		"description_lite": "可重复",
		"example": "No Example Set"
	},
	"MODIFIER_ATTRIBUTE_PERMANENT": {
		"description": "No Description Set",
		"description_lite": "死亡保持",
		"example": "No Example Set"
	},
	"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL": {
		"description_lite": "免疫魔法伤害",
		"description": "No Description Set",
		"example": "No Example Set"
	},
	"DOTA_ATTACK_RECORD_FAIL_TARGET_EVADED": {
		"description_lite": "目标闪避",
		"description": "目标闪避",
		"example": "No Example Set"
	},
	"DOTA_ATTACK_RECORD_FAIL_TARGET_OUT_OF_RANGE": {
		"description_lite": "超出缓冲距离",
		"description": "超出缓冲距离",
		"example": "No Example Set"
	},
	"DOTA_ATTACK_RECORD_FAIL_TERRAIN_MISS": {
		"description_lite": "地形丢失",
		"description": "地形丢失",
		"example": "No Example Set"
	},
	"DOTA_ATTACK_RECORD_FAIL_NO": {
		"description_lite": "没有丢失",
		"description": "没有丢失",
		"example": "No Example Set"
	},
	"DOTA_ATTACK_RECORD_CANNOT_FAIL": {
		"description_lite": "必中",
		"description": "必中",
		"example": "No Example Set"
	},
	"DOTA_ATTACK_RECORD_FAIL_TARGET_INVULNERABLE": {
		"description_lite": "目标无敌？",
		"description": "目标无敌？",
		"example": "No Example Set"
	},
	"DOTA_ATTACK_RECORD_FAIL_SOURCE_MISS": {
		"description_lite": "自身丢失",
		"description": "自身丢失",
		"example": "No Example Set"
	},
	"MODIFIER_EVENT_ON_ATTACK": {
		"description_lite": "当攻击时",
		"description": "整个攻击行为事件",
		"example": "No Example Set"
	},
	"MODIFIER_EVENT_ON_ATTACKED": {
		"description_lite": "当受到攻击",
		"description": "当受到攻击时",
		"example": "No Example Set"
	},
	"MODIFIER_EVENT_ON_ATTACK_FAIL": {
		"description_lite": "攻击丢失时",
		"description": "当攻击失败时，失败的具体记录查看 常量attackfail",
		"example": "No Example Set"
	},
	"DOTA_ATTACK_RECORD_FAIL_BLOCKED_BY_OBSTRUCTION": {
		"description_lite": "被障碍物阻挡",
		"description": "被障碍物阻挡",
		"example": "No Example Set"
	},
	"DOTA_HUD_VISIBILITY_ACTION_MINIMAP": {
		"description_lite": "小地图",
		"description": "小地图",
		"example": "No Example Set"
	},
	"DAMAGE_TYPE_ALL": {
		"description_lite": "全部类型",
		"description": "在伤害判断的时候，全部类型伤害均通过",
		"example": "No Example Set"
	},
	"DAMAGE_TYPE_HP_REMOVAL": {
		"description_lite": "生命转移",
		"description": "生命转移类伤害，效果与sethealth类似。不会遭受反伤。例如盛宴，骨法的虹吸",
		"example": "No Example Set"
	},
	"DAMAGE_TYPE_NONE": {
		"description_lite": "无类型",
		"description": "无类型",
		"example": "No Example Set"
	},
	"Find Types": {
		"type": "custom_note_enum",
		"description": "寻找类型",
		"FIND_UNITS_EVERYWHERE": {
			"class": "Find Types",
			"type": "custom_note",
			"name": "FIND_UNITS_EVERYWHERE",
			"value": -1,
			"description": "在整个地图中查找单位。",
			"description_lite": "在整个地图中查找单位。",
			"example": "local tTargets = FindUnitsInRadius(iTeamNumber, vStart, nil, flRadius, iTeamFilter, iTypeFilter, iFlagFilter, FIND_UNITS_EVERYWHERE, false)"
		},
		"FIND_ANY_ORDER": {
			"class": "Find Types",
			"type": "custom_note",
			"name": "FIND_ANY_ORDER",
			"value": 0,
			"description": "随机寻找到的单位。",
			"description_lite": "随机寻找到的单位。",
			"example": "local tTargets = FindUnitsInRadius(iTeamNumber, vStart, nil, flRadius, iTeamFilter, iTypeFilter, iFlagFilter, FIND_ANY_ORDER, false)"
		},
		"FIND_CLOSEST": {
			"class": "Find Types",
			"type": "custom_note",
			"name": "FIND_CLOSEST",
			"value": 1,
			"description": "离中心从近到远排序。",
			"description_lite": "离中心从近到远排序。",
			"example": "local tTargets = FindUnitsInRadius(iTeamNumber, vStart, nil, flRadius, iTeamFilter, iTypeFilter, iFlagFilter, FIND_CLOSEST, false)"
		},
		"FIND_FARTHEST": {
			"class": "Find Types",
			"type": "custom_note",
			"name": "FIND_FARTHEST",
			"value": 2,
			"description": "离中心从远到远排序。",
			"description_lite": "离中心从远到远排序。",
			"example": "local tTargets = FindUnitsInRadius(iTeamNumber, vStart, nil, flRadius, iTeamFilter, iTypeFilter, iFlagFilter, FIND_FARTHEST, false)"
		}
	},
	"Activation types": {
		"type": "custom_note_enum",
		"description": "Passed to the Activate() hook function.",
		"ACTIVATE_TYPE_INITIAL_CREATION": {
			"class": "Activation types",
			"type": "custom_note",
			"name": "ACTIVATE_TYPE_INITIAL_CREATION",
			"value": 0,
			"description": "When the function is called after entity creation.",
			"description_lite": "When the function is called after entity creation.",
			"example": "No Example Set"
		},
		"ACTIVATE_TYPE_DATAUPDATE_CREATION": {
			"class": "Activation types",
			"type": "custom_note",
			"name": "ACTIVATE_TYPE_DATAUPDATE_CREATION",
			"value": 1,
			"description": "To do",
			"description_lite": "To do",
			"example": "No Example Set"
		},
		"ACTIVATE_TYPE_ONRESTORE": {
			"class": "Activation types",
			"type": "custom_note",
			"name": "ACTIVATE_TYPE_ONRESTORE",
			"value": 2,
			"description": "When the function is called after the entity has been restored from a saved game.",
			"description_lite": "When the function is called after the entity has been restored from a saved game.",
			"example": "No Example Set"
		}
	},
	"DOTA_CONNECTION_STATE": {
		"type": "custom_note_enum",
		"description": "连接状态",
		"DOTA_CONNECTION_STATE_UNKNOWN": {
			"class": "DOTA_CONNECTION_STATE",
			"type": "custom_note",
			"name": "DOTA_CONNECTION_STATE_UNKNOWN",
			"value": 0,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_CONNECTION_STATE_NOT_YET_CONNECTED": {
			"class": "DOTA_CONNECTION_STATE",
			"type": "custom_note",
			"name": "DOTA_CONNECTION_STATE_NOT_YET_CONNECTED",
			"value": 1,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_CONNECTION_STATE_CONNECTED": {
			"class": "DOTA_CONNECTION_STATE",
			"type": "custom_note",
			"name": "DOTA_CONNECTION_STATE_CONNECTED",
			"value": 2,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_CONNECTION_STATE_DISCONNECTED": {
			"class": "DOTA_CONNECTION_STATE",
			"type": "custom_note",
			"name": "DOTA_CONNECTION_STATE_DISCONNECTED",
			"value": 3,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_CONNECTION_STATE_ABANDONED": {
			"class": "DOTA_CONNECTION_STATE",
			"type": "custom_note",
			"name": "DOTA_CONNECTION_STATE_ABANDONED",
			"value": 4,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_CONNECTION_STATE_LOADING": {
			"class": "DOTA_CONNECTION_STATE",
			"type": "custom_note",
			"name": "DOTA_CONNECTION_STATE_LOADING",
			"value": 5,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_CONNECTION_STATE_FAILED": {
			"class": "DOTA_CONNECTION_STATE",
			"type": "custom_note",
			"name": "DOTA_CONNECTION_STATE_FAILED",
			"value": 6,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		}
	},
	"DOTA_OVERHEAD_ALERT": {
		"type": "custom_note_enum",
		"description": "no description",
		"OVERHEAD_ALERT_GOLD": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_GOLD",
			"value": 0,
			"description": "金钱类型头顶通知",
			"description_lite": "金钱类型头顶通知",
			"example": "SendOverheadEventMessage(hMaster:GetPlayerOwner(), OVERHEAD_ALERT_GOLD, hMaster, iGold, hMaster:GetPlayerOwner())"
		},
		"OVERHEAD_ALERT_DENY": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_DENY",
			"value": 1,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_CRITICAL": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_CRITICAL",
			"value": 2,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_XP": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_XP",
			"value": 3,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_BONUS_SPELL_DAMAGE": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_BONUS_SPELL_DAMAGE",
			"value": 4,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_MISS": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_MISS",
			"value": 5,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_DAMAGE": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_DAMAGE",
			"value": 6,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_EVADE": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_EVADE",
			"value": 7,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_BLOCK": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_BLOCK",
			"value": 8,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_BONUS_POISON_DAMAGE": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_BONUS_POISON_DAMAGE",
			"value": 9,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_HEAL": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_HEAL",
			"value": 10,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_MANA_ADD": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_MANA_ADD",
			"value": 11,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_MANA_LOSS": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_MANA_LOSS",
			"value": 12,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_LAST_HIT_EARLY": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_LAST_HIT_EARLY",
			"value": 13,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_LAST_HIT_CLOSE": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_LAST_HIT_CLOSE",
			"value": 14,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_LAST_HIT_MISS": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_LAST_HIT_MISS",
			"value": 15,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_MAGICAL_BLOCK": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_MAGICAL_BLOCK",
			"value": 16,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_INCOMING_DAMAGE": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_INCOMING_DAMAGE",
			"value": 17,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_OUTGOING_DAMAGE": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_OUTGOING_DAMAGE",
			"value": 18,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_DISABLE_RESIST": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_DISABLE_RESIST",
			"value": 19,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_DEATH": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_DEATH",
			"value": 20,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_BLOCKED": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_BLOCKED",
			"value": 21,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_ITEM_RECEIVED": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_ITEM_RECEIVED",
			"value": 22,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_SHARD": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_SHARD",
			"value": 23,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"OVERHEAD_ALERT_DEADLY_BLOW": {
			"class": "DOTA_OVERHEAD_ALERT",
			"type": "custom_note",
			"name": "OVERHEAD_ALERT_DEADLY_BLOW",
			"value": 24,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		}
	},
	"dotaunitorder_t": {
		"type": "custom_note_enum",
		"description": "单位指令常量",
		"DOTA_UNIT_ORDER_NONE": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_NONE",
			"value": 0,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_MOVE_TO_POSITION": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_MOVE_TO_POSITION",
			"value": 1,
			"description": "移动到目标点指令",
			"description_lite": "移动到目标点指令",
			"example": "ExecuteOrderFromTable({\n\tUnitIndex = hUnit:entindex(),\n\tOrderType = DOTA_UNIT_ORDER_MOVE_TO_POSITION,\n\tTargetIndex = nil,\n\tAbilityIndex = nil,\n\tPosition = vPosition,\n\tQueue = 0\n})"
		},
		"DOTA_UNIT_ORDER_MOVE_TO_TARGET": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_MOVE_TO_TARGET",
			"value": 2,
			"description": "移动到目标单位指令",
			"description_lite": "移动到目标单位指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_MOVE_TO_TARGET,\n    TargetIndex = hTarget:entindex(),\n    AbilityIndex = nil,\n    Position = nil,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_ATTACK_MOVE": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_ATTACK_MOVE",
			"value": 3,
			"description": "攻击移动指令",
			"description_lite": "攻击移动指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_ATTACK_MOVE,\n    TargetIndex = nil,\n    AbilityIndex = nil,\n    Position = vPosition,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_ATTACK_TARGET": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_ATTACK_TARGET",
			"value": 4,
			"description": "攻击目标单位指令",
			"description_lite": "攻击目标单位指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_ATTACK_TARGET,\n    TargetIndex = hTarget:entindex(),\n    AbilityIndex = nil,\n    Position = nil,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_CAST_POSITION": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CAST_POSITION",
			"value": 5,
			"description": "点目标施法指令",
			"description_lite": "点目标施法指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_CAST_POSITION,\n    TargetIndex = nil,\n    AbilityIndex = hAbility:entindex(),\n    Position = vPosition,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_CAST_TARGET": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CAST_TARGET",
			"value": 6,
			"description": "单位目标施放指令",
			"description_lite": "单位目标施放指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_CAST_TARGET,\n    TargetIndex = hTarget:entindex(),\n    AbilityIndex = hAbility:entindex(),\n    Position = nil,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_CAST_TARGET_TREE": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CAST_TARGET_TREE",
			"value": 7,
			"description": "树目标施法指令",
			"description_lite": "树目标施法指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_CAST_TARGET_TREE,\n    TargetIndex = hTree:entindex(),\n    AbilityIndex = hAbility:entindex(),\n    Position = nil,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_CAST_NO_TARGET": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CAST_NO_TARGET",
			"value": 8,
			"description": "无目标施法指令",
			"description_lite": "无目标施法指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_CAST_NO_TARGET,\n    TargetIndex = nil,\n    AbilityIndex = hAbility:entindex(),\n    Position = nil,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_CAST_TOGGLE": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CAST_TOGGLE",
			"value": 9,
			"description": "开关技能指令",
			"description_lite": "开关技能指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_CAST_TOGGLE,\n    TargetIndex = nil,\n    AbilityIndex = hAbility:entindex(),\n    Position = nil,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_HOLD_POSITION": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_HOLD_POSITION",
			"value": 10,
			"description": "固守位置指令",
			"description_lite": "固守位置指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_HOLD_POSITION,\n    TargetIndex = nil,\n    AbilityIndex = nil,\n    Position = nil,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_TRAIN_ABILITY": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_TRAIN_ABILITY",
			"value": 11,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_DROP_ITEM": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_DROP_ITEM",
			"value": 12,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_GIVE_ITEM": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_GIVE_ITEM",
			"value": 13,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_PICKUP_ITEM": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_PICKUP_ITEM",
			"value": 14,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_PICKUP_RUNE": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_PICKUP_RUNE",
			"value": 15,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_PURCHASE_ITEM": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_PURCHASE_ITEM",
			"value": 16,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_SELL_ITEM": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_SELL_ITEM",
			"value": 17,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_DISASSEMBLE_ITEM": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_DISASSEMBLE_ITEM",
			"value": 18,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_MOVE_ITEM": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_MOVE_ITEM",
			"value": 19,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO",
			"value": 20,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_STOP": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_STOP",
			"value": 21,
			"description": "停止指令",
			"description_lite": "停止指令",
			"example": "ExecuteOrderFromTable({\n    UnitIndex = hUnit:entindex(),\n    OrderType = DOTA_UNIT_ORDER_STOP,\n    TargetIndex = nil,\n    AbilityIndex = nil,\n    Position = nil,\n    Queue = 0\n})"
		},
		"DOTA_UNIT_ORDER_TAUNT": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_TAUNT",
			"value": 22,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_BUYBACK": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_BUYBACK",
			"value": 23,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_GLYPH": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_GLYPH",
			"value": 24,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH",
			"value": 25,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_CAST_RUNE": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CAST_RUNE",
			"value": 26,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_PING_ABILITY": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_PING_ABILITY",
			"value": 27,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_MOVE_TO_DIRECTION": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_MOVE_TO_DIRECTION",
			"value": 28,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_PATROL": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_PATROL",
			"value": 29,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION",
			"value": 30,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_RADAR": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_RADAR",
			"value": 31,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK",
			"value": 32,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_CONTINUE": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CONTINUE",
			"value": 33,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED",
			"value": 34,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_CAST_RIVER_PAINT": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_CAST_RIVER_PAINT",
			"value": 35,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT",
			"value": 36,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_DROP_ITEM_AT_FOUNTAIN": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_DROP_ITEM_AT_FOUNTAIN",
			"value": 37,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		},
		"DOTA_UNIT_ORDER_TAKE_ITEM_FROM_NEUTRAL_ITEM_STASH": {
			"class": "dotaunitorder_t",
			"type": "custom_note",
			"name": "DOTA_UNIT_ORDER_TAKE_ITEM_FROM_NEUTRAL_ITEM_STASH",
			"value": 38,
			"description": "无",
			"description_lite": "无",
			"example": "No Example Set"
		}
	},
	"FCVAR flags": {
		"type": "custom_note_enum",
		"description": "FCVAR flags",
		"FCVAR_PROTECTED": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_PROTECTED",
			"value": 32,
			"description": "If a console variable contains private information (passwords etc), we don't want them to be visible to other players. Using flag the information is labeled as confidential.FCVAR_PROTECTED",
			"description_lite": "If a console variable contains private information (passwords etc), we don't want them to be visible to other players. Using flag the information is labeled as confidential.FCVAR_PROTECTED"
		},
		"FCVAR_SPONLY": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_SPONLY",
			"value": 64,
			"description": "If executing a command or changing a variable should only be allowed in single player mode, then label it with flag.FCVAR_SPONLY",
			"description_lite": "If executing a command or changing a variable should only be allowed in single player mode, then label it with flag.FCVAR_SPONLY"
		},
		"FCVAR_ARCHIVE": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_ARCHIVE",
			"value": 128,
			"description": "Some console variables contain user specific settings we want to restore each time the game is started (like or ). If a console variable is labeled as , it is saved in the file when the game shuts down and is reloaded when the game is reopened. The command can also be used to save the settings to .namenetwork_rateFCVAR_ARCHIVEconfig.cfghost_writeconfigconfig.cfg",
			"description_lite": "Some console variables contain user specific settings we want to restore each time the game is started (like or ). If a console variable is labeled as , it is saved in the file when the game shuts down and is reloaded when the game is reopened. The command can also be used to save the settings to .namenetwork_rateFCVAR_ARCHIVEconfig.cfghost_writeconfigconfig.cfg"
		},
		"FCVAR_NOTIFY": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_NOTIFY",
			"value": 256,
			"description": "If a console variable is flagged as , the server sends a notification message to all clients whenever the variable is changed. This should be used for variables that change game play rules, which are important for all players ( etc).FCVAR_NOTIFYmp_friendlyfire",
			"description_lite": "If a console variable is flagged as , the server sends a notification message to all clients whenever the variable is changed. This should be used for variables that change game play rules, which are important for all players ( etc).FCVAR_NOTIFYmp_friendlyfire"
		},
		"FCVAR_USERINFO": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_USERINFO",
			"value": 512,
			"description": "If a console variable is flagged as , the server sends a notification message to all clients whenever the variable is changed. This should be used for variables that change game play rules, which are important for all players ( etc).FCVAR_NOTIFYmp_friendlyfire",
			"description_lite": "If a console variable is flagged as , the server sends a notification message to all clients whenever the variable is changed. This should be used for variables that change game play rules, which are important for all players ( etc).FCVAR_NOTIFYmp_friendlyfire"
		},
		"FCVAR_PRINTABLEONLY": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_PRINTABLEONLY",
			"value": 1024,
			"description": "Some important variables are logged or broadcasted (gamerules etc), so it is important that they contain only printable characters (no control chars etc) to prevent arbitrary code execution and other problems.",
			"description_lite": "Some important variables are logged or broadcasted (gamerules etc), so it is important that they contain only printable characters (no control chars etc) to prevent arbitrary code execution and other problems."
		},
		"FCVAR_NEVER_AS_STRING": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_NEVER_AS_STRING",
			"value": 4096,
			"description": "The flag tells the engine never to print this variable as a string since it contains control sequences.FCVAR_NEVER_AS_STRING",
			"description_lite": "The flag tells the engine never to print this variable as a string since it contains control sequences.FCVAR_NEVER_AS_STRING"
		},
		"FCVAR_REPLICATED": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_REPLICATED",
			"value": 8192,
			"description": "When the game server and clients are using shared code where it's important that both sides run the exact same path using the same data (e.g. predicted movement/weapons, game rules). If this code uses console variables, they must have the same values on both sides. The flag ensures that by broadcasting these values to all clients. While connected, clients can't change these values and are forced to use the server-side values.FCVAR_REPLICATED",
			"description_lite": "When the game server and clients are using shared code where it's important that both sides run the exact same path using the same data (e.g. predicted movement/weapons, game rules). If this code uses console variables, they must have the same values on both sides. The flag ensures that by broadcasting these values to all clients. While connected, clients can't change these values and are forced to use the server-side values.FCVAR_REPLICATED"
		},
		"FCVAR_CHEAT": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_CHEAT",
			"value": 16384,
			"description": "Most commands and variables are for debugging purposes and not removed in release builds since they are also useful for 3rd party developers and map makers. Unfortunately we cannot allow normal players to use these debugging tools since it gives them an unfair advantage over other players (cheating). A good rule is to add to every new console command you add unless it's an explicit and legitimate options setting for players. Experience has shown that even the most harmless looking debugging command can be misused as a cheat somehow.FCVAR_CHEAT",
			"description_lite": "Most commands and variables are for debugging purposes and not removed in release builds since they are also useful for 3rd party developers and map makers. Unfortunately we cannot allow normal players to use these debugging tools since it gives them an unfair advantage over other players (cheating). A good rule is to add to every new console command you add unless it's an explicit and legitimate options setting for players. Experience has shown that even the most harmless looking debugging command can be misused as a cheat somehow.FCVAR_CHEAT"
		},
		"FCVAR_DEMO": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_DEMO",
			"value": 16384,
			"description": "When starting to record a demo file, some console variables must explicitly be added to the recording to ensure a correct playback.",
			"description_lite": "When starting to record a demo file, some console variables must explicitly be added to the recording to ensure a correct playback."
		},
		"FCVAR_DONTRECORD": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_DONTRECORD",
			"value": 131072,
			"description": "This is the opposite of , some console commands shouldn't be recorded in demo files.FCVAR_DEMO",
			"description_lite": "This is the opposite of , some console commands shouldn't be recorded in demo files.FCVAR_DEMO"
		},
		"FCVAR_NOT_CONNECTED": {
			"class": "FCVAR flags",
			"type": "custom_note",
			"name": "FCVAR_NOT_CONNECTED",
			"value": 4194304,
			"description": "Some console variables should not be changeable while the client is currently in a server (eg. fps_max) due to the possibility of exploitation of the command.",
			"description_lite": "Some console variables should not be changeable while the client is currently in a server (eg. fps_max) due to the possibility of exploitation of the command."
		}
	},
	"DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST": {
		"description_lite": "运动控制器优先级：最低",
		"description": "运动控制器优先级：最低",
		"example": "No Example Set"
	},
	"DOTA_MOTION_CONTROLLER_PRIORITY_LOW": {
		"description_lite": "运动控制器优先级：低",
		"description": "运动控制器优先级：低",
		"example": "No Example Set"
	},
	"DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST": {
		"description_lite": "运动控制器优先级：最高",
		"description": "运动控制器优先级：最高",
		"example": "No Example Set"
	},
	"DOTA_MOTION_CONTROLLER_PRIORITY_HIGH": {
		"description_lite": "运动控制器优先级：高",
		"description": "运动控制器优先级：高",
		"example": "No Example Set"
	},
	"DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM": {
		"description_lite": "运动控制器优先级：中",
		"description": "运动控制器优先级：中",
		"example": "No Example Set"
	},
	"DOTA_ABILITY_BEHAVIOR_IGNORE_SILENCE": {
		"description_lite": "无视沉默",
		"description": "无视沉默"
	},
	"DOTA_UNIT_CAP_MELEE_ATTACK": {
		"description_lite": "近战攻击",
		"description": "近战攻击",
		"example": "No Example Set"
	},
	"DOTA_UNIT_CAP_NO_ATTACK": {
		"description_lite": "没有攻击",
		"description": "没有攻击",
		"example": "No Example Set"
	},
	"DOTA_UNIT_CAP_RANGED_ATTACK": {
		"description_lite": "远程攻击",
		"description": "远程攻击",
		"example": "No Example Set"
	},
	"MODIFIER_STATE_ALLOW_PATHING_THROUGH_FISSURE": {
		"description_lite": "允许在沟壑上通行"
	},
	"MODIFIER_STATE_ALLOW_PATHING_THROUGH_TREES": {
		"description_lite": "允许在树木中通行"
	},
	"MODIFIER_STATE_ALLOW_PATHING_THROUGH_CLIFFS": {
		"description_lite": "允许在悬崖上通行"
	},
	"MODIFIER_STATE_ATTACK_ALLIES": {
		"description_lite": "允许攻击队友"
	},
	"MODIFIER_STATE_CANNOT_BE_MOTION_CONTROLLED": {
		"description_lite": "不受运动控制影响"
	},
	"MODIFIER_STATE_FEARED": {
		"description_lite": "恐惧"
	},
	"CDOTA_Ability_Aghanim_Spear": {
		"description": "no description",
		"LaunchSpear": {
			"class": "CDOTA_Ability_Aghanim_Spear",
			"function": "LaunchSpear",
			"return": "void",
			"description": "Launch Spear to a target position from a source position",
			"server": true,
			"params": {
				"vTarget": {
					"type": "Vector",
					"params_name": "vTarget",
					"description": "No Description Set"
				},
				"vStart": {
					"type": "Vector",
					"params_name": "vStart",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDOTA_BaseNPC_Watch_Tower": {
		"description": "no description",
		"GetInteractAbilityName": {
			"class": "CDOTA_BaseNPC_Watch_Tower",
			"function": "GetInteractAbilityName",
			"return": "string",
			"description": "The name of the ability used when triggering interaction on the outpost.",
			"server": true,
			"params": {}
		},
		"SetInteractAbilityName": {
			"class": "CDOTA_BaseNPC_Watch_Tower",
			"function": "SetInteractAbilityName",
			"return": "void",
			"description": "The name of the ability used when triggering interaction on the outpost.",
			"server": true,
			"params": {
				"pszInteractAbilityName": {
					"type": "string",
					"params_name": "pszInteractAbilityName",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDOTA_Item_BagOfGold": {
		"description": "no description",
		"SetLifeTime": {
			"class": "CDOTA_Item_BagOfGold",
			"function": "SetLifeTime",
			"return": "void",
			"description": "Set the life time of this item",
			"server": true,
			"params": {
				"flTime": {
					"type": "float",
					"params_name": "flTime",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDOTA_NeutralSpawner": {
		"description": "no description",
		"CreatePendingUnits": {
			"class": "CDOTA_NeutralSpawner",
			"function": "CreatePendingUnits",
			"return": "void",
			"server": true,
			"params": {}
		},
		"SelectSpawnType": {
			"class": "CDOTA_NeutralSpawner",
			"function": "SelectSpawnType",
			"return": "void",
			"server": true,
			"params": {}
		},
		"SpawnNextBatch": {
			"class": "CDOTA_NeutralSpawner",
			"function": "SpawnNextBatch",
			"return": "void",
			"server": true,
			"params": {
				"bIgnoreBlockers": {
					"type": "bool",
					"params_name": "bIgnoreBlockers",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDOTA_Unit_CustomGameAnnouncer": {
		"description": "no description",
		"SetServerAuthoritative": {
			"class": "CDOTA_Unit_CustomGameAnnouncer",
			"function": "SetServerAuthoritative",
			"return": "void",
			"description": "Determines whether response criteria is matched on server or client",
			"server": true,
			"params": {
				"bIsServerAuthoritative": {
					"type": "bool",
					"params_name": "bIsServerAuthoritative",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDOTA_Unit_Diretide_Portal": {
		"description": "no description",
		"GetPartnerPortal": {
			"class": "CDOTA_Unit_Diretide_Portal",
			"function": "GetPartnerPortal",
			"return": "handle",
			"server": true,
			"params": {}
		},
		"ResetPortal": {
			"class": "CDOTA_Unit_Diretide_Portal",
			"function": "ResetPortal",
			"return": "void",
			"server": true,
			"params": {}
		},
		"SetInvasionRuneType": {
			"class": "CDOTA_Unit_Diretide_Portal",
			"function": "SetInvasionRuneType",
			"return": "void",
			"server": true,
			"params": {
				"nRuneType": {
					"type": "int",
					"params_name": "nRuneType",
					"description": "No Description Set"
				}
			}
		},
		"SetPartnerPortal": {
			"class": "CDOTA_Unit_Diretide_Portal",
			"function": "SetPartnerPortal",
			"return": "void",
			"server": true,
			"params": {
				"hPortal": {
					"type": "handle",
					"params_name": "hPortal",
					"description": "No Description Set"
				}
			}
		},
		"SetPortalActive": {
			"class": "CDOTA_Unit_Diretide_Portal",
			"function": "SetPortalActive",
			"return": "void",
			"server": true,
			"params": {
				"bActive": {
					"type": "bool",
					"params_name": "bActive",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CDotaTutorialNPCBlocker": {
		"description": "no description",
		"SetEnabled": {
			"class": "CDotaTutorialNPCBlocker",
			"function": "SetEnabled",
			"return": "void",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"SetOtherBlocker": {
			"class": "CDotaTutorialNPCBlocker",
			"function": "SetOtherBlocker",
			"return": "void",
			"server": true,
			"params": {
				"hBlocker": {
					"type": "handle",
					"params_name": "hBlocker",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CFoWBlockerRegion": {
		"description": "no description",
		"AddRectangularBlocker": {
			"class": "CFoWBlockerRegion",
			"function": "AddRectangularBlocker",
			"return": "void",
			"description": "AddRectangularBlocker( vMins, vMaxs, bClear ) : Sets or clears a blocker rectangle",
			"server": true,
			"params": {
				"vMins": {
					"type": "Vector",
					"params_name": "vMins",
					"description": "No Description Set"
				},
				"vMaxs": {
					"type": "Vector",
					"params_name": "vMaxs",
					"description": "No Description Set"
				},
				"bClearRegion": {
					"type": "bool",
					"params_name": "bClearRegion",
					"description": "No Description Set"
				}
			}
		},
		"AddRectangularOutlineBlocker": {
			"class": "CFoWBlockerRegion",
			"function": "AddRectangularOutlineBlocker",
			"return": "void",
			"description": "AddRectangularOutlineBlocker( vMins, vMaxs, bClear ) : Sets or clears a blocker rectangle outline",
			"server": true,
			"params": {
				"vMins": {
					"type": "Vector",
					"params_name": "vMins",
					"description": "No Description Set"
				},
				"vMaxs": {
					"type": "Vector",
					"params_name": "vMaxs",
					"description": "No Description Set"
				},
				"bClearRegion": {
					"type": "bool",
					"params_name": "bClearRegion",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CInfoPlayerStartDota": {
		"description": "no description",
		"IsEnabled": {
			"class": "CInfoPlayerStartDota",
			"function": "IsEnabled",
			"return": "bool",
			"description": "Returns whether the object is currently active",
			"server": true,
			"params": {}
		},
		"SetEnabled": {
			"class": "CInfoPlayerStartDota",
			"function": "SetEnabled",
			"return": "void",
			"description": "Enable or disable the obstruction",
			"server": true,
			"params": {
				"bEnabled": {
					"type": "bool",
					"params_name": "bEnabled",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CLogicRelay": {
		"description": "no description",
		"Trigger": {
			"class": "CLogicRelay",
			"class_cl": "CLogicRelay",
			"function": "Trigger",
			"return": "void",
			"description": "Trigger( hActivator, hCaller ) : Triggers the logic_relay",
			"server": true,
			"client": true,
			"params": {
				"hActivator": {
					"type": "handle",
					"params_name": "hActivator",
					"description": "No Description Set"
				},
				"hCaller": {
					"type": "handle",
					"params_name": "hCaller",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"CScriptHTTPRequest": {
		"description": "no description",
		"Send": {
			"class": "CScriptHTTPRequest",
			"function": "Send",
			"return": "bool",
			"description": "Send a HTTP request.",
			"server": true,
			"params": {
				"handle_1": {
					"type": "handle",
					"params_name": "handle_1",
					"description": "No Description Set"
				}
			}
		},
		"SetHTTPRequestAbsoluteTimeoutMS": {
			"class": "CScriptHTTPRequest",
			"function": "SetHTTPRequestAbsoluteTimeoutMS",
			"return": "bool",
			"description": "Set the total timeout on the request.",
			"server": true,
			"params": {
				"unsigned_1": {
					"type": "unsigned",
					"params_name": "unsigned_1",
					"description": "No Description Set"
				}
			}
		},
		"SetHTTPRequestGetOrPostParameter": {
			"class": "CScriptHTTPRequest",
			"function": "SetHTTPRequestGetOrPostParameter",
			"return": "bool",
			"description": "Set a POST or GET parameter on the request.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"SetHTTPRequestHeaderValue": {
			"class": "CScriptHTTPRequest",
			"function": "SetHTTPRequestHeaderValue",
			"return": "bool",
			"description": "Set a header value on the request.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"SetHTTPRequestNetworkActivityTimeout": {
			"class": "CScriptHTTPRequest",
			"function": "SetHTTPRequestNetworkActivityTimeout",
			"return": "bool",
			"description": "Set the network timeout on the request - this timer is reset when any data is received.",
			"server": true,
			"params": {
				"unsigned_1": {
					"type": "unsigned",
					"params_name": "unsigned_1",
					"description": "No Description Set"
				}
			}
		},
		"SetHTTPRequestRawPostBody": {
			"class": "CScriptHTTPRequest",
			"function": "SetHTTPRequestRawPostBody",
			"return": "bool",
			"description": "Set the literal body of a post - invalid after setting a post parameter.",
			"server": true,
			"params": {
				"string_1": {
					"type": "string",
					"params_name": "string_1",
					"description": "No Description Set"
				},
				"string_2": {
					"type": "string",
					"params_name": "string_2",
					"description": "No Description Set"
				}
			}
		},
		"extends": "",
		"variable": ""
	},
	"AttributeDerivedStats": {
		"description": "no description",
		"DOTA_ATTRIBUTE_AGILITY_ARMOR": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_AGILITY_ARMOR",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "每点敏捷增加的护甲值",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_AGILITY_ATTACK_SPEED": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_AGILITY_ATTACK_SPEED",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "每点敏捷增加的攻击速度",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_AGILITY_DAMAGE": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_AGILITY_DAMAGE",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "每点主属性敏捷增加的攻击力",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_INTELLIGENCE_DAMAGE": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_INTELLIGENCE_DAMAGE",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "每点主属性智力增加的攻击力",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_INTELLIGENCE_MANA": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_INTELLIGENCE_MANA",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "每点智力增加的魔法值",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_INTELLIGENCE_MANA_REGEN": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_INTELLIGENCE_MANA_REGEN",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "每点智力增加的魔法回复",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_STRENGTH_DAMAGE": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_STRENGTH_DAMAGE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "每点主属性力量增加的攻击力",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_STRENGTH_HP": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_STRENGTH_HP",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "每点力量增加的生命值",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_STRENGTH_HP_REGEN": {
			"class": "AttributeDerivedStats",
			"name": "DOTA_ATTRIBUTE_STRENGTH_HP_REGEN",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "每点力量增加的生命回复",
			"example": "No Example Set"
		}
	},
	"Attributes": {
		"description": "no description",
		"DOTA_ATTRIBUTE_AGILITY": {
			"class": "Attributes",
			"name": "DOTA_ATTRIBUTE_AGILITY",
			"value": 1,
			"description_lite": "敏捷属性"
		},
		"DOTA_ATTRIBUTE_INTELLECT": {
			"class": "Attributes",
			"name": "DOTA_ATTRIBUTE_INTELLECT",
			"value": 2,
			"description_lite": "智力属性"
		},
		"DOTA_ATTRIBUTE_INVALID": {
			"class": "Attributes",
			"name": "DOTA_ATTRIBUTE_INVALID",
			"value": -1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_MAX": {
			"class": "Attributes",
			"name": "DOTA_ATTRIBUTE_MAX",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ATTRIBUTE_STRENGTH": {
			"class": "Attributes",
			"name": "DOTA_ATTRIBUTE_STRENGTH",
			"value": 0,
			"description_lite": "力量属性"
		}
	},
	"DAMAGE_TYPES": {
		"description": "no description",
		"DAMAGE_TYPE_ALL": {
			"class": "DAMAGE_TYPES",
			"name": "DAMAGE_TYPE_ALL",
			"value": 7,
			"description": "在伤害判断的时候，全部类型伤害均通过",
			"description_lite": "全部类型",
			"example": "No Example Set"
		},
		"DAMAGE_TYPE_HP_REMOVAL": {
			"class": "DAMAGE_TYPES",
			"name": "DAMAGE_TYPE_HP_REMOVAL",
			"value": 8,
			"description": "生命转移类伤害，效果与sethealth类似。不会遭受反伤。例如盛宴，骨法的虹吸",
			"description_lite": "生命转移",
			"example": "No Example Set"
		},
		"DAMAGE_TYPE_MAGICAL": {
			"class": "DAMAGE_TYPES",
			"name": "DAMAGE_TYPE_MAGICAL",
			"value": 2,
			"description_lite": "魔法伤害，受到魔法抗性的影响。"
		},
		"DAMAGE_TYPE_NONE": {
			"class": "DAMAGE_TYPES",
			"name": "DAMAGE_TYPE_NONE",
			"value": 0,
			"description": "无类型",
			"description_lite": "无类型",
			"example": "No Example Set"
		},
		"DAMAGE_TYPE_PHYSICAL": {
			"class": "DAMAGE_TYPES",
			"name": "DAMAGE_TYPE_PHYSICAL",
			"value": 1,
			"description_lite": "物理伤害，受到护甲与伤害格挡影响，跟魔法抗性无关且不能影响虚无单位。"
		},
		"DAMAGE_TYPE_PURE": {
			"class": "DAMAGE_TYPES",
			"name": "DAMAGE_TYPE_PURE",
			"value": 4,
			"description": "神圣伤害，纯粹伤害，",
			"description_lite": "纯粹伤害，不计算护甲与魔抗，无视伤害格挡。"
		}
	},
	"DOTAAbilitySpeakTrigger_t": {
		"description": "no description",
		"DOTA_ABILITY_SPEAK_CAST": {
			"class": "DOTAAbilitySpeakTrigger_t",
			"name": "DOTA_ABILITY_SPEAK_CAST",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_SPEAK_START_ACTION_PHASE": {
			"class": "DOTAAbilitySpeakTrigger_t",
			"name": "DOTA_ABILITY_SPEAK_START_ACTION_PHASE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTADamageFlag_t": {
		"description": "no description",
		"DOTA_DAMAGE_FLAG_BYPASSES_BLOCK": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_BYPASSES_BLOCK",
			"value": 8,
			"description_lite": "绕过伤害格挡"
		},
		"DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY",
			"value": 4,
			"description_lite": "绕过无敌"
		},
		"DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN",
			"value": 2048,
			"description_lite": "当伤害来源不可见时，不显示造成的伤害。"
		},
		"DOTA_DAMAGE_FLAG_HPLOSS": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_HPLOSS",
			"value": 32,
			"description_lite": "生命移除"
		},
		"DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR",
			"value": 16384,
			"description_lite": "无视基础护甲"
		},
		"DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR",
			"value": 1,
			"description_lite": "无视魔抗"
		},
		"DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR",
			"value": 2,
			"description_lite": "无视护甲"
		},
		"DOTA_DAMAGE_FLAG_NONE": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_NONE",
			"value": 0,
			"description_lite": "没有"
		},
		"DOTA_DAMAGE_FLAG_NON_LETHAL": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_NON_LETHAL",
			"value": 128,
			"description_lite": "不致死"
		},
		"DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS",
			"value": 512,
			"description": "没有伤害放大",
			"description_lite": "没有伤害放大",
			"example": "No Example Set"
		},
		"DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT",
			"value": 64,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION",
			"value": 1024,
			"description_lite": "没有技能增强"
		},
		"DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL",
			"value": 4096,
			"description_lite": "没有技能吸血"
		},
		"DOTA_DAMAGE_FLAG_PROPERTY_FIRE": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_PROPERTY_FIRE",
			"value": 8192,
			"description_lite": "火焰属性"
		},
		"DOTA_DAMAGE_FLAG_REFLECTION": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_REFLECTION",
			"value": 16,
			"description_lite": "不反弹"
		},
		"DOTA_DAMAGE_FLAG_USE_COMBAT_PROFICIENCY": {
			"class": "DOTADamageFlag_t",
			"name": "DOTA_DAMAGE_FLAG_USE_COMBAT_PROFICIENCY",
			"value": 256,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTAHUDVisibility_t": {
		"description": "no description",
		"DOTA_HUD_CUSTOMUI_BEHIND_HUD_ELEMENTS": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_CUSTOMUI_BEHIND_HUD_ELEMENTS",
			"value": 28,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_ACTION_MINIMAP": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_ACTION_MINIMAP",
			"value": 4,
			"description": "小地图",
			"description_lite": "小地图",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_ACTION_PANEL": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_ACTION_PANEL",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_COUNT": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_COUNT",
			"value": 29,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_ENDGAME": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_ENDGAME",
			"value": 22,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_ENDGAME_CHAT": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_ENDGAME_CHAT",
			"value": 23,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_HERO_SELECTION_CLOCK": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_HERO_SELECTION_CLOCK",
			"value": 16,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_HERO_SELECTION_GAME_NAME": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_HERO_SELECTION_GAME_NAME",
			"value": 15,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_HERO_SELECTION_TEAMS": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_HERO_SELECTION_TEAMS",
			"value": 14,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_INVALID": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_INVALID",
			"value": -1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_INVENTORY_COURIER": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_INVENTORY_COURIER",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_INVENTORY_GOLD": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_INVENTORY_GOLD",
			"value": 11,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_INVENTORY_ITEMS": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_INVENTORY_ITEMS",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_INVENTORY_PANEL": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_INVENTORY_PANEL",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_INVENTORY_PROTECT": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_INVENTORY_PROTECT",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_INVENTORY_QUICKBUY": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_INVENTORY_QUICKBUY",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_INVENTORY_SHOP": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_INVENTORY_SHOP",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_KILLCAM": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_KILLCAM",
			"value": 26,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_PREGAME_STRATEGYUI": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_PREGAME_STRATEGYUI",
			"value": 25,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_QUICK_STATS": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_QUICK_STATS",
			"value": 24,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_SHOP_COMMONITEMS": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_SHOP_COMMONITEMS",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_SHOP_SUGGESTEDITEMS": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_SHOP_SUGGESTEDITEMS",
			"value": 12,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_BAR": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_BAR",
			"value": 27,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_BAR_BACKGROUND": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_BAR_BACKGROUND",
			"value": 18,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_BAR_DIRE_TEAM": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_BAR_DIRE_TEAM",
			"value": 20,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_BAR_RADIANT_TEAM": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_BAR_RADIANT_TEAM",
			"value": 19,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_BAR_SCORE": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_BAR_SCORE",
			"value": 21,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_HEROES": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_HEROES",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_MENU_BUTTONS": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_MENU_BUTTONS",
			"value": 17,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_SCOREBOARD": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_SCOREBOARD",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HUD_VISIBILITY_TOP_TIMEOFDAY": {
			"class": "DOTAHUDVisibility_t",
			"name": "DOTA_HUD_VISIBILITY_TOP_TIMEOFDAY",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTAInventoryFlags_t": {
		"description": "no description",
		"DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN": {
			"class": "DOTAInventoryFlags_t",
			"name": "DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_INVENTORY_ALLOW_DROP_ON_GROUND": {
			"class": "DOTAInventoryFlags_t",
			"name": "DOTA_INVENTORY_ALLOW_DROP_ON_GROUND",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_INVENTORY_ALLOW_MAIN": {
			"class": "DOTAInventoryFlags_t",
			"name": "DOTA_INVENTORY_ALLOW_MAIN",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_INVENTORY_ALLOW_NONE": {
			"class": "DOTAInventoryFlags_t",
			"name": "DOTA_INVENTORY_ALLOW_NONE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_INVENTORY_ALLOW_STASH": {
			"class": "DOTAInventoryFlags_t",
			"name": "DOTA_INVENTORY_ALLOW_STASH",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_INVENTORY_ALL_ACCESS": {
			"class": "DOTAInventoryFlags_t",
			"name": "DOTA_INVENTORY_ALL_ACCESS",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_INVENTORY_LIMIT_DROP_ON_GROUND": {
			"class": "DOTAInventoryFlags_t",
			"name": "DOTA_INVENTORY_LIMIT_DROP_ON_GROUND",
			"value": 16,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTALimits_t": {
		"description": "no description",
		"DOTA_DEFAULT_MAX_TEAM": {
			"class": "DOTALimits_t",
			"name": "DOTA_DEFAULT_MAX_TEAM",
			"value": 5,
			"description": "Default number of players per team.",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_MAX_TEAM_PLAYERS": {
			"class": "DOTALimits_t",
			"name": "DOTA_DEFAULT_MAX_TEAM_PLAYERS",
			"value": 10,
			"description": "Default number of non-spectator players supported.",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MAX_PLAYERS": {
			"class": "DOTALimits_t",
			"name": "DOTA_MAX_PLAYERS",
			"value": 64,
			"description": "Max number of players connected to the server including spectators.",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MAX_PLAYER_TEAMS": {
			"class": "DOTALimits_t",
			"name": "DOTA_MAX_PLAYER_TEAMS",
			"value": 10,
			"description": "Max number of player teams supported.",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MAX_SPECTATOR_LOBBY_SIZE": {
			"class": "DOTALimits_t",
			"name": "DOTA_MAX_SPECTATOR_LOBBY_SIZE",
			"value": 15,
			"description": "Max number of viewers in a spectator lobby.",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MAX_SPECTATOR_TEAM_SIZE": {
			"class": "DOTALimits_t",
			"name": "DOTA_MAX_SPECTATOR_TEAM_SIZE",
			"value": 40,
			"description": "How many spectators can watch.",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MAX_TEAM": {
			"class": "DOTALimits_t",
			"name": "DOTA_MAX_TEAM",
			"value": 24,
			"description": "Max number of players per team.",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MAX_TEAM_PLAYERS": {
			"class": "DOTALimits_t",
			"name": "DOTA_MAX_TEAM_PLAYERS",
			"value": 24,
			"description": "Max number of non-spectator players supported.",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTAMinimapEvent_t": {
		"description": "no description",
		"DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_BASE_GLYPHED": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_BASE_GLYPHED",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING",
			"value": 2048,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING",
			"value": 1024,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_HINT_LOCATION": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_HINT_LOCATION",
			"value": 512,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_MOVE_TO_TARGET": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_MOVE_TO_TARGET",
			"value": 16384,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_RADAR": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_RADAR",
			"value": 4096,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_RADAR_TARGET": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_RADAR_TARGET",
			"value": 8192,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_TEAMMATE_DIED": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_TEAMMATE_DIED",
			"value": 64,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING",
			"value": 32,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK",
			"value": 16,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE",
			"value": 128,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED": {
			"class": "DOTAMinimapEvent_t",
			"name": "DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED",
			"value": 256,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTAModifierAttribute_t": {
		"description": "no description",
		"MODIFIER_ATTRIBUTE_AURA_PRIORITY": {
			"class": "DOTAModifierAttribute_t",
			"name": "MODIFIER_ATTRIBUTE_AURA_PRIORITY",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE": {
			"class": "DOTAModifierAttribute_t",
			"name": "MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "无敌保持",
			"example": "No Example Set"
		},
		"MODIFIER_ATTRIBUTE_MULTIPLE": {
			"class": "DOTAModifierAttribute_t",
			"name": "MODIFIER_ATTRIBUTE_MULTIPLE",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "可重复",
			"example": "No Example Set"
		},
		"MODIFIER_ATTRIBUTE_NONE": {
			"class": "DOTAModifierAttribute_t",
			"name": "MODIFIER_ATTRIBUTE_NONE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_ATTRIBUTE_PERMANENT": {
			"class": "DOTAModifierAttribute_t",
			"name": "MODIFIER_ATTRIBUTE_PERMANENT",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "死亡保持",
			"example": "No Example Set"
		}
	},
	"DOTAMusicStatus_t": {
		"description": "no description",
		"DOTA_MUSIC_STATUS_BATTLE": {
			"class": "DOTAMusicStatus_t",
			"name": "DOTA_MUSIC_STATUS_BATTLE",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MUSIC_STATUS_DEAD": {
			"class": "DOTAMusicStatus_t",
			"name": "DOTA_MUSIC_STATUS_DEAD",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MUSIC_STATUS_EXPLORATION": {
			"class": "DOTAMusicStatus_t",
			"name": "DOTA_MUSIC_STATUS_EXPLORATION",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MUSIC_STATUS_LAST": {
			"class": "DOTAMusicStatus_t",
			"name": "DOTA_MUSIC_STATUS_LAST",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MUSIC_STATUS_NONE": {
			"class": "DOTAMusicStatus_t",
			"name": "DOTA_MUSIC_STATUS_NONE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_MUSIC_STATUS_PRE_GAME_EXPLORATION": {
			"class": "DOTAMusicStatus_t",
			"name": "DOTA_MUSIC_STATUS_PRE_GAME_EXPLORATION",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTAProjectileAttachment_t": {
		"description": "no description",
		"DOTA_PROJECTILE_ATTACHMENT_ATTACK_1": {
			"class": "DOTAProjectileAttachment_t",
			"name": "DOTA_PROJECTILE_ATTACHMENT_ATTACK_1",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_PROJECTILE_ATTACHMENT_ATTACK_2": {
			"class": "DOTAProjectileAttachment_t",
			"name": "DOTA_PROJECTILE_ATTACHMENT_ATTACK_2",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_PROJECTILE_ATTACHMENT_ATTACK_3": {
			"class": "DOTAProjectileAttachment_t",
			"name": "DOTA_PROJECTILE_ATTACHMENT_ATTACK_3",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_PROJECTILE_ATTACHMENT_ATTACK_4": {
			"class": "DOTAProjectileAttachment_t",
			"name": "DOTA_PROJECTILE_ATTACHMENT_ATTACK_4",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_PROJECTILE_ATTACHMENT_HITLOCATION": {
			"class": "DOTAProjectileAttachment_t",
			"name": "DOTA_PROJECTILE_ATTACHMENT_HITLOCATION",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_PROJECTILE_ATTACHMENT_LAST": {
			"class": "DOTAProjectileAttachment_t",
			"name": "DOTA_PROJECTILE_ATTACHMENT_LAST",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_PROJECTILE_ATTACHMENT_NONE": {
			"class": "DOTAProjectileAttachment_t",
			"name": "DOTA_PROJECTILE_ATTACHMENT_NONE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTAScriptInventorySlot_t": {
		"description": "no description",
		"DOTA_ITEM_SLOT_1": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_1",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ITEM_SLOT_2": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_2",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ITEM_SLOT_3": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_3",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ITEM_SLOT_4": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_4",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ITEM_SLOT_5": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_5",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ITEM_SLOT_6": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_6",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ITEM_SLOT_7": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_7",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ITEM_SLOT_8": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_8",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ITEM_SLOT_9": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_ITEM_SLOT_9",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_STASH_SLOT_1": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_STASH_SLOT_1",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_STASH_SLOT_2": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_STASH_SLOT_2",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_STASH_SLOT_3": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_STASH_SLOT_3",
			"value": 11,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_STASH_SLOT_4": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_STASH_SLOT_4",
			"value": 12,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_STASH_SLOT_5": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_STASH_SLOT_5",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_STASH_SLOT_6": {
			"class": "DOTAScriptInventorySlot_t",
			"name": "DOTA_STASH_SLOT_6",
			"value": 14,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTASlotType_t": {
		"description": "no description",
		"DOTA_LOADOUT_PERSONA_1_END": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_PERSONA_1_END",
			"value": 56,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_PERSONA_1_START": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_PERSONA_1_START",
			"value": 29,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY1",
			"value": 23,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY1_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY1_PERSONA_1",
			"value": 51,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY2": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY2",
			"value": 24,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY2_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY2_PERSONA_1",
			"value": 52,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY3": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY3",
			"value": 25,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY3_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY3_PERSONA_1",
			"value": 53,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY4": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY4",
			"value": 26,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY4_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY4_PERSONA_1",
			"value": 54,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY_ATTACK": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY_ATTACK",
			"value": 22,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY_ATTACK_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY_ATTACK_PERSONA_1",
			"value": 50,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE",
			"value": 27,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE_PERSONA_1",
			"value": 55,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS",
			"value": 21,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS_PERSONA_1",
			"value": 49,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ANNOUNCER": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ANNOUNCER",
			"value": 59,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ARMOR": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ARMOR",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ARMOR_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ARMOR_PERSONA_1",
			"value": 36,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ARMS": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ARMS",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_ARMS_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_ARMS_PERSONA_1",
			"value": 35,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_BACK": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_BACK",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_BACK_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_BACK_PERSONA_1",
			"value": 39,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_BELT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_BELT",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_BELT_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_BELT_PERSONA_1",
			"value": 37,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_BLINK_EFFECT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_BLINK_EFFECT",
			"value": 70,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_BODY_HEAD": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_BODY_HEAD",
			"value": 16,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_BODY_HEAD_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_BODY_HEAD_PERSONA_1",
			"value": 44,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_COSTUME": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_COSTUME",
			"value": 15,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_COUNT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_COUNT",
			"value": 85,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_COURIER": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_COURIER",
			"value": 58,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_COURIER_EFFECT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_COURIER_EFFECT",
			"value": 83,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_CURSOR_PACK": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_CURSOR_PACK",
			"value": 68,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_DEATH_EFFECT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_DEATH_EFFECT",
			"value": 80,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_DIRE_CREEPS": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_DIRE_CREEPS",
			"value": 74,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_DIRE_TOWER": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_DIRE_TOWER",
			"value": 76,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_EMBLEM": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_EMBLEM",
			"value": 71,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_GLOVES": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_GLOVES",
			"value": 11,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_GLOVES_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_GLOVES_PERSONA_1",
			"value": 41,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_HEAD": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_HEAD",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_HEAD_EFFECT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_HEAD_EFFECT",
			"value": 81,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_HEAD_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_HEAD_PERSONA_1",
			"value": 33,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_HEROIC_STATUE": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_HEROIC_STATUE",
			"value": 66,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_HUD_SKIN": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_HUD_SKIN",
			"value": 63,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_INVALID": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_INVALID",
			"value": -1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_KILL_EFFECT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_KILL_EFFECT",
			"value": 79,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_LEGS": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_LEGS",
			"value": 12,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_LEGS_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_LEGS_PERSONA_1",
			"value": 40,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_LOADING_SCREEN": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_LOADING_SCREEN",
			"value": 64,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_MAP_EFFECT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_MAP_EFFECT",
			"value": 82,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_MEGA_KILLS": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_MEGA_KILLS",
			"value": 60,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_MISC": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_MISC",
			"value": 14,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_MISC_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_MISC_PERSONA_1",
			"value": 43,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_MOUNT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_MOUNT",
			"value": 17,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_MOUNT_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_MOUNT_PERSONA_1",
			"value": 45,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_MULTIKILL_BANNER": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_MULTIKILL_BANNER",
			"value": 67,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_MUSIC": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_MUSIC",
			"value": 61,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_NECK": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_NECK",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_NECK_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_NECK_PERSONA_1",
			"value": 38,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_NONE": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_NONE",
			"value": 84,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_OFFHAND_WEAPON": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_OFFHAND_WEAPON",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2_PERSONA_1",
			"value": 32,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_OFFHAND_WEAPON_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_OFFHAND_WEAPON_PERSONA_1",
			"value": 30,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_PERSONA_SELECTOR": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_PERSONA_SELECTOR",
			"value": 57,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_RADIANT_CREEPS": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_RADIANT_CREEPS",
			"value": 73,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_RADIANT_TOWER": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_RADIANT_TOWER",
			"value": 75,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_SHAPESHIFT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_SHAPESHIFT",
			"value": 19,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_SHAPESHIFT_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_SHAPESHIFT_PERSONA_1",
			"value": 47,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_SHOULDER": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_SHOULDER",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_SHOULDER_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_SHOULDER_PERSONA_1",
			"value": 34,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_STREAK_EFFECT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_STREAK_EFFECT",
			"value": 78,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_SUMMON": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_SUMMON",
			"value": 18,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_SUMMON_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_SUMMON_PERSONA_1",
			"value": 46,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_TAIL": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_TAIL",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_TAIL_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_TAIL_PERSONA_1",
			"value": 42,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_TAUNT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_TAUNT",
			"value": 20,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_TAUNT_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_TAUNT_PERSONA_1",
			"value": 48,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_TELEPORT_EFFECT": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_TELEPORT_EFFECT",
			"value": 69,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_TERRAIN": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_TERRAIN",
			"value": 72,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_VERSUS_SCREEN": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_VERSUS_SCREEN",
			"value": 77,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_VOICE": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_VOICE",
			"value": 28,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_VOICE_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_VOICE_PERSONA_1",
			"value": 56,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_WARD": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_WARD",
			"value": 62,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_WEAPON": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_WEAPON",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_WEAPON2": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_WEAPON2",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_WEAPON2_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_WEAPON2_PERSONA_1",
			"value": 31,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_WEAPON_PERSONA_1": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_WEAPON_PERSONA_1",
			"value": 29,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_LOADOUT_TYPE_WEATHER": {
			"class": "DOTASlotType_t",
			"name": "DOTA_LOADOUT_TYPE_WEATHER",
			"value": 65,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_PLAYER_LOADOUT_END": {
			"class": "DOTASlotType_t",
			"name": "DOTA_PLAYER_LOADOUT_END",
			"value": 83,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_PLAYER_LOADOUT_START": {
			"class": "DOTASlotType_t",
			"name": "DOTA_PLAYER_LOADOUT_START",
			"value": 58,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTASpeechType_t": {
		"description": "no description",
		"DOTA_SPEECH_BAD_TEAM": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_BAD_TEAM",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_GOOD_TEAM": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_GOOD_TEAM",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_RECIPIENT_TYPE_MAX": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_RECIPIENT_TYPE_MAX",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_SPECTATOR": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_SPECTATOR",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_USER_ALL": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_USER_ALL",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_USER_INVALID": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_USER_INVALID",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_USER_NEARBY": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_USER_NEARBY",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_USER_SINGLE": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_USER_SINGLE",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_USER_TEAM": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_USER_TEAM",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_USER_TEAM_NEARBY": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_USER_TEAM_NEARBY",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SPEECH_USER_TEAM_NOSPECTATOR": {
			"class": "DOTASpeechType_t",
			"name": "DOTA_SPEECH_USER_TEAM_NOSPECTATOR",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTATeam_t": {
		"description": "no description",
		"DOTA_TEAM_BADGUYS": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_BADGUYS",
			"value": 3,
			"description_lite": "夜魇"
		},
		"DOTA_TEAM_COUNT": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_COUNT",
			"value": 14,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_1": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_1",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_2": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_2",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_3": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_3",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_4": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_4",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_5": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_5",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_6": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_6",
			"value": 11,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_7": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_7",
			"value": 12,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_8": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_8",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_COUNT": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_COUNT",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_MAX": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_MAX",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_CUSTOM_MIN": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_CUSTOM_MIN",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_FIRST": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_FIRST",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_TEAM_GOODGUYS": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_GOODGUYS",
			"value": 2,
			"description_lite": "天辉"
		},
		"DOTA_TEAM_NEUTRALS": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_NEUTRALS",
			"value": 4,
			"description_lite": "中立"
		},
		"DOTA_TEAM_NOTEAM": {
			"class": "DOTATeam_t",
			"name": "DOTA_TEAM_NOTEAM",
			"value": 5,
			"description": "没有队伍",
			"description_lite": "没有队伍",
			"example": "No Example Set"
		}
	},
	"DOTAUnitAttackCapability_t": {
		"description": "no description",
		"DOTA_UNIT_ATTACK_CAPABILITY_BIT_COUNT": {
			"class": "DOTAUnitAttackCapability_t",
			"name": "DOTA_UNIT_ATTACK_CAPABILITY_BIT_COUNT",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_UNIT_CAP_MELEE_ATTACK": {
			"class": "DOTAUnitAttackCapability_t",
			"name": "DOTA_UNIT_CAP_MELEE_ATTACK",
			"value": 1,
			"description": "近战攻击",
			"description_lite": "近战攻击",
			"example": "No Example Set"
		},
		"DOTA_UNIT_CAP_NO_ATTACK": {
			"class": "DOTAUnitAttackCapability_t",
			"name": "DOTA_UNIT_CAP_NO_ATTACK",
			"value": 0,
			"description": "没有攻击",
			"description_lite": "没有攻击",
			"example": "No Example Set"
		},
		"DOTA_UNIT_CAP_RANGED_ATTACK": {
			"class": "DOTAUnitAttackCapability_t",
			"name": "DOTA_UNIT_CAP_RANGED_ATTACK",
			"value": 2,
			"description": "远程攻击",
			"description_lite": "远程攻击",
			"example": "No Example Set"
		},
		"DOTA_UNIT_CAP_RANGED_ATTACK_DIRECTIONAL": {
			"class": "DOTAUnitAttackCapability_t",
			"name": "DOTA_UNIT_CAP_RANGED_ATTACK_DIRECTIONAL",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTAUnitMoveCapability_t": {
		"description": "no description",
		"DOTA_UNIT_CAP_MOVE_FLY": {
			"class": "DOTAUnitMoveCapability_t",
			"name": "DOTA_UNIT_CAP_MOVE_FLY",
			"value": 2,
			"description_lite": "飞行移动能力"
		},
		"DOTA_UNIT_CAP_MOVE_GROUND": {
			"class": "DOTAUnitMoveCapability_t",
			"name": "DOTA_UNIT_CAP_MOVE_GROUND",
			"value": 1,
			"description_lite": "地面移动能力"
		},
		"DOTA_UNIT_CAP_MOVE_NONE": {
			"class": "DOTAUnitMoveCapability_t",
			"name": "DOTA_UNIT_CAP_MOVE_NONE",
			"value": 0,
			"description_lite": "没有移动能力"
		}
	},
	"DOTA_ABILITY_BEHAVIOR": {
		"description": "no description",
		"DOTA_ABILITY_BEHAVIOR_AOE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_AOE",
			"value": 32,
			"description_lite": "范围型技能"
		},
		"DOTA_ABILITY_BEHAVIOR_ATTACK": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_ATTACK",
			"value": 131072,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_AURA": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_AURA",
			"value": 65536,
			"description_lite": "光环"
		},
		"DOTA_ABILITY_BEHAVIOR_AUTOCAST": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_AUTOCAST",
			"value": 4096,
			"description_lite": "自动施法"
		},
		"DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST",
			"value": 0,
			"description_lite": "不能对自己施放，仅做显示用。"
		},
		"DOTA_ABILITY_BEHAVIOR_CHANNELLED": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_CHANNELLED",
			"value": 128,
			"description_lite": "持续施法"
		},
		"DOTA_ABILITY_BEHAVIOR_DIRECTIONAL": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_DIRECTIONAL",
			"value": 1024,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET",
			"value": 16777216,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL",
			"value": 536870912,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT",
			"value": 8388608,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK",
			"value": 33554432,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT",
			"value": 262144,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_FREE_DRAW_TARGETING": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_FREE_DRAW_TARGETING",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_HIDDEN": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_HIDDEN",
			"value": 1,
			"description_lite": "隐藏"
		},
		"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING",
			"value": 134217728,
			"description_lite": "无视后摇"
		},
		"DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL",
			"value": 4194304,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE",
			"value": 2097152,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_IGNORE_SILENCE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_IGNORE_SILENCE",
			"value": 0,
			"description": "无视沉默",
			"description_lite": "无视沉默"
		},
		"DOTA_ABILITY_BEHAVIOR_IMMEDIATE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_IMMEDIATE",
			"value": 2048,
			"description_lite": "立即"
		},
		"DOTA_ABILITY_BEHAVIOR_ITEM": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_ITEM",
			"value": 256,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT",
			"value": -2147483648,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_NONE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_NONE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN",
			"value": 67108864,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE",
			"value": 64,
			"description_lite": "不能学习"
		},
		"DOTA_ABILITY_BEHAVIOR_NO_TARGET": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_NO_TARGET",
			"value": 4,
			"description_lite": "无目标"
		},
		"DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET",
			"value": 32768,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT",
			"value": 16384,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET",
			"value": 8192,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_PASSIVE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_PASSIVE",
			"value": 2,
			"description_lite": "被动"
		},
		"DOTA_ABILITY_BEHAVIOR_POINT": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_POINT",
			"value": 16,
			"description_lite": "点目标"
		},
		"DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES",
			"value": 524288,
			"description_lite": "缠绕时不可用"
		},
		"DOTA_ABILITY_BEHAVIOR_RUNE_TARGET": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_RUNE_TARGET",
			"value": 268435456,
			"description_lite": "可选神符目标"
		},
		"DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_SUPPRESS_ASSOCIATED_CONSUMABLE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_SUPPRESS_ASSOCIATED_CONSUMABLE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_TOGGLE": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_TOGGLE",
			"value": 512,
			"description_lite": "开关型"
		},
		"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_UNIT_TARGET",
			"value": 8,
			"description_lite": "单位目标"
		},
		"DOTA_ABILITY_BEHAVIOR_UNLOCKED_BY_EFFECT_INDEX": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_UNLOCKED_BY_EFFECT_INDEX",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_UNRESTRICTED": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_UNRESTRICTED",
			"value": 1048576,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING": {
			"class": "DOTA_ABILITY_BEHAVIOR",
			"name": "DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING",
			"value": 1073741824,
			"description_lite": "矢量技能"
		}
	},
	"DOTA_GameState": {
		"description": "no description",
		"DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_DISCONNECT": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_DISCONNECT",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_GAME_IN_PROGRESS": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_GAME_IN_PROGRESS",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_HERO_SELECTION": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_HERO_SELECTION",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_INIT": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_INIT",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_POST_GAME": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_POST_GAME",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_PRE_GAME": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_PRE_GAME",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_STRATEGY_TIME": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_STRATEGY_TIME",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_TEAM_SHOWCASE": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_TEAM_SHOWCASE",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD": {
			"class": "DOTA_GameState",
			"name": "DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTA_HeroPickState": {
		"description": "no description",
		"DOTA_HEROPICK_STATE_ALL_DRAFT_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_ALL_DRAFT_SELECT",
			"value": 57,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_AP_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_AP_SELECT",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_AR_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_AR_SELECT",
			"value": 32,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_BD_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_BD_SELECT",
			"value": 54,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_BAN1": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_BAN1",
			"value": 37,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_BAN2": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_BAN2",
			"value": 38,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_BAN3": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_BAN3",
			"value": 39,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_BAN4": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_BAN4",
			"value": 40,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_BAN5": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_BAN5",
			"value": 41,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_BAN6": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_BAN6",
			"value": 42,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_CAPTAINPICK": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_CAPTAINPICK",
			"value": 36,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_INTRO": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_INTRO",
			"value": 35,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_PICK": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_PICK",
			"value": 53,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT1": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT1",
			"value": 43,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT10": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT10",
			"value": 52,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT2": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT2",
			"value": 44,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT3": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT3",
			"value": 45,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT4": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT4",
			"value": 46,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT5": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT5",
			"value": 47,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT6": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT6",
			"value": 48,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT7": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT7",
			"value": 49,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT8": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT8",
			"value": 50,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CD_SELECT9": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CD_SELECT9",
			"value": 51,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN1": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN1",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN10": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN10",
			"value": 16,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN11": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN11",
			"value": 17,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN12": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN12",
			"value": 18,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN13": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN13",
			"value": 19,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN14": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN14",
			"value": 20,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN2": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN2",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN3": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN3",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN4": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN4",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN5": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN5",
			"value": 11,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN6": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN6",
			"value": 12,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN7": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN7",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN8": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN8",
			"value": 14,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_BAN9": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_BAN9",
			"value": 15,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_CAPTAINPICK": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_CAPTAINPICK",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_INTRO": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_INTRO",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_PICK": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_PICK",
			"value": 31,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT1": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT1",
			"value": 21,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT10": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT10",
			"value": 30,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT2": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT2",
			"value": 22,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT3": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT3",
			"value": 23,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT4": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT4",
			"value": 24,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT5": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT5",
			"value": 25,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT6": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT6",
			"value": 26,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT7": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT7",
			"value": 27,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT8": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT8",
			"value": 28,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CM_SELECT9": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CM_SELECT9",
			"value": 29,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_COUNT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_COUNT",
			"value": 61,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_CUSTOM_PICK_RULES": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_CUSTOM_PICK_RULES",
			"value": 60,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_FH_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_FH_SELECT",
			"value": 34,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_INTRO_SELECT_UNUSED": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_INTRO_SELECT_UNUSED",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_MO_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_MO_SELECT",
			"value": 33,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_NONE": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_NONE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_RD_SELECT_UNUSED": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_RD_SELECT_UNUSED",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_SD_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_SD_SELECT",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HEROPICK_STATE_SELECT_PENALTY": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HEROPICK_STATE_SELECT_PENALTY",
			"value": 59,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HERO_PICK_STATE_ABILITY_DRAFT_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HERO_PICK_STATE_ABILITY_DRAFT_SELECT",
			"value": 55,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HERO_PICK_STATE_ARDM_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HERO_PICK_STATE_ARDM_SELECT",
			"value": 56,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_HERO_PICK_STATE_CUSTOMGAME_SELECT": {
			"class": "DOTA_HeroPickState",
			"name": "DOTA_HERO_PICK_STATE_CUSTOMGAME_SELECT",
			"value": 58,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTA_MOTION_CONTROLLER_PRIORITY": {
		"description": "no description",
		"DOTA_MOTION_CONTROLLER_PRIORITY_HIGH": {
			"class": "DOTA_MOTION_CONTROLLER_PRIORITY",
			"name": "DOTA_MOTION_CONTROLLER_PRIORITY_HIGH",
			"value": 3,
			"description": "运动控制器优先级：高",
			"description_lite": "运动控制器优先级：高",
			"example": "No Example Set"
		},
		"DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST": {
			"class": "DOTA_MOTION_CONTROLLER_PRIORITY",
			"name": "DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST",
			"value": 4,
			"description": "运动控制器优先级：最高",
			"description_lite": "运动控制器优先级：最高",
			"example": "No Example Set"
		},
		"DOTA_MOTION_CONTROLLER_PRIORITY_LOW": {
			"class": "DOTA_MOTION_CONTROLLER_PRIORITY",
			"name": "DOTA_MOTION_CONTROLLER_PRIORITY_LOW",
			"value": 1,
			"description": "运动控制器优先级：低",
			"description_lite": "运动控制器优先级：低",
			"example": "No Example Set"
		},
		"DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST": {
			"class": "DOTA_MOTION_CONTROLLER_PRIORITY",
			"name": "DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST",
			"value": 0,
			"description": "运动控制器优先级：最低",
			"description_lite": "运动控制器优先级：最低",
			"example": "No Example Set"
		},
		"DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM": {
			"class": "DOTA_MOTION_CONTROLLER_PRIORITY",
			"name": "DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM",
			"value": 2,
			"description": "运动控制器优先级：中",
			"description_lite": "运动控制器优先级：中",
			"example": "No Example Set"
		}
	},
	"DOTA_RUNES": {
		"description": "no description",
		"DOTA_RUNE_ARCANE": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_ARCANE",
			"value": 6,
			"description_lite": "奥术神符"
		},
		"DOTA_RUNE_BOUNTY": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_BOUNTY",
			"value": 5,
			"description_lite": "赏金神符"
		},
		"DOTA_RUNE_COUNT": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_COUNT",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_RUNE_DOUBLEDAMAGE": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_DOUBLEDAMAGE",
			"value": 0,
			"description_lite": "双倍神符"
		},
		"DOTA_RUNE_HASTE": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_HASTE",
			"value": 1,
			"description_lite": "急速神符"
		},
		"DOTA_RUNE_ILLUSION": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_ILLUSION",
			"value": 2,
			"description_lite": "幻象神符"
		},
		"DOTA_RUNE_INVALID": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_INVALID",
			"value": -1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_RUNE_INVISIBILITY": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_INVISIBILITY",
			"value": 3,
			"description_lite": "隐身神符"
		},
		"DOTA_RUNE_REGENERATION": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_REGENERATION",
			"value": 4,
			"description_lite": "恢复神符"
		},
		"DOTA_RUNE_XP": {
			"class": "DOTA_RUNES",
			"name": "DOTA_RUNE_XP",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTA_SHOP_TYPE": {
		"description": "no description",
		"DOTA_SHOP_CUSTOM": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_CUSTOM",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SHOP_GROUND": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_GROUND",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SHOP_HOME": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_HOME",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SHOP_NEUTRALS": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_NEUTRALS",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SHOP_NONE": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_NONE",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SHOP_SECRET": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_SECRET",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SHOP_SECRET2": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_SECRET2",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SHOP_SIDE": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_SIDE",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_SHOP_SIDE2": {
			"class": "DOTA_SHOP_TYPE",
			"name": "DOTA_SHOP_SIDE2",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTA_UNIT_TARGET_FLAGS": {
		"description": "no description",
		"DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP",
			"value": 65536,
			"description_lite": "检查是否禁用帮助"
		},
		"DOTA_UNIT_TARGET_FLAG_DEAD": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_DEAD",
			"value": 8,
			"description_lite": "死亡单位"
		},
		"DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE",
			"value": 128,
			"description_lite": "迷雾可见"
		},
		"DOTA_UNIT_TARGET_FLAG_INVULNERABLE": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_INVULNERABLE",
			"value": 64,
			"description_lite": "无敌"
		},
		"DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES",
			"value": 16,
			"description_lite": "魔法免疫的敌人"
		},
		"DOTA_UNIT_TARGET_FLAG_MANA_ONLY": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_MANA_ONLY",
			"value": 32768,
			"description_lite": "拥有魔法"
		},
		"DOTA_UNIT_TARGET_FLAG_MELEE_ONLY": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_MELEE_ONLY",
			"value": 4,
			"description_lite": "只有近战"
		},
		"DOTA_UNIT_TARGET_FLAG_NONE": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NONE",
			"value": 0,
			"description_lite": "没有标记"
		},
		"DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS",
			"value": 512,
			"description_lite": "没有远古单位"
		},
		"DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE",
			"value": 16384,
			"description_lite": "没有攻击免疫单位"
		},
		"DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO",
			"value": 131072,
			"description_lite": "没有英雄级普通单位"
		},
		"DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED",
			"value": 2048,
			"description_lite": "没有被支配的单位"
		},
		"DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS",
			"value": 8192,
			"description_lite": "没有幻象"
		},
		"DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES",
			"value": 32,
			"description_lite": "没有魔法免疫的单位"
		},
		"DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED",
			"value": 524288,
			"description_lite": "没有噩梦状态单位"
		},
		"DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED",
			"value": 4096,
			"description_lite": "没有召唤物"
		},
		"DOTA_UNIT_TARGET_FLAG_NO_INVIS": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_NO_INVIS",
			"value": 256,
			"description_lite": "没有隐身单位"
		},
		"DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD",
			"value": 262144,
			"description_lite": "不在游戏中的单位"
		},
		"DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED",
			"value": 1024,
			"description_lite": "玩家控制的单位"
		},
		"DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES",
			"value": 1048576,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_UNIT_TARGET_FLAG_RANGED_ONLY": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_RANGED_ONLY",
			"value": 2,
			"description_lite": "只有远程"
		},
		"DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS": {
			"class": "DOTA_UNIT_TARGET_FLAGS",
			"name": "DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS",
			"value": 2097152,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"DOTA_UNIT_TARGET_TEAM": {
		"description": "no description",
		"DOTA_UNIT_TARGET_TEAM_BOTH": {
			"class": "DOTA_UNIT_TARGET_TEAM",
			"name": "DOTA_UNIT_TARGET_TEAM_BOTH",
			"value": 3,
			"description_lite": "双方队伍"
		},
		"DOTA_UNIT_TARGET_TEAM_CUSTOM": {
			"class": "DOTA_UNIT_TARGET_TEAM",
			"name": "DOTA_UNIT_TARGET_TEAM_CUSTOM",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_UNIT_TARGET_TEAM_ENEMY": {
			"class": "DOTA_UNIT_TARGET_TEAM",
			"name": "DOTA_UNIT_TARGET_TEAM_ENEMY",
			"value": 2,
			"description_lite": "敌方队伍"
		},
		"DOTA_UNIT_TARGET_TEAM_FRIENDLY": {
			"class": "DOTA_UNIT_TARGET_TEAM",
			"name": "DOTA_UNIT_TARGET_TEAM_FRIENDLY",
			"value": 1,
			"description_lite": "友方队伍"
		},
		"DOTA_UNIT_TARGET_TEAM_NONE": {
			"class": "DOTA_UNIT_TARGET_TEAM",
			"name": "DOTA_UNIT_TARGET_TEAM_NONE",
			"value": 0,
			"description_lite": "没有队伍"
		}
	},
	"DOTA_UNIT_TARGET_TYPE": {
		"description": "no description",
		"DOTA_UNIT_TARGET_ALL": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_ALL",
			"value": 55,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_UNIT_TARGET_BASIC": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_BASIC",
			"value": 18,
			"description_lite": "DOTA_UNIT_TARGET_COURIER + DOTA_UNIT_TARGET_CREEP"
		},
		"DOTA_UNIT_TARGET_BUILDING": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_BUILDING",
			"value": 4,
			"description_lite": "以防御塔为目标"
		},
		"DOTA_UNIT_TARGET_COURIER": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_COURIER",
			"value": 16,
			"description_lite": "信使目标"
		},
		"DOTA_UNIT_TARGET_CREEP": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_CREEP",
			"value": 2,
			"description_lite": "普通单位目标"
		},
		"DOTA_UNIT_TARGET_CUSTOM": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_CUSTOM",
			"value": 128,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_UNIT_TARGET_HERO": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_HERO",
			"value": 1,
			"description_lite": "英雄目标"
		},
		"DOTA_UNIT_TARGET_NONE": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_NONE",
			"value": 0,
			"description_lite": "没有目标"
		},
		"DOTA_UNIT_TARGET_OTHER": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_OTHER",
			"value": 32,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_UNIT_TARGET_TREE": {
			"class": "DOTA_UNIT_TARGET_TYPE",
			"name": "DOTA_UNIT_TARGET_TREE",
			"value": 64,
			"description_lite": "以树为目标"
		}
	},
	"DamageCategory_t": {
		"description": "no description",
		"DOTA_DAMAGE_CATEGORY_ATTACK": {
			"class": "DamageCategory_t",
			"name": "DOTA_DAMAGE_CATEGORY_ATTACK",
			"value": 1,
			"description_lite": "攻击伤害类型"
		},
		"DOTA_DAMAGE_CATEGORY_SPELL": {
			"class": "DamageCategory_t",
			"name": "DOTA_DAMAGE_CATEGORY_SPELL",
			"value": 0,
			"description_lite": "施法伤害类型"
		}
	},
	"DotaDefaultUIElement_t": {
		"description": "no description",
		"DOTA_DEFAULT_UI_ACTION_MINIMAP": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_ACTION_MINIMAP",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_ACTION_PANEL": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_ACTION_PANEL",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_CUSTOMUI_BEHIND_HUD_ELEMENTS": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_CUSTOMUI_BEHIND_HUD_ELEMENTS",
			"value": 28,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_ELEMENT_COUNT": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_ELEMENT_COUNT",
			"value": 29,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_ENDGAME": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_ENDGAME",
			"value": 22,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_ENDGAME_CHAT": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_ENDGAME_CHAT",
			"value": 23,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK",
			"value": 16,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME",
			"value": 15,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS",
			"value": 14,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_INVALID": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_INVALID",
			"value": -1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_INVENTORY_COURIER": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_INVENTORY_COURIER",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_INVENTORY_GOLD": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_INVENTORY_GOLD",
			"value": 11,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_INVENTORY_ITEMS": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_INVENTORY_ITEMS",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_INVENTORY_PANEL": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_INVENTORY_PANEL",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_INVENTORY_PROTECT": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_INVENTORY_PROTECT",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_INVENTORY_QUICKBUY": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_INVENTORY_QUICKBUY",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_INVENTORY_SHOP": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_INVENTORY_SHOP",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_KILLCAM": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_KILLCAM",
			"value": 26,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_PREGAME_STRATEGYUI": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_PREGAME_STRATEGYUI",
			"value": 25,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_QUICK_STATS": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_QUICK_STATS",
			"value": 24,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_SHOP_COMMONITEMS": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_SHOP_COMMONITEMS",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS",
			"value": 12,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_TOP_BAR": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_TOP_BAR",
			"value": 27,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND",
			"value": 18,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_TOP_BAR_DIRE_TEAM": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_TOP_BAR_DIRE_TEAM",
			"value": 20,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_TOP_BAR_RADIANT_TEAM": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_TOP_BAR_RADIANT_TEAM",
			"value": 19,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_TOP_BAR_SCORE": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_TOP_BAR_SCORE",
			"value": 21,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_TOP_HEROES": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_TOP_HEROES",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_TOP_MENU_BUTTONS": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_TOP_MENU_BUTTONS",
			"value": 17,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_DEFAULT_UI_TOP_TIMEOFDAY": {
			"class": "DotaDefaultUIElement_t",
			"name": "DOTA_DEFAULT_UI_TOP_TIMEOFDAY",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"EDOTA_ModifyGold_Reason": {
		"description": "no description",
		"DOTA_ModifyGold_AbandonedRedistribute": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_AbandonedRedistribute",
			"value": 5,
			"description": "队友掉线后分配的金钱",
			"description_lite": "队友掉线后分配的金钱",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_AbilityCost": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_AbilityCost",
			"value": 7,
			"description": "技能消耗",
			"description_lite": "技能消耗",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_AbilityGold": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_AbilityGold",
			"value": 19,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_BountyRune": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_BountyRune",
			"value": 17,
			"description": "赏金符",
			"description_lite": "赏金符",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_Building": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_Building",
			"value": 11,
			"description": "建筑金钱奖励",
			"description_lite": "建筑金钱奖励",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_Buyback": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_Buyback",
			"value": 2,
			"description": "买活消耗",
			"description_lite": "买活消耗",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_CheatCommand": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_CheatCommand",
			"value": 8,
			"description": "作弊指令",
			"description_lite": "作弊指令",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_CourierKill": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_CourierKill",
			"value": 16,
			"description": "信使击杀",
			"description_lite": "信使击杀",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_CreepKill": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_CreepKill",
			"value": 13,
			"description": "杀怪金钱奖励",
			"description_lite": "杀怪金钱奖励",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_Death": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_Death",
			"value": 1,
			"description": "死亡金钱损失",
			"description_lite": "死亡金钱损失",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_GameTick": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_GameTick",
			"value": 10,
			"description": "固定工资",
			"description_lite": "固定工资",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_HeroKill": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_HeroKill",
			"value": 12,
			"description": "英雄击杀",
			"description_lite": "英雄击杀",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_NeutralKill": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_NeutralKill",
			"value": 14,
			"description": "野怪击杀",
			"description_lite": "野怪击杀",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_PurchaseConsumable": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_PurchaseConsumable",
			"value": 3,
			"description": "购买消耗品",
			"description_lite": "购买消耗品",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_PurchaseItem": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_PurchaseItem",
			"value": 4,
			"description": "购买物品",
			"description_lite": "购买物品",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_RoshanKill": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_RoshanKill",
			"value": 15,
			"description": "肉山击杀",
			"description_lite": "肉山击杀",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_SelectionPenalty": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_SelectionPenalty",
			"value": 9,
			"description": "选择英雄超时金钱惩罚",
			"description_lite": "选择英雄超时金钱惩罚",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_SellItem": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_SellItem",
			"value": 6,
			"description": "出售物品",
			"description_lite": "出售物品",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_SharedGold": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_SharedGold",
			"value": 18,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_Unspecified": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_Unspecified",
			"value": 0,
			"description": "未指定",
			"description_lite": "未指定",
			"example": "No Example Set"
		},
		"DOTA_ModifyGold_WardKill": {
			"class": "EDOTA_ModifyGold_Reason",
			"name": "DOTA_ModifyGold_WardKill",
			"value": 20,
			"description": "排眼金钱奖励",
			"description_lite": "排眼金钱奖励",
			"example": "No Example Set"
		}
	},
	"EDOTA_ModifyXP_Reason": {
		"description": "no description",
		"DOTA_ModifyXP_CreepKill": {
			"class": "EDOTA_ModifyXP_Reason",
			"name": "DOTA_ModifyXP_CreepKill",
			"value": 2,
			"description": "杀怪经验奖励",
			"description_lite": "杀怪经验奖励",
			"example": "No Example Set"
		},
		"DOTA_ModifyXP_HeroKill": {
			"class": "EDOTA_ModifyXP_Reason",
			"name": "DOTA_ModifyXP_HeroKill",
			"value": 1,
			"description": "英雄击杀经验奖励",
			"description_lite": "英雄击杀经验奖励",
			"example": "No Example Set"
		},
		"DOTA_ModifyXP_MAX": {
			"class": "EDOTA_ModifyXP_Reason",
			"name": "DOTA_ModifyXP_MAX",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ModifyXP_Outpost": {
			"class": "EDOTA_ModifyXP_Reason",
			"name": "DOTA_ModifyXP_Outpost",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"DOTA_ModifyXP_RoshanKill": {
			"class": "EDOTA_ModifyXP_Reason",
			"name": "DOTA_ModifyXP_RoshanKill",
			"value": 3,
			"description": "肉山击杀经验奖励",
			"description_lite": "肉山击杀经验奖励",
			"example": "No Example Set"
		},
		"DOTA_ModifyXP_TomeOfKnowledge": {
			"class": "EDOTA_ModifyXP_Reason",
			"name": "DOTA_ModifyXP_TomeOfKnowledge",
			"value": 4,
			"description": "经验书奖励",
			"description_lite": "经验书奖励",
			"example": "No Example Set"
		},
		"DOTA_ModifyXP_Unspecified": {
			"class": "EDOTA_ModifyXP_Reason",
			"name": "DOTA_ModifyXP_Unspecified",
			"value": 0,
			"description": "未指定",
			"description_lite": "未指定",
			"example": "No Example Set"
		}
	},
	"EShareAbility": {
		"description": "no description",
		"ITEM_FULLY_SHAREABLE": {
			"class": "EShareAbility",
			"name": "ITEM_FULLY_SHAREABLE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ITEM_NOT_SHAREABLE": {
			"class": "EShareAbility",
			"name": "ITEM_NOT_SHAREABLE",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ITEM_PARTIALLY_SHAREABLE": {
			"class": "EShareAbility",
			"name": "ITEM_PARTIALLY_SHAREABLE",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"GameActivity_t": {
		"description": "no description",
		"ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END",
			"value": 1580,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START",
			"value": 1572,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ALCHEMIST_CONCOCTION": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ALCHEMIST_CONCOCTION",
			"value": 1573,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ALCHEMIST_CONCOCTION_THROW": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ALCHEMIST_CONCOCTION_THROW",
			"value": 1579,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_AMBUSH": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_AMBUSH",
			"value": 1627,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ANCESTRAL_SPIRIT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ANCESTRAL_SPIRIT",
			"value": 1677,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ARCTIC_BURN_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ARCTIC_BURN_END",
			"value": 1682,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_AREA_DENY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_AREA_DENY",
			"value": 1661,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ATTACK": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ATTACK",
			"value": 1503,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ATTACK2": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ATTACK2",
			"value": 1504,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ATTACK_EVENT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ATTACK_EVENT",
			"value": 1505,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ATTACK_EVENT_BASH": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ATTACK_EVENT_BASH",
			"value": 1705,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_AW_MAGNETIC_FIELD": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_AW_MAGNETIC_FIELD",
			"value": 1707,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_BELLYACHE_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_BELLYACHE_END",
			"value": 1614,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_BELLYACHE_LOOP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_BELLYACHE_LOOP",
			"value": 1613,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_BELLYACHE_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_BELLYACHE_START",
			"value": 1612,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_BLINK_DAGGER": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_BLINK_DAGGER",
			"value": 1732,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_BLINK_DAGGER_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_BLINK_DAGGER_END",
			"value": 1733,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_BRIDGE_DESTROY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_BRIDGE_DESTROY",
			"value": 1640,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_BRIDGE_THREAT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_BRIDGE_THREAT",
			"value": 1650,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAGED_CREEP_RAGE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAGED_CREEP_RAGE",
			"value": 1644,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAGED_CREEP_RAGE_OUT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAGED_CREEP_RAGE_OUT",
			"value": 1645,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAGED_CREEP_SMASH": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAGED_CREEP_SMASH",
			"value": 1646,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAGED_CREEP_SMASH_OUT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAGED_CREEP_SMASH_OUT",
			"value": 1647,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CANCEL_SIREN_SONG": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CANCEL_SIREN_SONG",
			"value": 1599,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAPTURE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAPTURE",
			"value": 1533,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAPTURE_CARD": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAPTURE_CARD",
			"value": 1717,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAPTURE_PET": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAPTURE_PET",
			"value": 1698,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAPTURE_RARE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAPTURE_RARE",
			"value": 1706,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_1": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_1",
			"value": 1510,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_1_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_1_END",
			"value": 1540,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_2": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_2",
			"value": 1511,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_2_ALLY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_2_ALLY",
			"value": 1748,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_2_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_2_END",
			"value": 1541,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_2_ES_ROLL": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_2_ES_ROLL",
			"value": 1653,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END",
			"value": 1654,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START",
			"value": 1652,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_3": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_3",
			"value": 1512,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_3_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_3_END",
			"value": 1542,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_4": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_4",
			"value": 1513,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_4_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_4_END",
			"value": 1543,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_5": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_5",
			"value": 1514,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_6": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_6",
			"value": 1515,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_7": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_7",
			"value": 1598,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ABILITY_ROT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ABILITY_ROT",
			"value": 1547,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ALACRITY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ALACRITY",
			"value": 1585,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ALACRITY_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ALACRITY_ORB",
			"value": 1741,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_BURROW_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_BURROW_END",
			"value": 1702,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_CHAOS_METEOR": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_CHAOS_METEOR",
			"value": 1586,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_CHAOS_METEOR_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_CHAOS_METEOR_ORB",
			"value": 1742,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_COLD_SNAP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_COLD_SNAP",
			"value": 1581,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_COLD_SNAP_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_COLD_SNAP_ORB",
			"value": 1737,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_DEAFENING_BLAST": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_DEAFENING_BLAST",
			"value": 1590,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_DEAFENING_BLAST_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_DEAFENING_BLAST_ORB",
			"value": 1746,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_DRAGONBREATH": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_DRAGONBREATH",
			"value": 1538,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_EMP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_EMP",
			"value": 1584,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_EMP_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_EMP_ORB",
			"value": 1740,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_FORGE_SPIRIT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_FORGE_SPIRIT",
			"value": 1588,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_FORGE_SPIRIT_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_FORGE_SPIRIT_ORB",
			"value": 1744,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_GHOST_SHIP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_GHOST_SHIP",
			"value": 1708,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_GHOST_WALK": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_GHOST_WALK",
			"value": 1582,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_GHOST_WALK_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_GHOST_WALK_ORB",
			"value": 1738,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ICE_WALL": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ICE_WALL",
			"value": 1589,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_ICE_WALL_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_ICE_WALL_ORB",
			"value": 1745,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_LIFE_BREAK_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_LIFE_BREAK_END",
			"value": 1564,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_LIFE_BREAK_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_LIFE_BREAK_START",
			"value": 1563,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_REFRACTION": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_REFRACTION",
			"value": 1597,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_SUN_STRIKE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_SUN_STRIKE",
			"value": 1587,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_SUN_STRIKE_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_SUN_STRIKE_ORB",
			"value": 1743,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_TORNADO": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_TORNADO",
			"value": 1583,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_TORNADO_ORB": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_TORNADO_ORB",
			"value": 1739,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CAST_WILD_AXES_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CAST_WILD_AXES_END",
			"value": 1562,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CENTAUR_STAMPEDE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CENTAUR_STAMPEDE",
			"value": 1611,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_ABILITY_1": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_ABILITY_1",
			"value": 1520,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_ABILITY_2": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_ABILITY_2",
			"value": 1521,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_ABILITY_3": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_ABILITY_3",
			"value": 1522,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_ABILITY_4": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_ABILITY_4",
			"value": 1523,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_ABILITY_5": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_ABILITY_5",
			"value": 1524,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_ABILITY_6": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_ABILITY_6",
			"value": 1525,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_ABILITY_7": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_ABILITY_7",
			"value": 1600,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_END_ABILITY_1": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_END_ABILITY_1",
			"value": 1526,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_END_ABILITY_2": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_END_ABILITY_2",
			"value": 1527,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_END_ABILITY_3": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_END_ABILITY_3",
			"value": 1528,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_END_ABILITY_4": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_END_ABILITY_4",
			"value": 1529,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_END_ABILITY_5": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_END_ABILITY_5",
			"value": 1530,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHANNEL_END_ABILITY_6": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHANNEL_END_ABILITY_6",
			"value": 1531,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CHILLING_TOUCH": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CHILLING_TOUCH",
			"value": 1673,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_COLD_FEET": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_COLD_FEET",
			"value": 1671,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CONSTANT_LAYER": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CONSTANT_LAYER",
			"value": 1532,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CUSTOM_TOWER_ATTACK": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CUSTOM_TOWER_ATTACK",
			"value": 1734,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CUSTOM_TOWER_DIE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CUSTOM_TOWER_DIE",
			"value": 1736,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_CUSTOM_TOWER_IDLE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_CUSTOM_TOWER_IDLE",
			"value": 1735,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_DAGON": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_DAGON",
			"value": 1651,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_DEATH_BY_SNIPER": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_DEATH_BY_SNIPER",
			"value": 1642,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_DEFEAT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_DEFEAT",
			"value": 1592,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_DEFEAT_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_DEFEAT_START",
			"value": 1711,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_DIE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_DIE",
			"value": 1506,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_DIE_SPECIAL": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_DIE_SPECIAL",
			"value": 1548,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_DISABLED": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_DISABLED",
			"value": 1509,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_DP_SPIRIT_SIPHON": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_DP_SPIRIT_SIPHON",
			"value": 1712,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK",
			"value": 1570,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ECHO_SLAM": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ECHO_SLAM",
			"value": 1539,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ENFEEBLE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ENFEEBLE",
			"value": 1674,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ES_STONE_CALLER": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ES_STONE_CALLER",
			"value": 1714,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_FATAL_BONDS": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_FATAL_BONDS",
			"value": 1675,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_FLAIL": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_FLAIL",
			"value": 1508,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_FLEE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_FLEE",
			"value": 1685,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_FLINCH": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_FLINCH",
			"value": 1507,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_FORCESTAFF_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_FORCESTAFF_END",
			"value": 1602,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_FRUSTRATION": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_FRUSTRATION",
			"value": 1630,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_FXANIM": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_FXANIM",
			"value": 1709,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GENERIC_CHANNEL_1": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GENERIC_CHANNEL_1",
			"value": 1728,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GESTURE_ACCENT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GESTURE_ACCENT",
			"value": 1625,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GESTURE_POINT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GESTURE_POINT",
			"value": 1624,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GREET": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GREET",
			"value": 1690,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GREEVIL_BLINK_BONE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GREEVIL_BLINK_BONE",
			"value": 1621,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GREEVIL_CAST": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GREEVIL_CAST",
			"value": 1617,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GREEVIL_HOOK_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GREEVIL_HOOK_END",
			"value": 1620,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GREEVIL_HOOK_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GREEVIL_HOOK_START",
			"value": 1619,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GREEVIL_OVERRIDE_ABILITY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GREEVIL_OVERRIDE_ABILITY",
			"value": 1618,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GS_INK_CREATURE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GS_INK_CREATURE",
			"value": 1730,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_GS_SOUL_CHAIN": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_GS_SOUL_CHAIN",
			"value": 1729,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ICE_VORTEX": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ICE_VORTEX",
			"value": 1672,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_IDLE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_IDLE",
			"value": 1500,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_IDLE_IMPATIENT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_IDLE_IMPATIENT",
			"value": 1636,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP",
			"value": 1648,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_IDLE_RARE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_IDLE_RARE",
			"value": 1501,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_IDLE_SLEEPING": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_IDLE_SLEEPING",
			"value": 1622,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_IDLE_SLEEPING_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_IDLE_SLEEPING_END",
			"value": 1639,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_INTRO": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_INTRO",
			"value": 1623,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_INTRO_LOOP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_INTRO_LOOP",
			"value": 1649,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ITEM_DROP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ITEM_DROP",
			"value": 1697,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ITEM_LOOK": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ITEM_LOOK",
			"value": 1628,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ITEM_PICKUP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ITEM_PICKUP",
			"value": 1696,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP",
			"value": 1575,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_JAKIRO_LIQUIDFIRE_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_JAKIRO_LIQUIDFIRE_START",
			"value": 1574,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_KILLTAUNT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_KILLTAUNT",
			"value": 1535,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_KINETIC_FIELD": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_KINETIC_FIELD",
			"value": 1679,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LASSO_LOOP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LASSO_LOOP",
			"value": 1578,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LEAP_STUN": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LEAP_STUN",
			"value": 1658,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LEAP_SWIPE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LEAP_SWIPE",
			"value": 1659,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LIFESTEALER_ASSIMILATE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LIFESTEALER_ASSIMILATE",
			"value": 1703,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LIFESTEALER_EJECT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LIFESTEALER_EJECT",
			"value": 1704,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LIFESTEALER_INFEST": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LIFESTEALER_INFEST",
			"value": 1576,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LIFESTEALER_INFEST_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LIFESTEALER_INFEST_END",
			"value": 1577,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LIFESTEALER_OPEN_WOUNDS": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LIFESTEALER_OPEN_WOUNDS",
			"value": 1567,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LIFESTEALER_RAGE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LIFESTEALER_RAGE",
			"value": 1566,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LOADOUT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LOADOUT",
			"value": 1601,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LOADOUT_RARE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LOADOUT_RARE",
			"value": 1683,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_LOOK_AROUND": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_LOOK_AROUND",
			"value": 1643,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MAGNUS_SKEWER_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MAGNUS_SKEWER_END",
			"value": 1606,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MAGNUS_SKEWER_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MAGNUS_SKEWER_START",
			"value": 1605,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MEDUSA_STONE_GAZE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MEDUSA_STONE_GAZE",
			"value": 1607,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MIDNIGHT_PULSE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MIDNIGHT_PULSE",
			"value": 1676,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MINI_TAUNT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MINI_TAUNT",
			"value": 1681,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MK_FUR_ARMY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MK_FUR_ARMY",
			"value": 1722,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MK_SPRING_CAST": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MK_SPRING_CAST",
			"value": 1723,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MK_SPRING_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MK_SPRING_END",
			"value": 1719,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MK_SPRING_SOAR": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MK_SPRING_SOAR",
			"value": 1718,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MK_STRIKE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MK_STRIKE",
			"value": 1715,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MK_TREE_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MK_TREE_END",
			"value": 1721,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_MK_TREE_SOAR": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_MK_TREE_SOAR",
			"value": 1720,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_NECRO_GHOST_SHROUD": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_NECRO_GHOST_SHROUD",
			"value": 1724,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_NIAN_INTRO_LEAP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_NIAN_INTRO_LEAP",
			"value": 1660,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_NIAN_PIN_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_NIAN_PIN_END",
			"value": 1657,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_NIAN_PIN_LOOP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_NIAN_PIN_LOOP",
			"value": 1656,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_NIAN_PIN_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_NIAN_PIN_START",
			"value": 1655,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_NIAN_PIN_TO_STUN": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_NIAN_PIN_TO_STUN",
			"value": 1662,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_NIGHTSTALKER_TRANSITION": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_NIGHTSTALKER_TRANSITION",
			"value": 1565,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_NOTICE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_NOTICE",
			"value": 1747,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_OVERRIDE_ABILITY_1": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_OVERRIDE_ABILITY_1",
			"value": 1516,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_OVERRIDE_ABILITY_2": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_OVERRIDE_ABILITY_2",
			"value": 1517,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_OVERRIDE_ABILITY_3": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_OVERRIDE_ABILITY_3",
			"value": 1518,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_OVERRIDE_ABILITY_4": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_OVERRIDE_ABILITY_4",
			"value": 1519,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_OVERRIDE_ARCANA": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_OVERRIDE_ARCANA",
			"value": 1725,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_OVERRIDE_LOADOUT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_OVERRIDE_LOADOUT",
			"value": 1751,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_PET_LEVEL": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_PET_LEVEL",
			"value": 1701,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_PET_WARD_OBSERVER": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_PET_WARD_OBSERVER",
			"value": 1699,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_PET_WARD_SENTRY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_PET_WARD_SENTRY",
			"value": 1700,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_POOF_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_POOF_END",
			"value": 1603,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_PRESENT_ITEM": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_PRESENT_ITEM",
			"value": 1635,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RATTLETRAP_BATTERYASSAULT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RATTLETRAP_BATTERYASSAULT",
			"value": 1549,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RATTLETRAP_HOOKSHOT_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RATTLETRAP_HOOKSHOT_END",
			"value": 1553,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP",
			"value": 1552,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RATTLETRAP_HOOKSHOT_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RATTLETRAP_HOOKSHOT_START",
			"value": 1551,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RATTLETRAP_POWERCOGS": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RATTLETRAP_POWERCOGS",
			"value": 1550,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RAZE_1": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RAZE_1",
			"value": 1663,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RAZE_2": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RAZE_2",
			"value": 1664,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RAZE_3": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RAZE_3",
			"value": 1665,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RELAX_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RELAX_END",
			"value": 1610,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RELAX_LOOP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RELAX_LOOP",
			"value": 1609,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RELAX_LOOP_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RELAX_LOOP_END",
			"value": 1634,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RELAX_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RELAX_START",
			"value": 1608,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ROQUELAIRE_LAND": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ROQUELAIRE_LAND",
			"value": 1615,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_ROQUELAIRE_LAND_IDLE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_ROQUELAIRE_LAND_IDLE",
			"value": 1616,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_RUN": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_RUN",
			"value": 1502,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SAND_KING_BURROW_IN": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SAND_KING_BURROW_IN",
			"value": 1568,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SAND_KING_BURROW_OUT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SAND_KING_BURROW_OUT",
			"value": 1569,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SHAKE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SHAKE",
			"value": 1687,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SHALLOW_GRAVE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SHALLOW_GRAVE",
			"value": 1670,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SHARPEN_WEAPON": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SHARPEN_WEAPON",
			"value": 1637,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SHARPEN_WEAPON_OUT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SHARPEN_WEAPON_OUT",
			"value": 1638,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SHOPKEEPER_PET_INTERACT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SHOPKEEPER_PET_INTERACT",
			"value": 1695,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SHRUG": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SHRUG",
			"value": 1633,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SHUFFLE_L": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SHUFFLE_L",
			"value": 1749,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SHUFFLE_R": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SHUFFLE_R",
			"value": 1750,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SLARK_POUNCE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SLARK_POUNCE",
			"value": 1604,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SLEEPING_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SLEEPING_END",
			"value": 1626,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SLIDE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SLIDE",
			"value": 1726,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SLIDE_LOOP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SLIDE_LOOP",
			"value": 1727,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SPAWN": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SPAWN",
			"value": 1534,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SPIRIT_BREAKER_CHARGE_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SPIRIT_BREAKER_CHARGE_END",
			"value": 1594,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE",
			"value": 1593,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_STARTLE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_STARTLE",
			"value": 1629,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_STATIC_STORM": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_STATIC_STORM",
			"value": 1680,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SWIM": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SWIM",
			"value": 1684,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_SWIM_IDLE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_SWIM_IDLE",
			"value": 1688,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TAUNT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TAUNT",
			"value": 1536,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TAUNT_SNIPER": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TAUNT_SNIPER",
			"value": 1641,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TAUNT_SPECIAL": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TAUNT_SPECIAL",
			"value": 1752,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TELEPORT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TELEPORT",
			"value": 1595,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TELEPORT_COOP_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TELEPORT_COOP_END",
			"value": 1693,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TELEPORT_COOP_EXIT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TELEPORT_COOP_EXIT",
			"value": 1694,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TELEPORT_COOP_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TELEPORT_COOP_START",
			"value": 1691,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TELEPORT_COOP_WAIT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TELEPORT_COOP_WAIT",
			"value": 1692,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TELEPORT_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TELEPORT_END",
			"value": 1596,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TELEPORT_END_REACT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TELEPORT_END_REACT",
			"value": 1632,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TELEPORT_REACT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TELEPORT_REACT",
			"value": 1631,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_THIRST": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_THIRST",
			"value": 1537,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_THUNDER_STRIKE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_THUNDER_STRIKE",
			"value": 1678,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TINKER_REARM1": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TINKER_REARM1",
			"value": 1555,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TINKER_REARM2": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TINKER_REARM2",
			"value": 1556,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TINKER_REARM3": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TINKER_REARM3",
			"value": 1557,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TRANSITION": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TRANSITION",
			"value": 1731,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TRICKS_END": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TRICKS_END",
			"value": 1713,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_TROT": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_TROT",
			"value": 1686,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_UNDYING_DECAY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_UNDYING_DECAY",
			"value": 1666,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_UNDYING_SOUL_RIP": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_UNDYING_SOUL_RIP",
			"value": 1667,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_UNDYING_TOMBSTONE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_UNDYING_TOMBSTONE",
			"value": 1668,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_VERSUS": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_VERSUS",
			"value": 1716,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_VICTORY": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_VICTORY",
			"value": 1591,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_VICTORY_START": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_VICTORY_START",
			"value": 1710,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_WAIT_IDLE": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_WAIT_IDLE",
			"value": 1689,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_WEAVERBUG_ATTACH": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_WEAVERBUG_ATTACH",
			"value": 1561,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_WHEEL_LAYER": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_WHEEL_LAYER",
			"value": 1571,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_DOTA_WHIRLING_AXES_RANGED": {
			"class": "GameActivity_t",
			"name": "ACT_DOTA_WHIRLING_AXES_RANGED",
			"value": 1669,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_MIRANA_LEAP_END": {
			"class": "GameActivity_t",
			"name": "ACT_MIRANA_LEAP_END",
			"value": 1544,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE": {
			"class": "GameActivity_t",
			"name": "ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE",
			"value": 1554,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_TINY_AVALANCHE": {
			"class": "GameActivity_t",
			"name": "ACT_TINY_AVALANCHE",
			"value": 1558,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_TINY_GROWL": {
			"class": "GameActivity_t",
			"name": "ACT_TINY_GROWL",
			"value": 1560,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_TINY_TOSS": {
			"class": "GameActivity_t",
			"name": "ACT_TINY_TOSS",
			"value": 1559,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_WAVEFORM_END": {
			"class": "GameActivity_t",
			"name": "ACT_WAVEFORM_END",
			"value": 1546,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"ACT_WAVEFORM_START": {
			"class": "GameActivity_t",
			"name": "ACT_WAVEFORM_START",
			"value": 1545,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"LuaModifierType": {
		"description": "no description",
		"LUA_MODIFIER_INVALID": {
			"class": "LuaModifierType",
			"name": "LUA_MODIFIER_INVALID",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"LUA_MODIFIER_MOTION_BOTH": {
			"class": "LuaModifierType",
			"name": "LUA_MODIFIER_MOTION_BOTH",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"LUA_MODIFIER_MOTION_HORIZONTAL": {
			"class": "LuaModifierType",
			"name": "LUA_MODIFIER_MOTION_HORIZONTAL",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"LUA_MODIFIER_MOTION_NONE": {
			"class": "LuaModifierType",
			"name": "LUA_MODIFIER_MOTION_NONE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"LUA_MODIFIER_MOTION_VERTICAL": {
			"class": "LuaModifierType",
			"name": "LUA_MODIFIER_MOTION_VERTICAL",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"ParticleAttachment_t": {
		"description": "no description",
		"MAX_PATTACH_TYPES": {
			"class": "ParticleAttachment_t",
			"name": "MAX_PATTACH_TYPES",
			"value": 16,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_ABSORIGIN": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_ABSORIGIN",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_ABSORIGIN_FOLLOW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_ABSORIGIN_FOLLOW",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_CENTER_FOLLOW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_CENTER_FOLLOW",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_CUSTOMORIGIN": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_CUSTOMORIGIN",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_CUSTOMORIGIN_FOLLOW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_CUSTOMORIGIN_FOLLOW",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_CUSTOM_GAME_STATE_1": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_CUSTOM_GAME_STATE_1",
			"value": 14,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_EYES_FOLLOW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_EYES_FOLLOW",
			"value": 6,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_HEALTHBAR": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_HEALTHBAR",
			"value": 15,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_INVALID": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_INVALID",
			"value": -1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_MAIN_VIEW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_MAIN_VIEW",
			"value": 11,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_OVERHEAD_FOLLOW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_OVERHEAD_FOLLOW",
			"value": 7,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_POINT": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_POINT",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_POINT_FOLLOW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_POINT_FOLLOW",
			"value": 5,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_RENDERORIGIN_FOLLOW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_RENDERORIGIN_FOLLOW",
			"value": 10,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_ROOTBONE_FOLLOW": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_ROOTBONE_FOLLOW",
			"value": 9,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_WATERWAKE": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_WATERWAKE",
			"value": 12,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"PATTACH_WORLDORIGIN": {
			"class": "ParticleAttachment_t",
			"name": "PATTACH_WORLDORIGIN",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"UnitFilterResult": {
		"description": "no description",
		"UF_FAIL_ANCIENT": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_ANCIENT",
			"value": 9,
			"description_lite": "无法对远古单位施放"
		},
		"UF_FAIL_ATTACK_IMMUNE": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_ATTACK_IMMUNE",
			"value": 22,
			"description_lite": "目标无法被攻击"
		},
		"UF_FAIL_BUILDING": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_BUILDING",
			"value": 6,
			"description_lite": "无法对建筑物施放"
		},
		"UF_FAIL_CONSIDERED_HERO": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_CONSIDERED_HERO",
			"value": 4,
			"description_lite": "技能不能以此英雄为目标"
		},
		"UF_FAIL_COURIER": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_COURIER",
			"value": 7,
			"description_lite": "无法对信使施放"
		},
		"UF_FAIL_CREEP": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_CREEP",
			"value": 5,
			"description_lite": "无法对普通单位施放"
		},
		"UF_FAIL_CUSTOM": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_CUSTOM",
			"value": 23,
			"description_lite": "自定义"
		},
		"UF_FAIL_DEAD": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_DEAD",
			"value": 15,
			"description_lite": "死亡"
		},
		"UF_FAIL_DISABLE_HELP": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_DISABLE_HELP",
			"value": 25,
			"description_lite": "目标设置了禁用帮助"
		},
		"UF_FAIL_DOMINATED": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_DOMINATED",
			"value": 12,
			"description_lite": "无法对被支配单位施放"
		},
		"UF_FAIL_ENEMY": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_ENEMY",
			"value": 2,
			"description_lite": "无法对敌军施放"
		},
		"UF_FAIL_FRIENDLY": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_FRIENDLY",
			"value": 1,
			"description_lite": "无法对友军施放"
		},
		"UF_FAIL_HERO": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_HERO",
			"value": 3,
			"description_lite": "无法对英雄施放"
		},
		"UF_FAIL_ILLUSION": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_ILLUSION",
			"value": 10,
			"description_lite": "技能无法以幻象为目标"
		},
		"UF_FAIL_INVALID_LOCATION": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_INVALID_LOCATION",
			"value": 24,
			"description_lite": "无效目标"
		},
		"UF_FAIL_INVISIBLE": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_INVISIBLE",
			"value": 20,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_INVULNERABLE": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_INVULNERABLE",
			"value": 18,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_IN_FOW": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_IN_FOW",
			"value": 19,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_MAGIC_IMMUNE_ALLY": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_MAGIC_IMMUNE_ALLY",
			"value": 16,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_MAGIC_IMMUNE_ENEMY": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_MAGIC_IMMUNE_ENEMY",
			"value": 17,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_MELEE": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_MELEE",
			"value": 13,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_NIGHTMARED": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_NIGHTMARED",
			"value": 27,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_NOT_PLAYER_CONTROLLED": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_NOT_PLAYER_CONTROLLED",
			"value": 21,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_OBSTRUCTED": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_OBSTRUCTED",
			"value": 28,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_OTHER": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_OTHER",
			"value": 8,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_OUT_OF_WORLD": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_OUT_OF_WORLD",
			"value": 26,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_RANGED": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_RANGED",
			"value": 14,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_FAIL_SUMMONED": {
			"class": "UnitFilterResult",
			"name": "UF_FAIL_SUMMONED",
			"value": 11,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"UF_SUCCESS": {
			"class": "UnitFilterResult",
			"name": "UF_SUCCESS",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"attackfail": {
		"description": "no description",
		"DOTA_ATTACK_RECORD_CANNOT_FAIL": {
			"class": "attackfail",
			"name": "DOTA_ATTACK_RECORD_CANNOT_FAIL",
			"value": 6,
			"description": "必中",
			"description_lite": "必中",
			"example": "No Example Set"
		},
		"DOTA_ATTACK_RECORD_FAIL_BLOCKED_BY_OBSTRUCTION": {
			"class": "attackfail",
			"name": "DOTA_ATTACK_RECORD_FAIL_BLOCKED_BY_OBSTRUCTION",
			"value": 7,
			"description": "被障碍物阻挡",
			"description_lite": "被障碍物阻挡",
			"example": "No Example Set"
		},
		"DOTA_ATTACK_RECORD_FAIL_NO": {
			"class": "attackfail",
			"name": "DOTA_ATTACK_RECORD_FAIL_NO",
			"value": 0,
			"description": "没有丢失",
			"description_lite": "没有丢失",
			"example": "No Example Set"
		},
		"DOTA_ATTACK_RECORD_FAIL_SOURCE_MISS": {
			"class": "attackfail",
			"name": "DOTA_ATTACK_RECORD_FAIL_SOURCE_MISS",
			"value": 2,
			"description": "自身丢失",
			"description_lite": "自身丢失",
			"example": "No Example Set"
		},
		"DOTA_ATTACK_RECORD_FAIL_TARGET_EVADED": {
			"class": "attackfail",
			"name": "DOTA_ATTACK_RECORD_FAIL_TARGET_EVADED",
			"value": 3,
			"description": "目标闪避",
			"description_lite": "目标闪避",
			"example": "No Example Set"
		},
		"DOTA_ATTACK_RECORD_FAIL_TARGET_INVULNERABLE": {
			"class": "attackfail",
			"name": "DOTA_ATTACK_RECORD_FAIL_TARGET_INVULNERABLE",
			"value": 4,
			"description": "目标无敌？",
			"description_lite": "目标无敌？",
			"example": "No Example Set"
		},
		"DOTA_ATTACK_RECORD_FAIL_TARGET_OUT_OF_RANGE": {
			"class": "attackfail",
			"name": "DOTA_ATTACK_RECORD_FAIL_TARGET_OUT_OF_RANGE",
			"value": 5,
			"description": "超出缓冲距离",
			"description_lite": "超出缓冲距离",
			"example": "No Example Set"
		},
		"DOTA_ATTACK_RECORD_FAIL_TERRAIN_MISS": {
			"class": "attackfail",
			"name": "DOTA_ATTACK_RECORD_FAIL_TERRAIN_MISS",
			"value": 1,
			"description": "地形丢失",
			"description_lite": "地形丢失",
			"example": "No Example Set"
		}
	},
	"modifierfunction": {
		"description": "no description",
		"MODIFIER_EVENT_ON_ABILITY_END_CHANNEL": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ABILITY_END_CHANNEL",
			"value": 180,
			"function": "OnAbilityEndChannel",
			"description_lite": "当持续施法结束",
			"example": "function modifier_silencer_last_word:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_EVENT_ON_ABILITY_END_CHANNEL,\n\t}\nend\nfunction modifier_silencer_last_word:OnAbilityEndChannel(params)\n\tif IsServer() then\n\t\tif params.unit == self:GetParent() and not params.ability:IsItem() then\n\t\t\tself:Destroy()\n\t\tend\n\tend\nend"
		},
		"MODIFIER_EVENT_ON_ABILITY_EXECUTED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ABILITY_EXECUTED",
			"value": 177,
			"function": "OnAbilityExecuted",
			"description": "当任意类型技能使用时触发,OnSpellStart前的一瞬间，同帧",
			"description_lite": "当任意类型技能使用时触发",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ABILITY_FULLY_CAST": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ABILITY_FULLY_CAST",
			"value": 178,
			"function": "OnAbilityFullyCast",
			"description": "当技能完成释放时触发，不会触发切换型技能，事件在MODIFIER_EVENT_ON_ABILITY_EXECUTED后触发。",
			"description_lite": "当技能完成释放",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ABILITY_START": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ABILITY_START",
			"value": 176,
			"function": "OnAbilityStart",
			"description": "当技能开始抬手时就会触发，不会触发切换技能类型",
			"description_lite": "当技能开始时",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK",
			"value": 169,
			"function": "OnAttack",
			"description": "整个攻击行为事件",
			"description_lite": "当攻击时",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACKED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACKED",
			"value": 189,
			"function": "OnAttacked",
			"description": "当受到攻击时",
			"description_lite": "当受到攻击",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK_ALLIED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK_ALLIED",
			"value": 172,
			"function": "OnAttackAllied",
			"description": "No Description Set",
			"description_lite": "当攻击友方的时候",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK_CANCELLED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK_CANCELLED",
			"value": 235,
			"function": "OnAttackCancelled",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK_FAIL": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK_FAIL",
			"value": 171,
			"function": "OnAttackFail",
			"description": "当攻击失败时，失败的具体记录查看 常量attackfail",
			"description_lite": "攻击丢失时",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK_FINISHED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK_FINISHED",
			"value": 225,
			"function": "OnAttackFinished",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK_LANDED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK_LANDED",
			"value": 170,
			"function": "OnAttackLanded",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK_RECORD": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK_RECORD",
			"value": 167,
			"function": "OnAttackRecord",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK_RECORD_DESTROY": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK_RECORD_DESTROY",
			"value": 232,
			"function": "OnAttackRecordDestroy",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ATTACK_START": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ATTACK_START",
			"value": 168,
			"function": "OnAttackStart",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_BREAK_INVISIBILITY": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_BREAK_INVISIBILITY",
			"value": 179,
			"function": "OnBreakInvisibility",
			"description": "No Description Set",
			"description_lite": "当打破隐身时（测试无效）",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_BUILDING_KILLED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_BUILDING_KILLED",
			"value": 201,
			"function": "OnBuildingKilled",
			"description": "No Description Set",
			"description_lite": "（测试无效）",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_DAMAGE_CALCULATED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_DAMAGE_CALCULATED",
			"value": 188,
			"function": "OnDamageCalculated",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_DEATH": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_DEATH",
			"value": 190,
			"function": "OnDeath",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_DEATH_PREVENTED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_DEATH_PREVENTED",
			"value": 184,
			"function": "OnDamagePrevented",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_DOMINATED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_DOMINATED",
			"value": 222,
			"function": "OnDominated",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_HEALTH_GAINED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_HEALTH_GAINED",
			"value": 196,
			"function": "OnHealthGained",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_HEAL_RECEIVED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_HEAL_RECEIVED",
			"value": 200,
			"function": "OnHealReceived",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_HERO_KILLED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_HERO_KILLED",
			"value": 199,
			"function": "OnHeroKilled",
			"description": "击杀英雄事件。传进来的参数里attacker为玩家的主英雄，unit为实际凶手单位，target为死亡目标。",
			"description_lite": "击杀英雄事件",
			"example": "function modifier_phantom_assassin_blur_imba:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_EVENT_ON_HERO_KILLED,\n\t}\nend\nfunction modifier_phantom_assassin_blur_imba:OnHeroKilled(params)\n\t-- params.attacker\t玩家控制的主英雄\n\t-- params.unit\t\t实际凶手\n\t-- params.target\t死亡目标\n\tif params.unit == self:GetParent() then\n\t\tif params.unit:HasScepter() then\n\t\t\tfor i = 0, params.unit:GetAbilityCount()-1, 1 do\n\t\t\t\tlocal hAbility = params.unit:GetAbilityByIndex(i)\n\t\t\t\tif hAbility and hAbility:GetAbilityType() == ABILITY_TYPE_BASIC then\t-- 刷新基础技能\n\t\t\t\t\thAbility:EndCooldown()\n\t\t\t\t\thAbility:RefreshCharges()\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend"
		},
		"MODIFIER_EVENT_ON_MANA_GAINED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_MANA_GAINED",
			"value": 197,
			"function": "OnManaGained",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_MODEL_CHANGED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_MODEL_CHANGED",
			"value": 202,
			"function": "OnModelChanged",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_MODIFIER_ADDED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_MODIFIER_ADDED",
			"value": 203,
			"function": "OnModifierAdded",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ORB_EFFECT": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ORB_EFFECT",
			"value": 186,
			"function": "Unused",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_ORDER": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_ORDER",
			"value": 174,
			"function": "OnOrder",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_PROCESS_CLEAVE": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_PROCESS_CLEAVE",
			"value": 187,
			"function": "OnProcessCleave",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_PROCESS_UPGRADE": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_PROCESS_UPGRADE",
			"value": 181,
			"function": "Unused",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_PROJECTILE_DODGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_PROJECTILE_DODGE",
			"value": 173,
			"function": "OnProjectileDodge",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_PROJECTILE_OBSTRUCTION_HIT": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_PROJECTILE_OBSTRUCTION_HIT",
			"value": 233,
			"function": "OnProjectileObstructionHit",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_REFRESH": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_REFRESH",
			"value": 182,
			"function": "Unused",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_RESPAWN": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_RESPAWN",
			"value": 191,
			"function": "OnRespawn",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_SET_LOCATION": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_SET_LOCATION",
			"value": 195,
			"function": "OnSetLocation",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_SPELL_TARGET_READY": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_SPELL_TARGET_READY",
			"value": 166,
			"function": "OnSpellTargetReady",
			"description": "指向性技能选中目标后，OnSpellStart前的一瞬间，同帧",
			"description_lite": "指向性技能选中目标后",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_SPENT_MANA": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_SPENT_MANA",
			"value": 192,
			"function": "OnSpentMana",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_STATE_CHANGED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_STATE_CHANGED",
			"value": 185,
			"function": "OnStateChanged",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_TAKEDAMAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_TAKEDAMAGE",
			"value": 183,
			"function": "OnTakeDamage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_TAKEDAMAGE_KILLCREDIT": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_TAKEDAMAGE_KILLCREDIT",
			"value": 198,
			"function": "OnTakeDamageKillCredit",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_TELEPORTED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_TELEPORTED",
			"value": 194,
			"function": "OnTeleported",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_TELEPORTING": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_TELEPORTING",
			"value": 193,
			"function": "OnTeleporting",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_EVENT_ON_UNIT_MOVED": {
			"class": "modifierfunction",
			"name": "MODIFIER_EVENT_ON_UNIT_MOVED",
			"value": 175,
			"function": "OnUnitMoved",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_FUNCTION_INVALID": {
			"class": "modifierfunction",
			"name": "MODIFIER_FUNCTION_INVALID",
			"value": 255,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_FUNCTION_LAST": {
			"class": "modifierfunction",
			"name": "MODIFIER_FUNCTION_LAST",
			"value": 242,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ABILITY_LAYOUT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ABILITY_LAYOUT",
			"value": 221,
			"function": "GetModifierAbilityLayout",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL",
			"value": 142,
			"function": "GetAbsoluteNoDamageMagical",
			"description": "No Description Set",
			"description_lite": "免疫魔法伤害",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PHYSICAL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PHYSICAL",
			"value": 141,
			"function": "GetAbsoluteNoDamagePhysical",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE",
			"value": 143,
			"function": "GetAbsoluteNoDamagePure",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ABSORB_SPELL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ABSORB_SPELL",
			"value": 131,
			"function": "GetAbsorbSpell",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ALWAYS_ALLOW_ATTACK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ALWAYS_ALLOW_ATTACK",
			"value": 153,
			"function": "GetAlwaysAllowAttack",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ALWAYS_AUTOATTACK_WHILE_HOLD_POSITION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ALWAYS_AUTOATTACK_WHILE_HOLD_POSITION",
			"value": 165,
			"function": "GetAlwaysAutoAttackWhileHoldPosition",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ALWAYS_ETHEREAL_ATTACK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ALWAYS_ETHEREAL_ATTACK",
			"value": 154,
			"function": "GetAllowEtherealAttack",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACKSPEED_BASE_OVERRIDE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACKSPEED_BASE_OVERRIDE",
			"value": 28,
			"function": "GetModifierAttackSpeedBaseOverride",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT",
			"value": 30,
			"function": "GetModifierAttackSpeedBonus_Constant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACKSPEED_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACKSPEED_PERCENTAGE",
			"value": 241,
			"function": "GetModifierAttackSpeedPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACKSPEED_REDUCTION_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACKSPEED_REDUCTION_PERCENTAGE",
			"value": 238,
			"function": "GetModifierAttackSpeedReductionPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACK_ANIM_TIME_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACK_ANIM_TIME_PERCENTAGE",
			"value": 116,
			"function": "GetModifierPercentageAttackAnimTime",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACK_POINT_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACK_POINT_CONSTANT",
			"value": 36,
			"function": "GetModifierAttackPointConstant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACK_RANGE_BASE_OVERRIDE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACK_RANGE_BASE_OVERRIDE",
			"value": 101,
			"function": "GetModifierAttackRangeOverride",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACK_RANGE_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS",
			"value": 102,
			"function": "GetModifierAttackRangeBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_PERCENTAGE",
			"value": 104,
			"function": "GetModifierAttackRangeBonusPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_UNIQUE",
			"value": 103,
			"function": "GetModifierAttackRangeBonusUnique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ATTACK_WHILE_MOVING_TARGET": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ATTACK_WHILE_MOVING_TARGET",
			"value": 240,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_AVOID_DAMAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_AVOID_DAMAGE",
			"value": 64,
			"function": "GetModifierAvoidDamage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_AVOID_SPELL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_AVOID_SPELL",
			"value": 65,
			"function": "GetModifierAvoidSpell",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE",
			"value": 4,
			"function": "GetModifierBaseAttack_BonusDamage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE",
			"value": 53,
			"function": "GetModifierBaseDamageOutgoing_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE_UNIQUE",
			"value": 54,
			"function": "GetModifierBaseDamageOutgoing_PercentageUnique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT",
			"value": 34,
			"function": "GetModifierBaseAttackTimeConstant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT_ADJUST": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT_ADJUST",
			"value": 35,
			"function": "GetModifierBaseAttackTimeConstant_Adjust",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BASE_MANA_REGEN": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BASE_MANA_REGEN",
			"value": 78,
			"function": "GetModifierBaseRegen",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BONUSDAMAGEOUTGOING_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BONUSDAMAGEOUTGOING_PERCENTAGE",
			"value": 37,
			"function": "GetModifierBonusDamageOutgoing_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BONUS_DAY_VISION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BONUS_DAY_VISION",
			"value": 134,
			"function": "GetBonusDayVision",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BONUS_NIGHT_VISION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BONUS_NIGHT_VISION",
			"value": 135,
			"function": "GetBonusNightVision",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BONUS_NIGHT_VISION_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BONUS_NIGHT_VISION_UNIQUE",
			"value": 136,
			"function": "GetBonusNightVisionUnique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BONUS_VISION_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BONUS_VISION_PERCENTAGE",
			"value": 137,
			"function": "GetBonusVisionPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BOT_ATTACK_SCORE_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BOT_ATTACK_SCORE_BONUS",
			"value": 237,
			"function": "BotAttackScoreBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BOUNTY_CREEP_MULTIPLIER": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BOUNTY_CREEP_MULTIPLIER",
			"value": 157,
			"function": "Unused",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_BOUNTY_OTHER_MULTIPLIER": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_BOUNTY_OTHER_MULTIPLIER",
			"value": 158,
			"function": "Unused",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_CAN_ATTACK_TREES": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_CAN_ATTACK_TREES",
			"value": 227,
			"function": "GetModifierCanAttackTrees",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_CASTTIME_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_CASTTIME_PERCENTAGE",
			"value": 115,
			"function": "GetModifierPercentageCasttime",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_CAST_RANGE_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_CAST_RANGE_BONUS",
			"value": 98,
			"function": "GetModifierCastRangeBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_CAST_RANGE_BONUS_STACKING": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_CAST_RANGE_BONUS_STACKING",
			"value": 100,
			"function": "GetModifierCastRangeBonusStacking",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_CAST_RANGE_BONUS_TARGET": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_CAST_RANGE_BONUS_TARGET",
			"value": 99,
			"function": "GetModifierCastRangeBonusTarget",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_CHANGE_ABILITY_VALUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_CHANGE_ABILITY_VALUE",
			"value": 218,
			"function": "GetModifierChangeAbilityValue",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE",
			"value": 113,
			"function": "GetModifierPercentageCooldown",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_ONGOING": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_ONGOING",
			"value": 114,
			"function": "GetModifierPercentageCooldownOngoing",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_COOLDOWN_REDUCTION_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_COOLDOWN_REDUCTION_CONSTANT",
			"value": 32,
			"function": "GetModifierCooldownReduction_Constant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE",
			"value": 38,
			"function": "GetModifierDamageOutgoing_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION",
			"value": 39,
			"function": "GetModifierDamageOutgoing_Percentage_Illusion",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION_AMPLIFY": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION_AMPLIFY",
			"value": 40,
			"function": "GetModifierDamageOutgoing_Percentage_Illusion_Amplify",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DEATHGOLDCOST": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DEATHGOLDCOST",
			"value": 119,
			"function": "GetModifierConstantDeathGoldCost",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DISABLE_AUTOATTACK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DISABLE_AUTOATTACK",
			"value": 133,
			"function": "GetDisableAutoAttack",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DISABLE_HEALING": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DISABLE_HEALING",
			"value": 152,
			"function": "GetDisableHealing",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DISABLE_TURNING": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DISABLE_TURNING",
			"value": 216,
			"function": "GetModifierDisableTurning",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DODGE_PROJECTILE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DODGE_PROJECTILE",
			"value": 160,
			"function": "GetModifierDodgeProjectile",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_DONT_GIVE_VISION_OF_ATTACKER": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_DONT_GIVE_VISION_OF_ATTACKER",
			"value": 230,
			"function": "GetModifierNoVisionOfAttacker",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_EVASION_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_EVASION_CONSTANT",
			"value": 59,
			"function": "GetModifierEvasion_Constant",
			"description": "攻击闪避系数",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_EXP_RATE_BOOST": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_EXP_RATE_BOOST",
			"value": 120,
			"function": "GetModifierPercentageExpRateBoost",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_EXTRA_HEALTH_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_EXTRA_HEALTH_BONUS",
			"value": 88,
			"function": "GetModifierExtraHealthBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_EXTRA_HEALTH_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_EXTRA_HEALTH_PERCENTAGE",
			"value": 90,
			"function": "GetModifierExtraHealthPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_EXTRA_MANA_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_EXTRA_MANA_BONUS",
			"value": 89,
			"function": "GetModifierExtraManaBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_EXTRA_MANA_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_EXTRA_MANA_PERCENTAGE",
			"value": 91,
			"function": "GetModifierExtraManaPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_EXTRA_STRENGTH_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_EXTRA_STRENGTH_BONUS",
			"value": 87,
			"function": "GetModifierExtraStrengthBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_FIXED_ATTACK_RATE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_FIXED_ATTACK_RATE",
			"value": 29,
			"function": "GetModifierFixedAttackRate",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_FIXED_DAY_VISION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_FIXED_DAY_VISION",
			"value": 138,
			"function": "GetFixedDayVision",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_FIXED_NIGHT_VISION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_FIXED_NIGHT_VISION",
			"value": 139,
			"function": "GetFixedNightVision",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_FORCE_DRAW_MINIMAP": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_FORCE_DRAW_MINIMAP",
			"value": 215,
			"function": "GetForceDrawOnMinimap",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_HEALTH_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_HEALTH_BONUS",
			"value": 85,
			"function": "GetModifierHealthBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT",
			"value": 82,
			"function": "GetModifierConstantHealthRegen",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE",
			"value": 83,
			"function": "GetModifierHealthRegenPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE_UNIQUE",
			"value": 84,
			"function": "GetModifierHealthRegenPercentageUnique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_SOURCE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_SOURCE",
			"value": 45,
			"function": "GetModifierHealAmplify_PercentageSource",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_TARGET": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_TARGET",
			"value": 46,
			"function": "GetModifierHealAmplify_PercentageTarget",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_HP_REGEN_AMPLIFY_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_HP_REGEN_AMPLIFY_PERCENTAGE",
			"value": 47,
			"function": "GetModifierHPRegenAmplify_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_IGNORE_ATTACKSPEED_LIMIT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_IGNORE_ATTACKSPEED_LIMIT",
			"value": 31,
			"function": "GetModifierAttackSpeed_Limit",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_IGNORE_CAST_ANGLE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_IGNORE_CAST_ANGLE",
			"value": 217,
			"function": "GetModifierIgnoreCastAngle",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_IGNORE_COOLDOWN": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_IGNORE_COOLDOWN",
			"value": 226,
			"function": "GetModifierIgnoreCooldown",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_IGNORE_MOVESPEED_LIMIT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_IGNORE_MOVESPEED_LIMIT",
			"value": 26,
			"function": "GetModifierIgnoreMovespeedLimit",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_IGNORE_PHYSICAL_ARMOR": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_IGNORE_PHYSICAL_ARMOR",
			"value": 72,
			"function": "GetModifierIgnorePhysicalArmor",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_ILLUSION_LABEL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_ILLUSION_LABEL",
			"value": 145,
			"function": "GetModifierIllusionLabel",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_INCOMING_DAMAGE_ILLUSION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_INCOMING_DAMAGE_ILLUSION",
			"value": 229,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE",
			"value": 55,
			"function": "GetModifierIncomingDamage_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_CONSTANT",
			"value": 57,
			"function": "GetModifierIncomingPhysicalDamageConstant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_PERCENTAGE",
			"value": 56,
			"function": "GetModifierIncomingPhysicalDamage_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_INCOMING_SPELL_DAMAGE_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_INCOMING_SPELL_DAMAGE_CONSTANT",
			"value": 58,
			"function": "GetModifierIncomingSpellDamageConstant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_INVISIBILITY_ATTACK_BEHAVIOR_EXCEPTION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_INVISIBILITY_ATTACK_BEHAVIOR_EXCEPTION",
			"value": 12,
			"function": "GetModifierInvisibilityAttackBehaviorException",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_INVISIBILITY_LEVEL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_INVISIBILITY_LEVEL",
			"value": 11,
			"function": "GetModifierInvisibilityLevel",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_IS_ILLUSION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_IS_ILLUSION",
			"value": 144,
			"function": "GetIsIllusion",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_IS_SCEPTER": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_IS_SCEPTER",
			"value": 207,
			"function": "GetModifierScepter",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_IS_SHARD": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_IS_SHARD",
			"value": 208,
			"function": "GetModifierShard",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_LIFESTEAL_AMPLIFY_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_LIFESTEAL_AMPLIFY_PERCENTAGE",
			"value": 48,
			"function": "GetModifierLifestealRegenAmplify_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_LIFETIME_FRACTION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_LIFETIME_FRACTION",
			"value": 212,
			"function": "GetUnitLifetimeFraction",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MAGICAL_CONSTANT_BLOCK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MAGICAL_CONSTANT_BLOCK",
			"value": 123,
			"function": "GetModifierMagical_ConstantBlock",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BASE_REDUCTION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BASE_REDUCTION",
			"value": 73,
			"function": "GetModifierMagicalResistanceBaseReduction",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS",
			"value": 75,
			"function": "GetModifierMagicalResistanceBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_ILLUSIONS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_ILLUSIONS",
			"value": 76,
			"function": "GetModifierMagicalResistanceBonusIllusions",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DECREPIFY_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DECREPIFY_UNIQUE",
			"value": 77,
			"function": "GetModifierMagicalResistanceDecrepifyUnique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DIRECT_MODIFICATION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DIRECT_MODIFICATION",
			"value": 74,
			"function": "GetModifierMagicalResistanceDirectModification",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MANACOST_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MANACOST_PERCENTAGE",
			"value": 117,
			"function": "GetModifierPercentageManacost",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MANACOST_PERCENTAGE_STACKING": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MANACOST_PERCENTAGE_STACKING",
			"value": 118,
			"function": "GetModifierPercentageManacostStacking",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MANACOST_REDUCTION_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MANACOST_REDUCTION_CONSTANT",
			"value": 33,
			"function": "GetModifierManacostReduction_Constant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MANA_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MANA_BONUS",
			"value": 86,
			"function": "GetModifierManaBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MANA_DRAIN_AMPLIFY_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MANA_DRAIN_AMPLIFY_PERCENTAGE",
			"value": 51,
			"function": "GetModifierManaDrainAmplify_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MANA_REGEN_CONSTANT",
			"value": 79,
			"function": "GetModifierConstantManaRegen",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MANA_REGEN_CONSTANT_UNIQUE",
			"value": 80,
			"function": "GetModifierConstantManaRegenUnique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MANA_REGEN_TOTAL_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MANA_REGEN_TOTAL_PERCENTAGE",
			"value": 81,
			"function": "GetModifierTotalPercentageManaRegen",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MAX_ATTACK_RANGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MAX_ATTACK_RANGE",
			"value": 105,
			"function": "GetModifierMaxAttackRange",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MAX_DEBUFF_DURATION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MAX_DEBUFF_DURATION",
			"value": 162,
			"function": "GetModifierMaxDebuffDuration",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MIN_HEALTH": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MIN_HEALTH",
			"value": 140,
			"function": "GetMinHealth",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MISS_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MISS_PERCENTAGE",
			"value": 66,
			"function": "GetModifierMiss_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MODEL_CHANGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MODEL_CHANGE",
			"value": 205,
			"function": "GetModifierModelChange",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MODEL_SCALE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MODEL_SCALE",
			"value": 206,
			"function": "GetModifierModelScale",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE",
			"value": 23,
			"function": "GetModifierMoveSpeed_Absolute",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MAX": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MAX",
			"value": 25,
			"function": "GetModifierMoveSpeed_AbsoluteMax",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MIN": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MIN",
			"value": 24,
			"function": "GetModifierMoveSpeed_AbsoluteMin",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BASE_OVERRIDE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BASE_OVERRIDE",
			"value": 15,
			"function": "GetModifierMoveSpeedOverride",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT",
			"value": 14,
			"function": "GetModifierMoveSpeedBonus_Constant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE",
			"value": 21,
			"function": "GetModifierMoveSpeedBonus_Constant_Unique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE_2": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE_2",
			"value": 22,
			"function": "GetModifierMoveSpeedBonus_Constant_Unique_2",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE",
			"value": 16,
			"function": "GetModifierMoveSpeedBonus_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE",
			"value": 17,
			"function": "GetModifierMoveSpeedBonus_Percentage_Unique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE_2": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE_2",
			"value": 18,
			"function": "GetModifierMoveSpeedBonus_Percentage_Unique_2",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE",
			"value": 19,
			"function": "GetModifierMoveSpeedBonus_Special_Boots",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE_2": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE_2",
			"value": 20,
			"function": "GetModifierMoveSpeedBonus_Special_Boots_2",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_LIMIT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_LIMIT",
			"value": 27,
			"function": "GetModifierMoveSpeed_Limit",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MOVESPEED_REDUCTION_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MOVESPEED_REDUCTION_PERCENTAGE",
			"value": 239,
			"function": "GetModifierMoveSpeedReductionPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MP_REGEN_AMPLIFY_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MP_REGEN_AMPLIFY_PERCENTAGE",
			"value": 50,
			"function": "GetModifierMPRegenAmplify_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_MP_RESTORE_AMPLIFY_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_MP_RESTORE_AMPLIFY_PERCENTAGE",
			"value": 52,
			"function": "GetModifierMPRestoreAmplify_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_NEGATIVE_EVASION_CONSTANT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_NEGATIVE_EVASION_CONSTANT",
			"value": 60,
			"function": "GetModifierNegativeEvasion_Constant",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL",
			"value": 219,
			"function": "GetModifierOverrideAbilitySpecial",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL_VALUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_OVERRIDE_ABILITY_SPECIAL_VALUE",
			"value": 220,
			"function": "GetModifierOverrideAbilitySpecialValue",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_OVERRIDE_ANIMATION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_OVERRIDE_ANIMATION",
			"value": 128,
			"function": "GetOverrideAnimation",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_OVERRIDE_ANIMATION_RATE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_OVERRIDE_ANIMATION_RATE",
			"value": 130,
			"function": "GetOverrideAnimationRate",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_OVERRIDE_ANIMATION_WEIGHT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_OVERRIDE_ANIMATION_WEIGHT",
			"value": 129,
			"function": "GetOverrideAnimationWeight",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE",
			"value": 9,
			"function": "GetModifierOverrideAttackDamage",
			"description": "重写攻击伤害，伤害效果无视格挡效果。",
			"description_lite": "重写攻击伤害",
			"example": "function modifier_razor_eye_of_the_storm_attack_effect_imba:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE,\n\t}\nend\nfunction modifier_razor_eye_of_the_storm_attack_effect_imba:GetModifierOverrideAttackDamage(params)\n\treturn self:GetAbilitySpecialValueFor(\"damage\")\nend"
		},
		"MODIFIER_PROPERTY_OVERRIDE_ATTACK_MAGICAL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_OVERRIDE_ATTACK_MAGICAL",
			"value": 155,
			"function": "GetOverrideAttackMagical",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PERSISTENT_INVISIBILITY": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PERSISTENT_INVISIBILITY",
			"value": 13,
			"function": "GetModifierPersistentInvisibility",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BASE_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PHYSICAL_ARMOR_BASE_PERCENTAGE",
			"value": 67,
			"function": "GetModifierPhysicalArmorBase_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS",
			"value": 69,
			"function": "GetModifierPhysicalArmorBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE",
			"value": 70,
			"function": "GetModifierPhysicalArmorBonusUnique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE_ACTIVE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE_ACTIVE",
			"value": 71,
			"function": "GetModifierPhysicalArmorBonusUniqueActive",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PHYSICAL_ARMOR_TOTAL_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PHYSICAL_ARMOR_TOTAL_PERCENTAGE",
			"value": 68,
			"function": "GetModifierPhysicalArmorTotal_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK",
			"value": 124,
			"function": "GetModifierPhysical_ConstantBlock",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK_SPECIAL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK_SPECIAL",
			"value": 125,
			"function": "GetModifierPhysical_ConstantBlockSpecial",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE",
			"value": 0,
			"function": "GetModifierPreAttack_BonusDamage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_POST_CRIT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_POST_CRIT",
			"value": 3,
			"function": "GetModifierPreAttack_BonusDamagePostCrit",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_PROC": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_PROC",
			"value": 2,
			"function": "GetModifierPreAttack_BonusDamage_Proc",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_TARGET": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_TARGET",
			"value": 1,
			"function": "GetModifierPreAttack_BonusDamage_Target",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE",
			"value": 121,
			"function": "GetModifierPreAttack_CriticalStrike",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PREATTACK_DEADLY_BLOW": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PREATTACK_DEADLY_BLOW",
			"value": 164,
			"function": "GetModifierPreAttack_DeadlyBlow",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PREATTACK_TARGET_CRITICALSTRIKE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PREATTACK_TARGET_CRITICALSTRIKE",
			"value": 122,
			"function": "GetModifierPreAttack_Target_CriticalStrike",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PRESERVE_PARTICLES_ON_MODEL_CHANGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PRESERVE_PARTICLES_ON_MODEL_CHANGE",
			"value": 224,
			"function": "PreserveParticlesOnModelChanged",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PRE_ATTACK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PRE_ATTACK",
			"value": 10,
			"function": "GetModifierPreAttack",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PRIMARY_STAT_DAMAGE_MULTIPLIER": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PRIMARY_STAT_DAMAGE_MULTIPLIER",
			"value": 163,
			"function": "GetPrimaryStatDamageMultiplier",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL",
			"value": 6,
			"function": "GetModifierProcAttack_BonusDamage_Magical",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PHYSICAL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PHYSICAL",
			"value": 5,
			"function": "GetModifierProcAttack_BonusDamage_Physical",
			"description": "本次伤害增加固定数值",
			"description_lite": "本次伤害增加固定数值",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PURE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PURE",
			"value": 7,
			"function": "GetModifierProcAttack_BonusDamage_Pure",
			"description": "攻击附加额外的纯粹伤害，不会被暴击",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PROCATTACK_FEEDBACK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PROCATTACK_FEEDBACK",
			"value": 8,
			"function": "GetModifierProcAttack_Feedback",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PROJECTILE_NAME": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PROJECTILE_NAME",
			"value": 108,
			"function": "GetModifierProjectileName",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS",
			"value": 106,
			"function": "GetModifierProjectileSpeedBonus",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS_PERCENTAGE",
			"value": 107,
			"function": "GetModifierProjectileSpeedBonusPercentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_PROVIDES_FOW_POSITION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_PROVIDES_FOW_POSITION",
			"value": 213,
			"function": "GetModifierProvidesFOWVision",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_RADAR_COOLDOWN_REDUCTION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_RADAR_COOLDOWN_REDUCTION",
			"value": 209,
			"function": "GetModifierRadarCooldownReduction",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_REFLECT_SPELL": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_REFLECT_SPELL",
			"value": 132,
			"function": "GetReflectSpell",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_REINCARNATION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_REINCARNATION",
			"value": 109,
			"function": "ReincarnateTime",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_RESPAWNTIME": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_RESPAWNTIME",
			"value": 110,
			"function": "GetModifierConstantRespawnTime",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE",
			"value": 111,
			"function": "GetModifierPercentageRespawnTime",
			"description": "复活时间缩减百分比，最大值为1，即没有复活时间。",
			"description_lite": "复活时间缩减百分比",
			"example": "function modifier_respawntime_percent:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE\n\t}\nend\n\nfunction modifier_respawntime_percent:GetModifierPercentageRespawnTime(params)\n\treturn 1 - (0.5 + self:GetParent():GetLevel() / 100)\nend"
		},
		"MODIFIER_PROPERTY_RESPAWNTIME_STACKING": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_RESPAWNTIME_STACKING",
			"value": 112,
			"function": "GetModifierStackingRespawnTime",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_SPELLS_REQUIRE_HP": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SPELLS_REQUIRE_HP",
			"value": 214,
			"function": "GetModifierSpellsRequireHP",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE",
			"value": 43,
			"function": "GetModifierSpellAmplify_Percentage",
			"description": "技能增强百分比，多个效果非线性叠加。",
			"description_lite": "技能增强百分比",
			"example": "-- 30%技能增强\nfunction modifier_item_bloodthorn:DeclareFunctions()\n\treturn {\n\t\tMODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE\n\t}\nend\nfunction modifier_item_bloodthorn:GetModifierSpellAmplify_Percentage(params)\n\treturn 30\nend"
		},
		"MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_CREEP": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_CREEP",
			"value": 42,
			"function": "GetModifierSpellAmplify_PercentageCreep",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_UNIQUE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_UNIQUE",
			"value": 44,
			"function": "GetModifierSpellAmplify_PercentageUnique",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_SPELL_LIFESTEAL_AMPLIFY_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SPELL_LIFESTEAL_AMPLIFY_PERCENTAGE",
			"value": 49,
			"function": "GetModifierSpellLifestealRegenAmplify_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATS_AGILITY_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATS_AGILITY_BONUS",
			"value": 93,
			"function": "GetModifierBonusStats_Agility",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATS_AGILITY_BONUS_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATS_AGILITY_BONUS_PERCENTAGE",
			"value": 96,
			"function": "GetModifierBonusStats_Agility_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATS_INTELLECT_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATS_INTELLECT_BONUS",
			"value": 94,
			"function": "GetModifierBonusStats_Intellect",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATS_INTELLECT_BONUS_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATS_INTELLECT_BONUS_PERCENTAGE",
			"value": 97,
			"function": "GetModifierBonusStats_Intellect_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATS_STRENGTH_BONUS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATS_STRENGTH_BONUS",
			"value": 92,
			"function": "GetModifierBonusStats_Strength",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATS_STRENGTH_BONUS_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATS_STRENGTH_BONUS_PERCENTAGE",
			"value": 95,
			"function": "GetModifierBonusStats_Strength_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATUS_RESISTANCE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATUS_RESISTANCE",
			"value": 61,
			"function": "GetModifierStatusResistance",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATUS_RESISTANCE_CASTER": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATUS_RESISTANCE_CASTER",
			"value": 63,
			"function": "GetModifierStatusResistanceCaster",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STATUS_RESISTANCE_STACKING": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STATUS_RESISTANCE_STACKING",
			"value": 62,
			"function": "GetModifierStatusResistanceStacking",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_STRONG_ILLUSION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_STRONG_ILLUSION",
			"value": 146,
			"function": "GetModifierStrongIllusion",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_SUPER_ILLUSION": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SUPER_ILLUSION",
			"value": 147,
			"function": "GetModifierSuperIllusion",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_SUPER_ILLUSION_WITH_ULTIMATE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SUPER_ILLUSION_WITH_ULTIMATE",
			"value": 148,
			"function": "GetModifierSuperIllusionWithUltimate",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_SUPPRESS_CLEAVE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SUPPRESS_CLEAVE",
			"value": 236,
			"function": "GetSuppressCleave",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_SUPPRESS_TELEPORT": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_SUPPRESS_TELEPORT",
			"value": 234,
			"function": "GetSuppressTeleport",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TEMPEST_DOUBLE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TEMPEST_DOUBLE",
			"value": 223,
			"function": "GetModifierTempestDouble",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TOOLTIP": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TOOLTIP",
			"value": 204,
			"function": "OnTooltip",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TOOLTIP2": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TOOLTIP2",
			"value": 231,
			"function": "OnTooltip2",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TOTALDAMAGEOUTGOING_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TOTALDAMAGEOUTGOING_PERCENTAGE",
			"value": 41,
			"function": "GetModifierTotalDamageOutgoing_Percentage",
			"description": "No Description Set",
			"description_lite": "在当前伤害上返回一个系数，可以是负数",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK",
			"value": 127,
			"function": "GetModifierTotal_ConstantBlock",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK_UNAVOIDABLE_PRE_ARMOR": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK_UNAVOIDABLE_PRE_ARMOR",
			"value": 126,
			"function": "GetModifierPhysical_ConstantBlockUnavoidablePreArmor",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TRANSLATE_ACTIVITY_MODIFIERS": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TRANSLATE_ACTIVITY_MODIFIERS",
			"value": 210,
			"function": "GetActivityTranslationModifiers",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TRANSLATE_ATTACK_SOUND": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TRANSLATE_ATTACK_SOUND",
			"value": 211,
			"function": "GetAttackSound",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TRIGGER_COSMETIC_AND_END_ATTACK": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TRIGGER_COSMETIC_AND_END_ATTACK",
			"value": 161,
			"function": "GetTriggerCosmeticAndEndAttack",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TURN_RATE_OVERRIDE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TURN_RATE_OVERRIDE",
			"value": 151,
			"function": "GetModifierTurnRate_Override",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_TURN_RATE_PERCENTAGE": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_TURN_RATE_PERCENTAGE",
			"value": 150,
			"function": "GetModifierTurnRate_Percentage",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_UNIT_DISALLOW_UPGRADING": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_UNIT_DISALLOW_UPGRADING",
			"value": 159,
			"function": "GetModifierUnitDisllowUpgrading",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_UNIT_STATS_NEEDS_REFRESH": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_UNIT_STATS_NEEDS_REFRESH",
			"value": 156,
			"function": "GetModifierUnitStatsNeedsRefresh",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_VISUAL_Z_DELTA": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_VISUAL_Z_DELTA",
			"value": 228,
			"function": "GetVisualZDelta",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_PROPERTY_XP_DURING_DEATH": {
			"class": "modifierfunction",
			"name": "MODIFIER_PROPERTY_XP_DURING_DEATH",
			"value": 149,
			"function": "GetModifierXPDuringDeath",
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"modifierpriority": {
		"description": "no description",
		"MODIFIER_PRIORITY_HIGH": {
			"class": "modifierpriority",
			"name": "MODIFIER_PRIORITY_HIGH",
			"value": 2,
			"description_lite": "高优先级"
		},
		"MODIFIER_PRIORITY_LOW": {
			"class": "modifierpriority",
			"name": "MODIFIER_PRIORITY_LOW",
			"value": 0,
			"description_lite": "低优先级"
		},
		"MODIFIER_PRIORITY_NORMAL": {
			"class": "modifierpriority",
			"name": "MODIFIER_PRIORITY_NORMAL",
			"value": 1,
			"description_lite": "普通优先级"
		},
		"MODIFIER_PRIORITY_SUPER_ULTRA": {
			"class": "modifierpriority",
			"name": "MODIFIER_PRIORITY_SUPER_ULTRA",
			"value": 4,
			"description_lite": "最高优先级"
		},
		"MODIFIER_PRIORITY_ULTRA": {
			"class": "modifierpriority",
			"name": "MODIFIER_PRIORITY_ULTRA",
			"value": 3,
			"description_lite": "更高优先级"
		}
	},
	"modifierremove": {
		"description": "no description",
		"DOTA_BUFF_REMOVE_ALL": {
			"class": "modifierremove",
			"name": "DOTA_BUFF_REMOVE_ALL",
			"value": 0,
			"description": "移除友军和敌军施加的modifier",
			"description_lite": "移除友军和敌军施加的modifier",
			"example": "hCaster:RemoveAllModifiers(DOTA_BUFF_REMOVE_ALL, true, true, true)"
		},
		"DOTA_BUFF_REMOVE_ALLY": {
			"class": "modifierremove",
			"name": "DOTA_BUFF_REMOVE_ALLY",
			"value": 2,
			"description": "移除友军施加的modifier",
			"description_lite": "移除友军施加的modifier",
			"example": "hCaster:RemoveAllModifiers(DOTA_BUFF_REMOVE_ALLY, true, true, true)"
		},
		"DOTA_BUFF_REMOVE_ENEMY": {
			"class": "modifierremove",
			"name": "DOTA_BUFF_REMOVE_ENEMY",
			"value": 1,
			"description": "移除敌军施加的modifier",
			"description_lite": "移除敌军施加的modifier",
			"example": "hCaster:RemoveAllModifiers(DOTA_BUFF_REMOVE_ENEMY, true, true, true)"
		}
	},
	"modifierstate": {
		"description": "no description",
		"MODIFIER_STATE_ALLOW_PATHING_THROUGH_CLIFFS": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_ALLOW_PATHING_THROUGH_CLIFFS",
			"value": 46,
			"description_lite": "允许在悬崖上通行"
		},
		"MODIFIER_STATE_ALLOW_PATHING_THROUGH_FISSURE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_ALLOW_PATHING_THROUGH_FISSURE",
			"value": 47,
			"description_lite": "允许在沟壑上通行"
		},
		"MODIFIER_STATE_ALLOW_PATHING_THROUGH_TREES": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_ALLOW_PATHING_THROUGH_TREES",
			"value": 36,
			"description_lite": "允许在树木中通行"
		},
		"MODIFIER_STATE_ATTACK_ALLIES": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_ATTACK_ALLIES",
			"value": 45,
			"description_lite": "允许攻击队友"
		},
		"MODIFIER_STATE_ATTACK_IMMUNE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_ATTACK_IMMUNE",
			"value": 2,
			"description_lite": "攻击免疫"
		},
		"MODIFIER_STATE_BLIND": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_BLIND",
			"value": 29,
			"description_lite": "致盲，完全失去视野"
		},
		"MODIFIER_STATE_BLOCK_DISABLED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_BLOCK_DISABLED",
			"value": 12,
			"description_lite": "禁用格挡"
		},
		"MODIFIER_STATE_CANNOT_BE_MOTION_CONTROLLED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_CANNOT_BE_MOTION_CONTROLLED",
			"value": 43,
			"description_lite": "不受运动控制影响"
		},
		"MODIFIER_STATE_CANNOT_MISS": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_CANNOT_MISS",
			"value": 16,
			"description_lite": "不会丢失，无视闪避"
		},
		"MODIFIER_STATE_CANNOT_TARGET_ENEMIES": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_CANNOT_TARGET_ENEMIES",
			"value": 15,
			"description_lite": "禁用单位目标命令"
		},
		"MODIFIER_STATE_COMMAND_RESTRICTED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_COMMAND_RESTRICTED",
			"value": 19,
			"description_lite": "无法执行命令"
		},
		"MODIFIER_STATE_DISARMED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_DISARMED",
			"value": 1,
			"description_lite": "缴械"
		},
		"MODIFIER_STATE_DOMINATED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_DOMINATED",
			"value": 28,
			"description_lite": "支配，可用于过滤是否是支配单位"
		},
		"MODIFIER_STATE_EVADE_DISABLED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_EVADE_DISABLED",
			"value": 13,
			"description_lite": "无法闪避"
		},
		"MODIFIER_STATE_FAKE_ALLY": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_FAKE_ALLY",
			"value": 31,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_STATE_FEARED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_FEARED",
			"value": 41,
			"description_lite": "恐惧"
		},
		"MODIFIER_STATE_FLYING": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_FLYING",
			"value": 23,
			"description_lite": "飞行"
		},
		"MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY",
			"value": 32,
			"description_lite": "贴地飞行"
		},
		"MODIFIER_STATE_FORCED_FLYING_VISION": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_FORCED_FLYING_VISION",
			"value": 44,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_STATE_FROZEN": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_FROZEN",
			"value": 18,
			"description_lite": "冰冻，动作会暂停"
		},
		"MODIFIER_STATE_HEXED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_HEXED",
			"value": 6,
			"description_lite": "妖术，头顶会有妖术进度条"
		},
		"MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS",
			"value": 35,
			"description_lite": "禁用移动与攻击指令"
		},
		"MODIFIER_STATE_IGNORING_STOP_ORDERS": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_IGNORING_STOP_ORDERS",
			"value": 40,
			"description_lite": "禁用停止指令"
		},
		"MODIFIER_STATE_INVISIBLE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_INVISIBLE",
			"value": 7,
			"description_lite": "隐身"
		},
		"MODIFIER_STATE_INVULNERABLE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_INVULNERABLE",
			"value": 8,
			"description_lite": "无敌"
		},
		"MODIFIER_STATE_LAST": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_LAST",
			"value": 49,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_STATE_LOW_ATTACK_PRIORITY": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_LOW_ATTACK_PRIORITY",
			"value": 21,
			"description_lite": "低攻击优先级"
		},
		"MODIFIER_STATE_MAGIC_IMMUNE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_MAGIC_IMMUNE",
			"value": 9,
			"description_lite": "魔法免疫"
		},
		"MODIFIER_STATE_MUTED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_MUTED",
			"value": 4,
			"description_lite": "锁闭，禁用物品，头上有锁闭进度条"
		},
		"MODIFIER_STATE_NIGHTMARED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_NIGHTMARED",
			"value": 11,
			"description_lite": "睡眠，头上会有睡眠进度条"
		},
		"MODIFIER_STATE_NOT_ON_MINIMAP": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_NOT_ON_MINIMAP",
			"value": 20,
			"description_lite": "没有小地图图标"
		},
		"MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES",
			"value": 37,
			"description_lite": "对敌人没有小地图图标"
		},
		"MODIFIER_STATE_NO_HEALTH_BAR": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_NO_HEALTH_BAR",
			"value": 22,
			"description_lite": "没有生命条"
		},
		"MODIFIER_STATE_NO_TEAM_MOVE_TO": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_NO_TEAM_MOVE_TO",
			"value": 25,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_STATE_NO_TEAM_SELECT": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_NO_TEAM_SELECT",
			"value": 26,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_STATE_NO_UNIT_COLLISION": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_NO_UNIT_COLLISION",
			"value": 24,
			"description_lite": "没有碰撞体积"
		},
		"MODIFIER_STATE_OUT_OF_GAME": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_OUT_OF_GAME",
			"value": 30,
			"description_lite": "离开游戏"
		},
		"MODIFIER_STATE_PASSIVES_DISABLED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_PASSIVES_DISABLED",
			"value": 27,
			"description_lite": "破坏，禁用被动，头上有破坏进度条"
		},
		"MODIFIER_STATE_PROVIDES_VISION": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_PROVIDES_VISION",
			"value": 10,
			"description_lite": "提供视野"
		},
		"MODIFIER_STATE_ROOTED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_ROOTED",
			"value": 0,
			"description_lite": "缠绕，无法移动，头上有缠绕进度条"
		},
		"MODIFIER_STATE_SILENCED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_SILENCED",
			"value": 3,
			"description_lite": "沉默，无法施法，头上有沉默进度条"
		},
		"MODIFIER_STATE_SPECIALLY_DENIABLE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_SPECIALLY_DENIABLE",
			"value": 17,
			"description_lite": "可被反补"
		},
		"MODIFIER_STATE_SPECIALLY_UNDENIABLE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_SPECIALLY_UNDENIABLE",
			"value": 48,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_STATE_STUNNED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_STUNNED",
			"value": 5,
			"description_lite": "晕眩，头上有晕眩进度条"
		},
		"MODIFIER_STATE_TAUNTED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_TAUNTED",
			"value": 42,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"MODIFIER_STATE_TETHERED": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_TETHERED",
			"value": 39,
			"description_lite": "束缚，头上有束缚进度条"
		},
		"MODIFIER_STATE_TRUESIGHT_IMMUNE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_TRUESIGHT_IMMUNE",
			"value": 33,
			"description_lite": "真视免疫"
		},
		"MODIFIER_STATE_UNSELECTABLE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_UNSELECTABLE",
			"value": 14,
			"description_lite": "不可选择"
		},
		"MODIFIER_STATE_UNSLOWABLE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_UNSLOWABLE",
			"value": 38,
			"description_lite": "无法减速"
		},
		"MODIFIER_STATE_UNTARGETABLE": {
			"class": "modifierstate",
			"name": "MODIFIER_STATE_UNTARGETABLE",
			"value": 34,
			"description_lite": "无法作为目标"
		}
	},
	"quest_text_replace_values_t": {
		"description": "no description",
		"QUEST_NUM_TEXT_REPLACE_VALUES": {
			"class": "quest_text_replace_values_t",
			"name": "QUEST_NUM_TEXT_REPLACE_VALUES",
			"value": 4,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"QUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE": {
			"class": "quest_text_replace_values_t",
			"name": "QUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"QUEST_TEXT_REPLACE_VALUE_REWARD": {
			"class": "quest_text_replace_values_t",
			"name": "QUEST_TEXT_REPLACE_VALUE_REWARD",
			"value": 3,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"QUEST_TEXT_REPLACE_VALUE_ROUND": {
			"class": "quest_text_replace_values_t",
			"name": "QUEST_TEXT_REPLACE_VALUE_ROUND",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"QUEST_TEXT_REPLACE_VALUE_TARGET_VALUE": {
			"class": "quest_text_replace_values_t",
			"name": "QUEST_TEXT_REPLACE_VALUE_TARGET_VALUE",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"subquest_text_replace_values_t": {
		"description": "no description",
		"SUBQUEST_NUM_TEXT_REPLACE_VALUES": {
			"class": "subquest_text_replace_values_t",
			"name": "SUBQUEST_NUM_TEXT_REPLACE_VALUES",
			"value": 2,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"SUBQUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE": {
			"class": "subquest_text_replace_values_t",
			"name": "SUBQUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE",
			"value": 0,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		},
		"SUBQUEST_TEXT_REPLACE_VALUE_TARGET_VALUE": {
			"class": "subquest_text_replace_values_t",
			"name": "SUBQUEST_TEXT_REPLACE_VALUE_TARGET_VALUE",
			"value": 1,
			"description": "No Description Set",
			"description_lite": "No Description Set",
			"example": "No Example Set"
		}
	},
	"null": {
		"GetLocalPlayerID": {
			"class_cl": "Global",
			"function": "GetLocalPlayerID",
			"return": "int",
			"description": "Get the local player ID.",
			"client": true,
			"params": {}
		},
		"GetLocalPlayerTeam": {
			"class_cl": "Global",
			"function": "GetLocalPlayerTeam",
			"return": "int",
			"description": "Get the local player team.",
			"client": true,
			"params": {}
		},
		"GetAbilityTextureName": {
			"class_cl": "CDOTA_Item_Lua",
			"function": "GetAbilityTextureName",
			"return": "string",
			"description": "Allows code overriding of the item texture shown in the HUD.",
			"client": true,
			"params": {}
		},
		"IsInventoryEnabled": {
			"class_cl": "CDOTA_BaseNPC",
			"function": "IsInventoryEnabled",
			"return": "bool",
			"description": "Does this unit have an inventory.",
			"client": true,
			"params": {}
		},
		"CanOnlyPlayerHeroPickup": {
			"class_cl": "CDOTA_Item",
			"function": "CanOnlyPlayerHeroPickup",
			"return": "bool",
			"client": true,
			"params": {}
		},
		"GetAOERadius": {
			"class_cl": "CDOTA_Item_Lua",
			"function": "GetAOERadius",
			"return": "float",
			"description": "Controls the size of the AOE casting cursor.",
			"client": true,
			"params": {}
		}
	}
}